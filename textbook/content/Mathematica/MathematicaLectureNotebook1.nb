(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    838944,      17368]
NotebookOptionsPosition[    754204,      16031]
NotebookOutlinePosition[    759533,      16121]
CellTagsIndexPosition[    759452,      16116]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"7fb803dd-f987-40e4-973a-0ffb1be4c6ac"],

Cell[CellGroupData[{

Cell["The notebook interface", "Section",
 CellChangeTimes->{{3.7636854966599092`*^9, 
  3.7636855014193497`*^9}},ExpressionUUID->"d6720fa3-d057-4508-a26c-\
423e18daf383"],

Cell[CellGroupData[{

Cell["Very similar to Jupyter notebooks", "Item",
 CellChangeTimes->{{3.7636855187541447`*^9, 
  3.763685527020772*^9}},ExpressionUUID->"9a017c2f-e1c6-42c4-8cd8-\
0d6ea2ec0b71"],

Cell["Enter code/expressions in a cell", "Item",
 CellChangeTimes->{{3.7636855187541447`*^9, 
  3.763685532203046*^9}},ExpressionUUID->"308ebbde-cba3-47ad-b96d-\
30dbf05189a4"],

Cell["\<\
Shift-return (or enter on the numeric keypad) evaluates the expression\
\>", "Item",
 CellChangeTimes->{{3.7636855187541447`*^9, 
  3.763685549835938*^9}},ExpressionUUID->"644cc387-3319-4459-8752-\
71d7ea4c194e"],

Cell["The output is shown below the input cell", "Item",
 CellChangeTimes->{{3.7636855187541447`*^9, 
  3.763685561138834*^9}},ExpressionUUID->"97d9e938-d7ea-437d-abce-\
7b3f36d612f1"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
vBDv/+dlLI5L0dlcUxfAgucfw60zX0JRpXhv6z1upc5b0989eB8xd8eq2Zg8
+S6k5JaJ9xHzx1OunJm4Ho/cfQsuvHQC/rc8Wfx+1YNyjkaSKcYp1inmFQaY
cTqUeke4GB1phYPP4WKz4R/k5uZm02fccsG5fhaxUxGzGm2TxgA3XN3D4xtk
X61zmhi9b+JlqH51FsrEc0yPRRY5WFnKMpE3HwsknHSAy+t/1ePYk3q+F4ze
F3MEKja9gPIKi9cmXC2OtyxtMY7adKrOYWLy8duFt47WfcK20T2c3nkOvrb5
t3h16z8RsDleWC34VPr2a735c3dHO/Ysnofqqy9H4Oar0PDY/ai6agxq77oR
ewvz0L1/fy+fiX99jkUcK8nG09Mm4+nZ61FTY/yNBXMrivHvR6bjiRc/QbXg
bWlpCcrEfRXlpcjKzEROXkEP78Vt9Nj/PHM/pj3xAorE+2RpGR2jFIVFxeJn
iO/zduL+68fjpbmx4jWIY4ufs/ilJzDtkVdQVNHDzGrB3rzcbGRkZKKotFw/
dnl5mf566P8lRQXIED+3uLwKqes+wTXX3Cv4XKqzXf0bEZu3rZmLa8eNxe0P
PIRrJl+Jt5duRk2ganDO0QgyxTjFOsW8Zr42MlyMHop8Djeb3dY0ZDYb5+P/
JP8wJycnm+KqtLS0n0vofff5p9At8mPKm4nJNeMuxSujjsSj3/8uUs//k36b
zujrJ6P5tutQKnLoEjEeTI9XKuJ7/X2Cwz/uz+Z1J/ZldPwvsHvVJSgpyNE5
Yna8csGH+xPu1esYx6eM7mXzcVvO7rXB6GNS/oBxGyciT3yOListMz1eOF1W
VY2MT+Yg4/MlOp+bXn0RrXM/RO20qWhfvhgtr89C82svYfcrz2L3rH+gK2ED
OgSjN2/erMdTn+OVlaGiKBNPTbsST3+wDtUiD+65T+SlZUX4p+Dz3wSfa+uq
8ck7s/DQY4/hyYfvwTVTpmDKdVPx8kefi2OWYPYrj2L8uCtwxcRJuOXOu7Ax
PR8ZGxfhvnufwJYdW/HEtFsx9vIxmHz11bhz5r+QJxi+6KW/4c6HX0aB4G2Z
+Dzz3r+fxA3XTtGPfdP0mVidsL03R0tYvRAzbpqKKddcg5vvuAuzXvq7+P99
2J4t+F/W/29OufaGj9/Cq299hKK8VDx0y2S8vjhJvAdU+H5+RpopxinWKeYV
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
WeL71C3ieElb9OPRe0S2yP1jVq/E8s+XIy4hWb8tN/iz8vPzkBS/AcuXLxev
KwmZGbuwcWMiMrNc/L2ys5C4KR5bd+4Sv+cgnqcRYorxIJ+P0vru+y/v62/H
aKfeu1DrHJHMof2cE7Tq1VD7NOzYbFy34eht27blUr6WlZVlb3GOMwUfsrZt
RXbsOuSsi0G2iPNMcZ9+u9PzVWfnICNbPC81WRwzRngNMlMSxPGyxX2hHy9H
HC8vKxdb05KxbsdarN2xRuRtCcgWx8vNzg399Q3U4v1qxwfvIPGjD1z3qNLn
0A0bNvRw1fLY2cGcs+dza67y2F4uK4/Pzpb+Vjk9OVW2fh6ydR4eOC/ZwZwr
x/R42dkHfr76s/VjS/dlq8d2Oof668we/HM1AkwxTrFOMa/1vW6LE6Ot+qP9
zqH9ZPRAcmcvdY1Q2Uxr8Gmd50+2bt2aS/GUmZnpzuJcZ4jY0y1iyfXzLJ2t
51e6Mwd+vCxxjGzK14Szw3A8z87IQHpmFhYtXYYFCxZg4cKFjp43bx7Wr1+v
Mypir5s9LE0xTrFOMR+MfeO6XV4YHa46RzTyeaC5s13NWe2hs2MzrfM8ZsuW
LbmUD2UInrDDb9rXWeQtrp2Wlhbx18wefqYYp1inmA/Gvh2jzXrv7GrRQ60O
HQ4+h1LXsKo5m7GZzs0Pg/5pcnJyHvPZP4ea50T69bKHpynGKdYp5qX4/4Hm
zGinWnQodeihyGc3vc5e6hp2bD4s6J+tWLEij3pu4+LidFP9k81mR6/t4lSN
Y+N7inGKdYp5Kf5DZbSbOodTT3Q08zlcubNVXcOppmGw+fCgf15WVpbX1NSE
3bt3s9nsKHd9fb3eK0f7hdKezobpdtl0vRTak9+4n74Xn8+Izz+X4t9gtJta
h12dw68c2i/5MS9oljvb1TXM6s0Gm2mNJ60jOq65uTnPdQMYi8WKqPbv36+z
ee/evXo/Jpluo2vAUg1j+/bt+jUsqR+oq6ur9zGkkpIS4vNxwdg/QjvAaLN6
tNs6Rzjq0EOJz+HMnWU20/ukzGZaR3S8eF/Nj/CQY7FYLkVcpuuf0Vom4i99
T3ky1S+o98eoa8TGxupzze3t7fpjiOEi786nmA/Gvsxoo85hMHqwc+jB4rNf
PXVWc4LG/lNWdQ2ZzfQ+KbOZ1hH9kvnMYg0dqXymr9QjRDw2as3kjRs36rfR
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
7/R8ed8BO9MaWNqbJhym/SBp7Lr92Wx2pE1cZj570ojlM+0PQ7yzu59YaCXa
B4z2ZkxKSrI1XSP59NNPx9FHHx0WH3vssfrekPT6nH42mx1p0/in/f7pWi3M
55A1YvlM18Oka67Z3W/Hb7qfrhFEY87OtE8BXQ+ZrsMZDtPe6foeBw4/l82O
BtP4p/HK+bMnjVg+U+6r8ln+TEb8pXFkfK/WQuj5dvk1i8XqEcUP89mTmM+S
aB9cGiPx8fH6vrg0Zuj/ZKohq8+3y69ZLFaPeH7Qs5jPkozPY2SjfmF8b5Y/
M59ZLGcxnz2L+Wxzv139gvnMYrkT89mzRiyfaW6ZrsVjpc2bN1vymeppXH9m
sdyJ+exZI5bPqamp+nXYrETX/LHqj6a8m/htd702FovVI+azZ41YPlOfGjGW
cuFQlZ2drV+bnsViOYv57Fkjls907ul68hkZGY5rBWXRdY6pn8PNdehZLBbz
eQAasXwmtbe362OB1jeJY+p9GjQuVFMdg2rVlDNTX0ddXV04fjyLNSLEfPas
Ec1nEo2BkpISfUwQe43+Z9W0npvqGsR0FovlXsxnzxrxfDZEc4GUJ1utU/VS
p2axWMznAYj5zGKxfBXz2bOYzywWy1cxnz2L+cxisXwV89mzmM8sFstXMZ89
i/nMYrF8FfPZs5jPLBbLVzGfPYv5zGKxfBXz2bOYzywWy1cxnz2L+cxisXwV
89mzmM8sFstXMZ89i/nMYrF8FfPZs5jPLBbLVzGfPYv5zGKxfBXz2bOYzywW
y1cxnz2L+cxisXwV89mzmM8sFstXMZ89i/nMYrF8FfPZs5jPLBbLVzGfPYv5
zGKxfBXz2bOYzywWy1cxnz2L+cxisXwV89mzmM8sFstXMZ89i/nMYrF8lcrn
pqYmncVWfN6xYwfzuUfMZxaL5atkPnd1daGjowPbt29HbGxsPz7TbQUFBdi3
bx/zmfnMYrF8lspnYi99Hx8fr/OYcmYy/Z+4vWfPHs6fe8R8ZrFYvkrlM5lu
q6urQ1paGhITE5GcnIzc3NxeNtNjmM/MZxaL5a/M+Gwwmr62t7frNQ/Kq8nG
/cxn5jOLxfJXVnxWTY8zmM181sV8ZrFYvor57FnMZxaL5auYz57FfGaxWL6K
+exZzGcWi+WrmM+exXxmsVi+ivnsWcxnFovlq5jPnsV8ZrFYvor57FnMZxaL
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
/aZotHhtTbt27WrKyclpys7OZrNNLcbHbrcWnzUbrZyXl9cgWxy7ITMzs158
Lq0Xn13pa10gEKgT7NUtVCv4XSvypVqRT9SI22rEY2pEzhEQrN5GMa/1nxu0
6q0z630OZW23FZ9lBg41Poe6B4dbPss9HEYN+oyvfvWr53/lK1+5WPhS4cuF
rxCe8OUvf3mS8JXCVwtfI3yd8FThG4Vv/tKXvnSr8O3CdwhPE54uPEP4buF7
he8Tvl/4AeEHhR8S/qvwTOGHg34k6EeFHwv6ccV/k/3FL37xCRs/ORgWvz97
ZPkJK4tY+ZvixxU/FvSjwo8E/XDQM4X/KvyQ8IPCDwjfL3yf8L3CdwvPEJ4u
4nSa8B3CtwvfKnyz8I3CU7/+9a9fd/DBB18jfLXwld/4xjcmfe1rX5sgfIXw
5Ycccsil4jEXU6xrPXtvyLVns96NcPHZ4Nlw4bObHg43PdCjNOs5QrN9OOh6
Cn/Qet5bz9Z6PgPRuaS9VP4ifInwZcKXC18hPF54ovAk4SuFrxKeInyt8HXC
1wtPFb5B+Cbhm4O+RfhW4duEbw/6DuE7g54W9F0mnq54BpsdQavj0WzMGuPZ
GN801o1xTzFAsUAxYcQHxQrFDMXO9VpPLFFMUWxRjFGsUcxR7FEMUixSTFJs
UoxSrFLMUuxSDFMsU0xTbMvX7Fb3RXIzN2jV+/wtzXvvRjTy2UsPhxmfQ+3h
kPexk9cRhsrnscLjhCdoPWNlsnaAz9doPePpeu0An2/UDjBa5rMVo2VOm7Fa
jQs2O5K2YrLMZTM2q3ymGKFYkflMsUQxZfCZYo1ijmKPYpBi0Quf5dqz1b7P
ozTn3g23fHbq3RjOfLa6zpVa45D34TC71hWdwz8JjxY+R+vpw6G1+hcJXyx8
qfAYzTqHvlpzZrTKabNc2vCdmjWzrXJsNnuwrI5HdbzKY1nNmVUuO7GZYssq
d6aYvFTriVGKVYpZil2K4dFaT0xTbJtd04pYYMwN2tU2rHo3mM89PkRz7rFz
W4M+UevfB03vq78X/qPW835L59bIoel6knIOTeNBzqFpvND7uhmj1VqHnEsb
nFZzapnXKrPNuM1mR9Lq+JTHrjymDSar9QyVy0ZNQ2UzxRjFmpw7UyzKuTPF
qpE7UwxTLFNMU2yrtQ2zdSlu9q2z6q0jRn1DG7p89rJGxarHzmmO0E0N2qrG
YZVDm9WhzRit1jpkRtvl0zKrVV6rzLayGitsdjjsZuyp41XOk2Uum+XLVmw2
as4qm83qzna5s11tg5hgVdtwOzdIbHLqrXO7NiWa+Gww2ozPoe6T5LYGbVfj
kHNotQ5tVeewYrRdLi1zWmW1ymuV21b8ZrMH0+p4NBuzcp5sMNkNlyl2nNis
1jXM6s5G7uxU2zhOc197drsvkhWfneYGhwKfD9ZC47Ncg6a/qZsaB71/WvVx
mOXQF2o979Myo+kzlspouadDZrQVp1VWy7yWma3aLB7Y7MGy1biUx648pmUm
m3HZjM1GvVlms1HXMNhMMUmxeYHmnDub9W3Y1TZkPhu1jVD2rRuOfA51jtBp
HaFVDi3XONzm0Aaj6TOVXR5t9HWonFbzaYPVZJnVsm+08E1sdgRtNS7V8Svz
mGyMezlfNsuZzdgs581yzTmU3NluTTexwq72LK8bDLW3bijx2aoGbcbnr2sH
+HyI5q4GHUqNw00ObcVoY75QZjTNLdtx2iynNuO14ala/1ybzY4Wq+PzesUy
j81yZTsuUyypbFbnA2U2n6M5586h1Dbcrksx+GxWe3bat24o8dlgtMFnp3WE
djVotzUOqxzarM4h16LN8mi13mHGaTtWy7xWuW3FbzY7klbHpzp+5bFtxmQz
Lqv1DLO8Wa45U2yqbLbLnUOtbVjVng0+u609RxufVU7Lr0nO8wdSg3bqsxul
OefQ6nWvzOocVow26tFmubQZp81YrfJa9jUWVuOAzR5MW41LdfzKPDZjshmX
zXJmud5sxmaruobcs+Emd3bTVxfO2rPMZzuGDlQD5bPbfTjM+qDVGofcx+Em
h7aqczgxWp4zVOsdY7UDfdJy3cOM1TKvZWbL3FatxgGbPZi2Gpfy2JXHtDHO
zZhs1DGMvmY5ZzbqGfJcoBObreoabnJnYsaPtL5ruu32rHPDZ7t13dHEZ5nR
dnxWaxwGn836oK1qHG5zaKs6h1qLtmO00Xtn1DsMThs9HnLdw4zVMq9lZsu+
0oWvYrN9sJuxZzZm5TFtjHMzJht1DKM3Q86ZDTZTjNmxmWKUYvVMrSd2reoa
bnPnwzXn2obR92zwWa1thGPfjUjxWWa0E5/d9HGY1TjofZDeD0dp/XNoq7lC
K0YbefRore+cIfX1qPUOg9NGbVrNqWVWG7yWmS1zW/UkG5vFCJs9UNuNOatx
Ko9lY3zLY15mspErGzVmmctyPYNiTZ0LNPJmKzZbzQmqufMorf+84A+10Nd0
D2RucCjwOdQah9zHYTdPOErrm0OrdQ61n0OeL7RjtFkubXBazanl+ofKa8Pj
NHN2q57AZkfQVuNSHb/y2JZ5LNcv1FxZ5rKaM9uxWZ4PVPs11LqGVe5s1DaI
IXLubLZmMJTa83Dgs9Neo9/QzPnsJodW69BynUPt53BiNH2WGq0dqHeoubTB
aTWnlvNqmdcys2Vuy77ChdXYYLPDYTdjz2zMymNarlsYPDaYrObKMpfVnJli
brTWE4NObFb7NeS6hlXd2c28oJs9N9xcMyXa+eymxuF1ntDIoc325LCqc9gx
mj430TiQe++MXJrGzLla33zajtUyr82YLXNb9eVsdhTZapzKY1llsVmebMZk
I18mG1yWa83yXKAdm63qGnK/s1ndeSDzgm5qG9HIZ79qHFY5tFrnoPdLszqH
XIs2Y7TR12GWS8ucVuseF2h9Wa3yWma2ym2Z3W58GZvtg0MZg+r4lce2Md5l
HstMVrks58sGl9WcmWKSYtOMzSdpB9hsVtcwcme5rhFK7hzO2kYk+eymxmHW
B223n51dDk1/VzWHNpsrNKtFy4z+tdZ3ztDoj1ZzaStOq6xWeS0zW+a2zG7V
F7PZUWSrcSqPZXmMG+Ne5rHKZDsuqzmzwWaKUbmPzmDzL7X+bLaaE7SqOzvl
zl7WdIeSO0eSz+Ho45BzaHXPJLMcepTWvxatMlrtjabzb5VLW3GarLJa5bXM
bJnbqi904YvYbB/sZuxZjVt5bMtjXq5dqEwmW3HZLGdW2WzUNFQ2q/0aTrmz
VU9dOPo2opnPodQ4rOYJQ+nlMJsrHKX1rUUb84V0PuV6NL0P03k36h0Gp+Vc
2ozTMquteC0z2+C24fMdfAGbHUE7jU95LMtjXB77Ko9lJltx2ciZZS7LawPl
ejPFsjofKPdrmM0JhtKzIfPZKncOR20jWvjsVOOQGe1Uh7aaK1T7OVRGy/Vo
ev81GG3k0mZ1aZnTKqudeE0+W/E5Jj6XzY5im41ZdVyP1px5rDJZ5bJaZ5br
GXKfhlneLNecreoaZvvUecmdDT67qW0MNT67mScMpc5h1c9hx2i5907Ope1q
HnasNuO1wWzDZ5l4dAhW44HNDodHh2CzMSyPcXnsyzy2Y7JdLUPOmQ02G30a
dmy26tdwW9dQc2enecFI81mW1c8YaI3DqZfDbG9omdFGLVpl9CjtAKPlOUO5
3iHn0nLNQ617mLFa5bXMbJnbZvxW/Sc2O4psN1bVcS2PeSMOZB47MdmIN6OW
YZYzy2w25gLVmobMZnmPDXVO0FgrGGpPXbhqG37JC5+dGK3yOZQ6h9l8oROj
1XoH2SyXVusev9X6slrltcxsmdsyu838ezY7im03duUxLo99Ix5kHstMVuvL
RrypObMRn3LO7JbN6nyg27qG1566ocRnr/OEag7tltHyfKEVo+kzkFW9Q86l
DU6rdQ+Z1SqvzZgtc1v26Q4+g82OoJ3Gp9mYlse8zGKVxzKT1TqGWstQc2a1
njFKs2ezWS+dFZtDqTu7zZ2jic9uaxxuezns6hxGT7TVfCGdH3nOUO29s8ql
ZU6b1afN8mq5DiIzW+a2ym/Vp7LZUWyrcauOb3nsyyyWaxdynmxWX7bispwz
y2w2eujM2Px9rS+b5V5nr/3O4ao7+6VQ+OyUQzut+Xaqc9jNF5ox2iqXNuO0
mlOb5dUyr9Uc24zdZgx3azUW2Oxw2MtYVMezOt7l3NiMxzKT1VzZLZeNnNmO
zep8oJe6hpe9NoY6n0Otc4Rai3bLaLIVp9WcWs2rDV7LzJa5rbJb5reV1XHO
ZkfSTuNVHd/y2JdjwogTmccGk9Vc2Y7L5FDZ7Kbm7KWuMRT57GWe0G6u0Est
OlyctmK1Ga9lZsvcVtltxnA2e6jZbEzLY16OBTlGZB5bMTlcXHbDZquas9Wc
YDjmBaONz15zaLs6hx2j3eTSbjhtxmqV1zKzZW6b8VtluJ1PYLMjaLfjVB3f
6viXY8OIF5nHZkx2w2U3ObMdm0Opa/iRO/vJZ0PRyGg1l5YZbZVLy5xW69Mq
q814LTNb5rYZv1Wr45nNjmbbjWV13MsxIceKzGOVyWp9WeayVc5sV8+IRjYP
lsLNZy+1aJXRbusddvm0nFOrebUZr2Vmq9w247eZ1bHNZkeTncav2ZiXY0KO
FTMek414M5hsly+7rWfYsTmUmvNw4/NAc2g7Rjvl0U71DitOm+XUal4t85p8
tNaf2yq7rThuZ7PxzmYPlt2OU6txLseCHCOjNHMeq0yWc2UrLjvVM9zmzVZs
Hqp1DUNOryOUuUK3dQ6zPNrgtMFou3qHE6fNcmqZ1Wa8duK26p+w2cPAdmN8
lNafw1Y8Vpks58pOXLarZ1jNBdrNB5rlzlZs9jInGO18JoeL0VZ9HVa5tBOn
rVhtxmuV2TK3rfhtxnE2e6jaanyrcaDGiRxDMo+tmOzEZauc2apPwy82Rxuf
DTm9HidGh1KLtmK0Vb3DLafdsFrmtcxsldtm7HZiOZs9lOw0vtV4kGNFjiE5
tuyY7JbLTrXmUNg8VOsaqgbK53Az2iyXNqt5qPVpO1bLvFaZrXJbZbeZ1fHL
Zg8lO41vNR7UeJFjSY4xOyarXDarZdjVM8LF5uHGZ78ZbVeTtuJ0KKyWeW3H
bCt2O7GczR6KdhrnZrFhxmKZx26ZbMVlp1pzpNgcST5rJq/Fb0aHmkuHwmmZ
1Va8Vpltxm7VZuOVzR7qthvzZjGixpHKY5nJA+WyXc48UthM8spnL4x2U+8I
hdNmrHbDa9nqmLNjuFfbxQGb7dXhHKNWcWAWM048NmNyKFx2U88YKJuHCp9J
kWa0XS5tx2krVtvxWmW2E7+tbDWe2exodChj2yo+1Dgy47EVk+24bJczj3Q2
k9y8Vr8YbVeXtuK0G1arvFaZbcVuNxxns4eT7WLALGbUuFLjzo7JTlx2qmcM
Fpujic8kPxntNZe2qntYsVrltRtmO/HbyXZjm82OtL2MabsYsWOxzGM3TLbi
cqg583BnM8nt6/aT0V44bcdqM15bcTsUjrPZw81O8WAVR2q8WTE5VC5Hks3R
yGfSYDPaLaftWG2XV1sx24ndXnjOZg8lhzL2reLHLNaseGzHZLdcHslsNuQH
o0PJpVVO2+XUTqy2Y7YbfofiUMY7m+23wzGmneLGLNbsmGyXK6tcDjVnHgls
NjRYjB4Ip81YbcZrO26HwnA2eyTZKV6s4swsJu1y5VC5PNLZbCgcjPaSS5tx
2g2rrXhtx+xQ+M1mjyS7iRmreDOLTScme6ll2HF5OLPZ0GAy2ozTblltxWs7
ZnthOJs9Uuw2bqzizixG3TA5HDnzSGAzKZTf0QujQ+F0KKx2YrZXhrPZI8lu
48cuBt0yORQuh5PNQ5nPhiLF6VBZ7YbZobKbzWa7iym7mAyFyczl0BTq7+3E
aDtOe2G1E69D4fZAHek4Yo9sD8YYdxNrdrEaKpOduOyFzcOJzyQvv79fnHZi
dSjMjjTP2exIe6Bx4iYW7WJ5sLk83Ngsyw9GO3HaidWhMDvcDGezh7O9xJSb
WHWKdzfMYC6by69c2g2n3bJ6IMxms9nuHEosuoltv7g8UthsyOvfyC2n3bLa
C7OZ5Wy2tcMRS6HErlseDIQ5I1ED+XuFwulQWR1ubrPZbHN7jctQYn+gnBnp
GkxOD5TXzHE229nhji8vMc5cDp8G+rccCKv95DabzXbvgcZvuDjCMle4/r7h
YDWzm80Ov8Mdl+FkBsudwvk394vXzHz2cHek48NvHjOXByY/zkU085rNZve1
nwxghUd+niNmN5sdWQ92fLP802CfS2Y5mx26Ix2XzOTIKtLnm81mR79Z0aFI
jwM2mx15s4aGIj1O2Gy2/2YNH0V6LLHZbO9mjVxFeuyx2WwWyx9Felyz2dFg
FovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBZrWOj/A5U0cac=
    "], {{0, 282}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 282},
  PlotRange->{{0, 360}, {0, 
   282}}]], "Input",ExpressionUUID->"8d3fba9b-3f9a-437b-92a6-a82fc65533c3"]], \
"Text",
 CellChangeTimes->{{3.7636855187541447`*^9, 
  3.7636855622788973`*^9}},ExpressionUUID->"8ab30ce6-87cd-4177-bc73-\
0369670c9ce0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Input",
 CellChangeTimes->{{3.763771368711082*^9, 3.763771369821373*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.764014677532813*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"a295a4d7-7454-4f64-bc87-63f0eb7a7283"],

Cell[CellGroupData[{

Cell["Simple arithmetic", "Section",
 CellChangeTimes->{{3.763685574591716*^9, 3.763685576433563*^9}}],

Cell["The usual operations work:", "Text",
 CellChangeTimes->{{3.763685582408189*^9, 3.763685585596407*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Input",
 CellChangeTimes->{{3.763685600626112*^9, 3.763685601942911*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.76401467757839*^9}]
}, Open  ]],

Cell[TextData[{
 "Note: division of integers gives ",
 StyleBox["rational numbers",
  FontWeight->"Bold"],
 " not floating point:"
}], "Text",
 CellChangeTimes->{{3.7636856083179073`*^9, 3.7636856276615334`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "/", "3"}]], "Input",
 CellChangeTimes->{{3.763685630030664*^9, 3.763685630372717*^9}}],

Cell[BoxData[
 FractionBox["2", "3"]], "Output",
 CellChangeTimes->{3.764014677617941*^9}]
}, Open  ]],

Cell["\<\
Numbers with decimal points are interpreted as inexact (i.e. double precision \
floating point)\
\>", "Text",
 CellChangeTimes->{{3.763685644725729*^9, 3.763685663459931*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2.", "/", "3."}]], "Input",
 CellChangeTimes->{{3.763685664917327*^9, 3.763685666532707*^9}, {
  3.763771529839903*^9, 3.763771530391975*^9}}],

Cell[BoxData["0.6666666666666666`"], "Output",
 CellChangeTimes->{3.7640146776624403`*^9}]
}, Open  ]],

Cell["\<\
Group expressions using parentheses. Multiplication can be perform by adding \
a space (a gray x will appear):\
\>", "Text",
 CellChangeTimes->{{3.763685671996966*^9, 3.763685693690604*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "*", "3"}]], "Input",
 CellChangeTimes->{{3.763685697434349*^9, 3.7636856984683733`*^9}, {
  3.763771551313325*^9, 3.763771551825307*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.7640146777011003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", " ", "3"}]], "Input",
 CellChangeTimes->{{3.7637715534839277`*^9, 3.763771554457101*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.764014677746668*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ee4e8e54-174b-460d-8edd-ded135ff0276"],

Cell[CellGroupData[{

Cell["More computations", "Section",
 CellChangeTimes->{{3.763685711259555*^9, 3.763685713076756*^9}}],

Cell["There are a huge number of mathematical functions built in:", "Text",
 CellChangeTimes->{{3.7636857154742117`*^9, 3.763685749443437*^9}, {
  3.76368660850178*^9, 3.763686609891474*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "!"}]], "Input",
 CellChangeTimes->{{3.763685752064549*^9, 3.7636857549652023`*^9}}],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.7640146777834053`*^9}]
}, Open  ]],

Cell["Sin, Cos, Log, Exp, Gamma, Erf", "Text",
 CellChangeTimes->{{3.763685757881353*^9, 3.763685761572299*^9}, {
  3.763686426210081*^9, 3.7636864290279284`*^9}}],

Cell["Note:", "Text",
 CellChangeTimes->{{3.763686432573173*^9, 3.763686442180463*^9}}],

Cell[CellGroupData[{

Cell["All built-ins in Mathematica begin with a capital letter", "Item",
 CellChangeTimes->{{3.763686443476613*^9, 3.7636864545695267`*^9}}],

Cell["Even constants, e.g. Pi, E, and I", "Item",
 CellChangeTimes->{{3.763686443476613*^9, 3.7636864728209743`*^9}}],

Cell["\<\
This leaves all lowercase-beginning identifiers for user code\
\>", "Item",
 CellChangeTimes->{{3.763686443476613*^9, 3.763686486676343*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ee87a3fb-8635-450d-9a58-8d981ba1437e"],

Cell[CellGroupData[{

Cell["Function call syntax", "Section",
 CellChangeTimes->{{3.763686494579591*^9, 3.7636864972067432`*^9}}],

Cell[TextData[{
 StyleBox["Unlike in Julia, ",
  FontWeight->"Bold"],
 "functions are called with ",
 StyleBox["square brackets",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.763686500884077*^9, 3.763686509393446*^9}}],

Cell["Examples:", "Text",
 CellChangeTimes->{{3.763686514514667*^9, 3.7636865169692783`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.7636865191138363`*^9, 3.763686520911023*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.764014677828442*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.763686523582664*^9, 3.763686524630611*^9}}],

Cell[BoxData["\[ExponentialE]"], "Output",
 CellChangeTimes->{3.7640146778780937`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", "E", "]"}]], "Input",
 CellChangeTimes->{{3.763686526749248*^9, 3.7636865277026443`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.764014677928206*^9}]
}, Open  ]],

Cell["As in Julia, arguments are separated by commas:", "Text",
 CellChangeTimes->{{3.7636865315063057`*^9, 3.76368654178433*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.763686542922018*^9, 3.7636865492804613`*^9}}],

Cell[BoxData[
 FractionBox["\[Pi]", "4"]], "Output",
 CellChangeTimes->{3.764014677978739*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"09b1957e-ada0-45f6-83be-c5dd4a7730b4"],

Cell[CellGroupData[{

Cell["Variables and expressions", "Section",
 CellChangeTimes->{{3.763686631202243*^9, 3.763686633930944*^9}}],

Cell["Here we begin to see what makes Mathematica different", "Text",
 CellChangeTimes->{{3.763686637441136*^9, 3.7636866431136293`*^9}}],

Cell[TextData[{
 StyleBox["Unlike in Julia,",
  FontWeight->"Bold"],
 " variables may be used ",
 StyleBox["before",
  FontWeight->"Bold"],
 " they are assigned a value"
}], "Text",
 CellChangeTimes->{{3.7636866484350557`*^9, 3.7636866625725927`*^9}}],

Cell["\<\
Mathematica will manipulate the expression with variables held in an \
unevaluated form\
\>", "Text",
 CellChangeTimes->{{3.763686665466861*^9, 3.763686681330172*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQdUW8ma76uZ07ntdgAklFBACBA5JxMMJjhgMM42zjnHdmjb7dDOOeec
s7ExGLAxJhowDp1Pzz1nTp6ZO+fOXeu9teac+97Mev9XVZJAyJKQQCS7aq2/
LbS1U9Xeu377+776SjV1Uc7MfxQIBMs+If/kTFnZf+nSKauH9yZ/jFy4bM6s
hTOmD1y4fMasGUujp/6KfHniHwSCGeT3Hwh44YUXXnjhhRdeeOGFF1544YUX
XnjhhRdeeOGFF1544YUXXnjhhRdeeOGFF1544YUXXnjhhRdeeOGFF1544YUX
XnjhhRdeeOGlS5Z/4OLi4uLi6mDxwkt3Kp19v3BxcXFxcXV38cKLPaWzr1Mu
Li4uLq73Xby8X6WzrzcuLi4uLi4ux8TLu1E6+zri4uLi4uLicq546R6ls68T
Li4uLi4uro4VL12ndPa14Ez9IxcXFxcXVwers/s+zmfdu3R2m3f2/cPFxcXF
xdXV1dl9NS/tWzhzcXFxcXFxvRvibNY9C+cvLi4uLi6ud1+czbpu6c4M9isu
Li4uLq53VN2Z0XhxrHRVBuvse4CLi4uLi6u7qasyGi8tl67AYp19/XJxcXFx
cb3r6gpsxovl0lkc5qxr6wMuLi4uLq73VJ3JaZzNnFs6ksU4b3FxcXFxcXW8
2pvROJe1rXRFDmvL9fYhFxcXFxfXe6aO4rSO4rP3sbQ3jzmbvzrrWv+Ii4uL
i4vLSeoO3OYsPuNcZl/pTBZrD/7q7HuMi4uLi4urs9UenNaZbPY+lM5gsbYy
WFuu0Y+5uLi4uLjeEbUns7WFz9qLzd7l0h481hoWayt/Ofsa/4SLi4uLi6uT
1Rn81hpGawubcS7Tl45iMWdyGGcqLi4uLi4u+9RWVnMmnzmbzd6l4kwecwaL
tYbB7L0mP+Xi4uLi4npP5Axec4TRnMlm7yOXdRaP2cNhjvKXvdfoZ1xcXFxc
XO+42sptjjCaPWzGucx2aW8ecxaLOcpf9lyrn3NxcXFxcb2jaiuz2cNozmSz
953LnMVjzmSxDx38fVv8mJ1tT+bi4uLi4movtcVf6Qhr2erPnclm7zKXdSSP
tcRWH5t870IkJ/IgUphJaSaVBamtyNNBabi4uLi4uLq4HO3brPWRlvpTpZnM
+2TaT9P+mvbbRgazxHMtsRnnso7xVdrDYkYec3N1dZ0hkUhKRCLRb9zc3H4v
Fot/L5VKmcj3VH8gny1KJpPZJblczmT+t7k8PDy4uLi4uLi6tKz1Ydb6vJZk
rY+l/S/th419Mu2faT9N+2vab9P+m/bjgiYuc5TN2suX2R1Ke/CYOffa4jFz
+6gbaePdXl5ef1OpVCDXBcjfcHd3h1AotClyTTgkct1YlYuLi1X17duXi4uL
i4urU2Wrn7LVvznaV7bU99L+mfbTtL+m/Tbtv2k/LtBzmaV+vrU2s3edyzra
V2mNxRp92aR9Z6rV6r/T66BXr1744osv7Bb9PRcXFxcXF5fz5Gg/TPtv2o/T
/ty8jxe0zGYd4cvsqqUtTOZ0HiNy8/DweEw5njMWFxcXFxdX9xPtv2k/Tvtz
gd5W1lFc1p2ZzNk2staymHHMI12udHFx+Wd72/3Tnj3xCdGnBn1iUM9W8txn
n3+BTz7rSf7vyT5/Sj7Tv3t+0brrsifZTk+6/uc9mz4TfdHK7XFxcXFxcXUX
0f5coB8P8JHg7bGfjrLZu24r6ywes5R/4jPDMnXPnj3/2FI7U6b5vOcXSPSQ
4WBUKJ4MSEBFeiKuxsdgqq8Woj592HJ7rxvKXJ/3+AL9I8U4uEyDkoO+KD/q
h8ubvDFpiBxurr0Zo9m7PXp8PXv0hCRWBs+1/vA+HQmf85HQ7gyGR7YavV0p
r3E7IFfbRN9FP/30U/To0aPTj8XZ+vzzz8m5fdbi+X/2WdNvepB16Hr2bJ+u
Z3x3o+vYU4f0N+9iXXNxtZdofy7Qj+P8WNA8/5klNutoLutKpbN5zDRnijFX
Hf2+RSbrQdS7V2/siAjBf47IAsYNJ8rRa7z+c1lqEoLFYmY7a/GaIfzUp09v
7Fzoib+XBQINwUBdkF71IUBtMJ4c9kGgVsjsZy1t74ue5P++veG50g+6l0nw
/SUFAT8NIEqBz88D4PNjCjSnw+GmFTHbWWffM1zdU5Qj+rq4IHlACvx8vOiz
r9OPyRkycmZwaCgSE+LQl9ybln5Hz1csl2Ptxg0IDPDGJ4Tfln21BieO7SHv
UH2txj7Q70Xk2bB2w3oE+HvBxU2EkxcuY/asSc34rpnIOr379MWCZcuQnpZk
/XdcXFzNZMJknwgs56XlXKYvzoohawuPmefPp995tsRk1P5FeQy5hL9GDyMi
XDbKIPp5dDZhsxF4M3gAPIVu+LwFPya1j+1epNGzWA3hsIoA4FmgXvRzJfnu
ZRBenveDSu5C3pNbsG+R5ZpV/vD+p1QEfJcC/1f9m+tNMnRkmc+NKLiQ7fVq
aXtcXGaiTKD11TGW+P3vfotVy6fjo48+tnt9yiWUaSxxC/2O2oLMl9kznoZu
0xob2lpmupxue8b8RXj5+ltUP8uD2N3N4v4+Idy2cPVXKMi/CZHQFZ+R36zY
sBEXzh+FUGg9HpXuw0OpQu3LOgxOI/egmxAXr1/D3LnTCOd+1qwOTI+XcuK0
JcvwpPQhJBIhj3fl4rJDBibzNPTv5vMJtDeXdQcmc2ZMf0s8Zil2zBqP9TD8
rbHFZNTuleQhw98Yf5nw2IihejWyGeGy3BHYHxnC4susbe+Tz3siJdId/8+z
oOY89jRIrzIDm1EuI8xGbWmffGqjX/msJ6T9pIy9jDyme0n0IonJvyFJ/93r
ZPj+kgrPpTr0/JT7Qrjs1+eEx0L79UP58+coLHiA2oYGh5iMsgUdJ69QKNhY
eqOvj9mnyLbpmHaNRsN+Y+4H7N27N1Oz7wzr0t96eHiw7dLPRmbp2bMH+5t+
r1Kpmvn/jOvSv+lysVSK7YcO4+WLWuQ9LMSzp5aZ7AtyT4vIb5/UVGHm9LHs
3Olv+vbpg17k+GzxEuUsuUKJiueVGJQWg08++bTZeRnP2dPTk43rp/xrZFgJ
Ybny+nqMG5VJ1vuk068FLq6uLgOTaQz9ew+B/VxmymbtzWWdyWZdhcdMWYyq
p+F7L1tMRvnqYHQY4623eMycy8bm4LdDM6Byc7VqK6Mx/EdXGGxk5jxWGtCc
y2qD8ctNPyikfdHDSqwaZTLtxkDGW6Y85lPfv1FGLgv4IQW++XFwkbiQPoa/
c3PZp08JC6SPGIm1G76GTC7FteISrFkxwyaTUZ6QKZU4feYM5i1ejHt5eXha
Voa8vDuIjo5k3EH9oCvWrMGTJ09QXl6Ohw8fYNCgAfjggw8wcuxYPCoqIr/P
w71793Dnzl1cvXoZbq4uSM0ZgctXzmH79m0oI9usqCjH5m82Ed7rw/hGpvLE
rgMHUf7sGdluBY4fPQhvLyU+/PBDZE2YhMvXLuDI0SN4/rwGc+bPxcbduxEZ
GohRsxaQbT2EWPw2k31GuDIpaxieE3bz9/XE5z16MkaaNnsOdm9fSxjvUyxZ
/iXmzZtNzu1Tdv6e3j44c/YMYT85pHIPPZOlRpJnyhf4Zt9+jB83mp1r/5QB
uEXOkR4vPZ9Nm9bCzY3co1/QcT+fY/+xEzh2ZAe5Z+2LW+Piep9lYDIvQ//e
06TPN2WzrsBlnVWczWSO8Jgl25iRx74wfKclbfgna+1L7WSlqYn62LFmPJZp
kAmXjcnG30dnI0oqsRpXRv2WZUd99bFj5jxm1FPDsqpA/P1pIML8RFbj/Slb
+V6MgvanAXomM/CYb10Sk5HLKKv5fZsCP/LZ3U/E4/25HBK16VB7Vy8XV9wq
LbWLyRSenmh4+QoNDbXIHTcCCYmJyCt8hLKnRRC59kXS4CzUEC6aNmU8QsPC
sPvoacJEJRCJ3KAm6yaS38fFxWHAwIGoefMdLpw5SPjwI2RPno7f/P4PuHbh
OGKiozFr3gL88k+/xqRxmfjwk0+x5dARPHv2FBkZqUhJTcNjwjmnj+/Fxx99
gLHzF7N1b145jbTUAdBqvZgd8Ff/+I/Inb/MKpN9/NFHWLB6HaoqHjG/JV3+
Eflu1cZNuH39GNnGx9i9dx/hqfWknj5hdjjfgABUVlWSfXgSJpM3MtnHPXvj
Qt59LFowizwnvsClO/dw5tgBRIaHY1TuJLz+8Qfkjs/Bxx9/go8IRy5aQ/Zb
2bTfzr4WuLi6smh/Tvt1Q//+hcA6lxnZzFEu685M1p42stbwWE9BE4/1Mnzn
bYvJaCxZZUaSfUxGeOy/iWLlUqtMRmPDak7qmjOZKY+ZMdl/VQQjyt82k/lc
i2Zx/C0xGY0rCyD/u/u7cybjcljMV+cmdIzJGuqxbOl0/OOvfsXsVP4REXjx
+iUyB8ahV18XeHqqCWsI4SH3QNaEyaiur2F2Jf0YyE/xAVnnqw0b8fjxQ2hU
cnz4wQcYRpis4c0reHspyDY/YtspqKzGV6sWwVUsJttvwIrFMyCTyZkvcMbi
5Xj5up5x4Ni5i8jyF/BUezCmMvo0P/n4I5tMRn/75dfrcfPqUfTt07ORyeh3
1y8fZky2Y9durF+/tpHJfPz9UfasDF5e6reY7MydO1i4YCbhro+hUpPlEjHL
Se4bEIjbJY+xYP4stv1PyPLR8xahqrYK7u4izmRcXC3IwGTehv69l6CJy4xs
1lou6+62stbGkTnCY9bi+e3hsV6Gv31aspNdT4zRj6+05rtstJMNw19zBsOf
PDut5cWgbHV7mxZ4YYjnL7PAZUYmqwnCvxX4w9fTldnXLF5/5Huvg6FsfCWL
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
YNuH6WxbWXdjMvO51C0xmbWc/a2xkZnGkNH2oeysMvzfjzMZFxcXFxdX58tJ
TNbPrJ/3EDSPLWuLrcxWbn9LTGbOZV2dycxjyaz5Le0Za2ke128phoy2j5JI
LdC3VzxnMi4uLi4urs6Xk5gs3tC/qw39vakP0zS2zDze35ExmJb8l/bElHU2
k7UlJ1lLNjJjflhrNjJrPkvaVp4CfXslECb7N85kXFxcXFxcnau2MplOp/s3
2q8b+ndPQ3+vFNj2YVqyldkag9lW/2V7j8FsbRyZPX5LR2L7LeUis+SzpG2l
EejbK5EzGRcXFxcXV+fLSUyWaOjfNYImn5i5D9NSzrK2xPo74r/sqkzmjPGW
LdnILPksaVt5CfTt1Z8zGRcXFxcXV+fLSUzW39C/ewmafGJKgeVxmNZsZZ05
/rKtpaPGW9o71tKSjUwpaPJZ0rbSCvTtlcyZjIuLi4uLq/PlJCZLNvTvWkGT
T8zUh2krrqw1sf7vMpM56re0NIeSLRuZkZ29Bfr2SiFM9j85k3FxcXFxcXWu
nMBk/5P264b+3VvQ5BNryVZmK7e/M/yXXZ3JrOXut3e8pa2c/bZsZEZ29hHo
22sAZ7LuKblUZkFSyGWyTj82Li4uLi7H5SQmG2Do330ETT4xW7YyW7n9HRl/
aSunf1dkMnvmU3KG39LSWEujjczIzr4CfXulcibrhiLtpf46F9I9MyHZNaNR
on2zoZg3iNzX0s4/Ri4uLi4uh+QkJks19O++giafmKmtzHwMprP8l47Ms9TV
may1sWS2YvtNx1qa28h0An17pXEm636i7eW1bgJUe2ZBSVjMKA/CZKp5GZDL
OJNxcXFxdTc5icnSDP27TmDZVmY6BtNarH9bYsq6KpO1Jb7fViyZNb+ltdh+
8zgy2lZ+An17pRMm+3fOZN1PcncJZCLxW5KLOY9xcXFxdUc5gcn+nfbrhv7d
T9BkKzOPK7MV62+P/9I8psyZcf5tLfbwWGvi+81jyRz1W5rH9pvayPwF+vbK
4EzG1ZVF4+PEYsKaXeBYuLi4uNpTTmKyDEP/7i9obiuzFOvviP+yNTFlrckd
29biKJM5Et9vnP/THr+lkcmsxfab2sgCBPr2GsiZrJuI3KvMBkb+t+veJiyj
/30XOPZWivpgfcISsWjhHPh6qdnzqrOP6V0WrW+xWNK5xyCXsWPobgxOx9dI
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
V/P8Vfrl+rxE7u7iZrnJGo+HzhfD7GbiZnmjWI4iw5wwzI7VmEtMxn4nZ3lF
pY3bMD7LjXnn9XPUmGzTLB+93GSb5scqFjc/VjanDdmexOxYmtVB43rN8ziZ
ynQ9/XxH+npptj12nFKbx9mYU8vedjLbprVzaGwH87g4s2XUBhSSOhsNz0sR
qaJ2L/dmbWc8d7GxDSz4983PgfpQ4waOxMKZ4xkHNr9GyLJBo8iycVbfN+n2
WJsbcmlJpW/nvtLX9dvrs7x5BtutaY6uls6B8l6zc5CI0T97IlauWIZJ0+bg
ftlzHNowl2xHZOU4TXK6yS1dL3YsMxy/O7s+HdimyXrmx8LaWyptdsz0ehGJ
5Fi99zLqSu9gSu5YjB49DgdP30Px1UPw95A0jR+Q6vf1dhvJLN7rzXOQNV1D
dH/rDl7H88c3MWk82d+YcThy7j4KL+2Hjua3s/sZ5RQmG2bo38MFluP8W8tk
9ubD6M5MZmvMZUtMZj6nEvUJ07q1Fd9vjCULN6jDmKz/7E0YuuYUhqw63qih
a84gfdoixmTdK5f629q0fQfOnDmDU6dONerMuXPYsWouYSvr53cwtT9uE366
MTitUbcJox1JiDIwmcG+Qd7/VXOyoAzSMB+kZs14qHbOhGb7tEYpds+Eck46
yxugjo2GenKa3m5uyGFImWzruF04Pe0kTk473qjTM89ia+YswmRda65vFhcc
l44tm9fBz5vPd8nluCgz6SIGYuumrxGsVjrtGpIzRrD8LmlrWVcRPcag5Gwc
PH4GF86fw9rl5P53Yv10tth4VN8QzF+1iT2Xz545jc1rlyHMW23XeJPW7E+l
C8XCrzbjzNmzZJ+nsemrJQgm+zOfj8L2dpzGZMY+3hhTZivO30PQPM7fVj4M
UyZrzdjL7sxkRh4zZTJ78mBYYjLz+P4Igb69cjrKd0ltHjRuQOIuNJEbywfd
2fevM0R9lW5ubsxfaRT9W9TCs1lI44sJN7lKTUT+FlI/pOlv6Tgrd0nj/HH0
s0wkbi6huDHPv34O8rff/4TkPdhNLDQTOW5p1+xDaJ9KY9+7O7NzdZ7YNSTq
WjbgriDKZUKhm/45JXJ/Z3isqd1ljTEkxriS9pxzS78/YbP9OWrbdxKT5Rj6
9wjB23H+joy9tJQPw8gkrc2H0R2YzN48GKZMZpoHw9Exl9SmGWFQhzHZuySj
f+Rde4Z1RRl9Obw/5eLietflRCYz9vGW4vztGXtpng/D3hxlLeXDeJ+ZzNKY
S2N8f/szGZvrz35uYTl9HPh9p90zdExSUCyWLF2IQJ1nq2KcRHTuPDvtPmx8
tkzWeiZh8RZiu+31MrmU/b4rMBCta5+wJCxdMhe+Wu675OLierfVTkwWIrA8
9pIzWfvkizVnMuM8l7aYLFKgb6/h7cJkcjru3gcRoxfCP9iv2fytFq9DNg9J
POLHzoJKrejSfS/Ld5Q6Bi9eVCMhyv+tcVW260UOsUKNebHRGKBVtzgHGuWo
cK0vVseGs3Fr9nJc0/1N+EoVgBkDFyLRR9sil9H42FD/AVg4cBpUCvu5sd3q
msX4z0BDfRnCArVtjvHn4uLi6spyEpMNN/TvkYKWmUwtsI/JnJU39l1kMuOY
S1MmM465NDKZeW4y0zGXRiajagcmk5O+1AMx009g9p0fEJ0Sz3Kf2rwOJWL4
JczEtLt/QeaC5SxPUWffG9bE8munjGJj3eMj/RxiMneZB75KGYj/M3UMZgV6
QdQCY9D5jgeFROP/njEZF/tH6nMwOdAOYqkaX467ij9sf4nx4eFk/7bz5FD7
WHrCUvxu95+xP2cWpNLOjcFxZi4MLi4urq4uJzKZsY83zYcRILCco0wheHsu
ciOTmeYo40zmOJMpBZZzk5nnwWg3JqP5gALSZmPmvT8hNXcS+9ue9aRiKSIm
7cHcvN+gX2oq82N29v1h8ThbyWTuhKcyw2Pw95mTsDsmGEI784G5SeVY0D8V
/9/08VgU6AOhnfN0iAlPDU75En/a/QesSc2BSGLPWAo5hBI55ow6gX/d9ROm
RMZBJHVs7gCn1jVnMi4urvdI7cBklvJhtJSjjDNZ65jMkXyxpvNcmjLZCOcy
Gc3doMWQPdWYdOCSYzkuaI56RQCGHX6FCXvOwVNpngOma6i1TCbxUOHRmDH4
dU4avD3s9wvKDTk9K8eNxw/ZA8i6cjty3ZDfKANwa9VrlC84DI1MaP/+5GIo
1FF4tO5nPJ17oFPzY3Am4+Liep/kJCYbIWjOZObzXrY2lz9nMvuYjPqALTGZ
tbnHaRtFCdqByajP0SsmG5Nv/QkZE8ZD4u5YnguaFyN84gHMufsdgsJDWf7L
zr5H3jrGVjAZzTkY6x+C/5g+Cfujg+DqwJy0VMxWlpSO/5o6GkO0aohbiAuj
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
Fe3Kk7n9jmytZy+OpT7Ik/TpSPi5yeW0f9AFSWeL0plKX7KIyYjJ+oLJPmQ8
8jWjT30+5H3r2Wr3pbaLSqpnH+TZ39dGIpFIfS1iMmKyvmQy/g0sU7joTyvW
PGOwJXcTwgIsTr4gfA9bX/iztnyju5O3OFcwJA65rJ5BNnfWILndUGa30b01
T6USltAEZsfXPI1t7PquXVQtcxfutIvSC77hyaye6+HnxppnT3n6RAxD7pZ1
8O2l9VBH3t2d/cPaXCbzFHOtyvYx5lmdWtLa9iHv3/eZ73kfO97vvHy37NQq
l33bPyUplV3PDUlpHf2qeP/J5a6u76nFuZdSe3bePrzPXc/PtTy/JEnzd33o
32af6+ftKVN82eu2xGTEZH3FZJx3rLYQTJ4wFha9psfnktg/mdjex5/vAbdg
/ISJCPYx9yp/8Pr5+Adj+vRpCPQ2uZy38PFPafHxd2+/puTjX4fYCL/38PGv
RbQjppRanC8zIW0iAnrZz4rzmF9QGKZPmwqb2ehy3pKP/3y8eVWNcDf2a/aU
p+TjX4nQANd9DLvN0/4e52d8c7/89v3Ax11QeDwWZ2VjyYIMDAnydpQrpQ21
p81zpPGx5Bs0BFOmTIBJr3P5Hexsp3XJjp9ZPn7yTMzPyMAMZudj0Pdsx3hM
bwnCxLRUeHfx95Lveed91l1aX4r7fIZHJ2Dc8KHiGjqkxSSytHinNN6m/uFx
mJI2Dka+r7a7OWkeL8xgxKTp6aw952HqRPas0jn3A78fAiKHYlLaWOi1LjzH
WJ46o6k1z7QxMOtc69vPUbwfooamYHRStGj73s6ft6fBbMXUWXNEe04aPxLG
T+C6+0rEZMRkfcVkPHbOkq1nkX/5W+gU3Z/TJ8ZiF7EwFF4aHL32HCc2ZYjY
i71VPx63M2niHPz+z79jZny4y995n0osDKXaiHP3irF/1TTnM5w/tF1knhiZ
vhj/8V+/IC0i0OXYBp9DLAyllwKBQ+Kw9/gF5D95gqP7tyEywNDapozRoken
o6K2AXeuXcC1775DRmqcONuQp8XY025fvYSrPI2f38PPWfSQY+byffhff7zD
1OjOOV06V9G5/twufeUB/OuPXzA5yreDXYtNi52IOWowYfO+47h1Px8/v61B
sp+lw1xeh7KVCvjFTENjYwWG+lpEOU6x89X8LAJ/bNuzDyPDrfb0NmnGgE7T
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
4yxe1xVj3cqlWMLKu3jzKV7cOAYflQxRI9Mwd9rYTsvqSR3Laz/GlGLeumXc
d9aeynbt2bWdVJ74vUqaN2zbR7xfeD94dTJ2W8Z7Z3n2pYjJiMncYTI+vlez
9/Dx48dx5MgRh46yn3esXQxvtVysnbl7xrYYi/w8yMAobNi4ASH+3Zyjo5bO
YuTfZ+s3b8axY8ec6nKM1WXrqgXYtjkHR492lpYJi923t0MdmDZsye00z9yV
GYzlFOI+tobEImfjegT6tp5bmZO7tXO75W3t4pjdutZzK1m7b9zK7I4e7WC3
ZcU8mNQK+x7yeGHHYwl0xQtqe7twH5hN27d3mef2bVtYu7RLO3ECm7Jnw6jq
2C7SN6UOW3bs7GB3nNltzkqX7MTZlInYmLOWfVP2znlPwpc6MonluZp9x/bu
GVKkD+wb7mcWmIAc1t9Bxt4537Slz7s6W7KrNM4i3hHJ2LHvME6dPIm1WXNg
1Gn75CzYfpHY22DBjAUr2TPmOHv+HsPGNVnwN7c/H6A3y7Ni5qLVjvK437zN
JLWpOPO1l+IhkpxFTEZM5u7aZcvaV3sJFvvQ8ciYz514YV3Vhfs4eHaT5sra
ZXd2rfG7Wusps6/ldbBr8w75MDuZy0zSXZ48n57KczfPjvXsxWfUe8RKI30c
9UV/f1hd2tyrXwqPtUitFnEaW59Hsr5lzg7lyb8cxv2ERUxGTNYdk6nV0hkT
X9zzjfTZqGUM9nc9SCQSqa9FTEZM1hWT8e9OY0AUcrdtRUSQd6+fKyH8JBTd
+9uT/tyS1i5TsH3bBvhaae2SRCJ92SImIybrksl4vOm4VDS/bsaoocFuxRrr
SZzHvP1DMXXieFh0GuIyUqdy9vHvxseQRCKRvgARkxGTdcdkPjHjUFNXgxHx
vctkPDb30u3n8eTSfscZfv19L5A+PfV2LAwSiUT6lEVMRkz2sZmMxzfXeg/B
8/JqZI6Jof07pC5FTEYikf5MIiYjJvvYTMb38qQu2IiSJ1dg1co7PR+FROIi
JiORSH8mEZMRk31cJlNDobTg0uMSbF+Y1m/nAJE+DxGTkUikP5OIyYjJPiaT
8Zj00aMzUFXav+dlkz4PEZORSKQ/k4jJiMk+JpPJ5F7YcfYBLuxdAVk/nSFO
+nxETEYikf5MIiYjJvtYTKZWKmAJG4nyykqMjwno1X2cpC9TxGQkEunPJGIy
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
Euvy6r0f/W1Re/5Vdu7K/Jv07gJzhNdM7Rz0/JyR9ie/RuKZV2sSnlj3KmZU
pIncqa53I8iev+VrmvD18ga4fXA7f0frgHMIV88arMf+X/odY+B5mC+4JvHG
eFTVz8B7n2zB4cMH8dHbL6CuNJ3WEiYIImLIycjJBudkSXjr0y2YMSFPrPEq
4r2FxSBvJl567zNs27IVX539FmtvmyPeh9nf31i8vfqqq1DTdjN6N7+NtDBO
xuNloj8F2Tnl2Nh7GKsWtiE9IwvZWRliHX8eQ/kar8kp6SgqKkJWWkowzrL2
2J1ITU0BP7esnDzk5WTBZrpwzQs1jLHjYHSNx7befWhTOBmPwYn+NHE8vu6Z
FNc9vhSkpyb1r/dvNtuQmpaB5ESXaA+vlxSsxz8XL1vvjR8vPmECduzZh6YI
nCw+eO6FbJ8F+XlI8rj6vUysv2Z3ITcvHwUFefCLdxFYgtfMBH9aJmtLIWtL
cn9bbOzzqSl+du3syGL1crMzxFoi0jWTX+u0FN+Acwh1D50JXuTk5qGwUDpe
YJ++lFTkF9eg59DnWNk+GWlZ2cjKSIPdFmqfFthdCcjKyoTb4URBSRkmlI+H
wxZYs8Qi1qWzIjOvBDW1tcjJShc5Wn5dnFI9pxOFvF5ZSX89cV1MFqRnFmLK
lFpkZ6YG6sl+VrrY7xvZrL4zuP6KKd6IzJJa7PviHLa88yxmz56PjT1HsX/z
G/AnWH+S49AEQQwecjJysqE42ezqEtk69tyDPKidUo3ElHJ09526wMk4fFxz
atcKXU7GXWjebY+KNf9Pnj6LQ3t3Y9v27fj47bWBdfxjTWiYfSt27N6D7du2
48C+vbh1cSfi42JgSS7DBxu78eLLr2L7jl04fPQIHv3lQlhZHLUE28tzPRJy
V7OYjbAlTcT2PQOdjOddJk5dgE1sf5s2d2PP7l1YOmMqYsaMwZQZK3Cw5yPk
JvH3BMTClzsZO1n96VV5Yv5cZf0ibO6vtxPXddWJ/UnHs/snifcU6HUy7jU1
bcvQvX0XtnRvxq4d23BTVxVi4+KFR3myyvH8uxvR17sbu9j1eWP1XfCaY9j9
sqBt8d3o6WXXbPsO7N/bi+vnNiIubhycGdX4tHsLXnjpNezc2YMjRw/jviUz
mJsYxXuuJjcvxZZdPeIcent2YEFbdf85aN5D5qbXPfg8enfuYPduBw6ye7iQ
+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
vnkyvIk+LHv4Oezb9DZSmQuYxVpSJtaWWOY1zOfi4mTrXfC5+anIGd/KXOUQ
FjVORloqX+OA559KsXXvMdy7bDacThcSfUnwJyUG5/XzOUeJWPfRLnxx6Aje
XnMPzMzTeN7K6S/H9n2f4+6lM9m1kOp5g/Xs7HhpyCvrQN/BQ5hfXx04Xsh5
7hwnsnNykZbih8vlw/IH14sxQY9pLIwWN579YCe2rV+DguwM8YxDxYQS2I0x
yJrYjKMnvsCyGVPg8fow//Zf4dCuj5DuNjOXq8bu/QcwZ0oFvEl+rHjqNfR8
+BK8tli4Uyei59BxrFzYLs7dl5QMv88r5tRrtZH7U9bk2Tj11Uk0MxdO8OXh
mbe24Ytd78vyZJnM34/j0ZtnBe5tZmrIcxdONmUmvjrzDW6fM1k42UOvbsGZ
I91IYvuc2LQYZ7//ERueX42mti6s33oYX+zbiLwEE3Imz8Sps98Il+NOtur1
bTh9eDOSPRaklzXg8Klv8dErT6K0MAellZMxvbUebkfAx4wmK25a9RK+OXMc
S9urWb83Ip71m7KGufjqm+/wyqPLUVHZiPd3HMGhre+xfmanOf4EQUQEORk5
WfScjK8TkIjHXngPfX19jL3Ys6cPPZvfR1GOX+Rq+OcidzKrqFvbuRjbe/uw
Y+dO/PrN4Bz/OCPaFtyAnb292LZ9G3Zs+QRt9RXMs2Jg9Zahu+8EDu3dic82
dWPjh2+hrjxXPKuofSzmalYfHn/+LWzbth29e3qxfcd2fPDqk0hPtIm8VGUb
n6u/B1u7N6N761a8/uSd8FoD58G3189diaNH9mH2pIL+PAl/PrG6YzG6d/aK
epu3bcNrj98h5lSZrcl46sV3zx9v+3a8/9JjSPFaQ8zTYh5kS8Gzr3+Enp07
0L1lC7o3vo/GmtLgOg4mpOWU4pX1n6Cvtwe7enbj1YdXMl+LFeOws5euwK49
e8Q127bpQ9RPKmb3JQaO1Gr0HD6F/b3b2TXbgo/Xv4pJxRlifJUzZcYybN3V
iy2b2bmzui+tWg63OVZ7jTnua+40rOJ9oncXuj/9NV564Xm8//ozSOZubLaI
NSfaFi5Hz9692LFjB9Y//wh8Lov2HP/4WGRWtGDbjt24rq0CY+IsuPWxN7Dj
k9eQkuhkfdON61c8jgOHjuL48c/Rs/VjdE4qRey4scxHW7F1524sbpkg6q18
4k1s//hVJPN67F61LvoldvUdwNFjR3D48BG8//wqeB2moJPZcN0968R8xcXt
FeJZCtEedg4Lb7kLew8exefHjmH7xvWYVJ5Pa5QRBBEx5GTkZENxsunMca68
6uoBa6raHQ44FNiCeQ/+fOOVv7gSk1pvQm/3O7qdjMOff3N5vMjNzYbP7er/
//h4I9ysPxYU5ol8nFibwmyE1TcBW3fvx+zJE1hf9cNmMeteY8LhdMLJ4G13
ir87BrTD6kxATkEBMjP97DOKa2fhzw/YWRsGOkV8sF4ur5fhH/BMQajjacOP
40JWdh77/mbDZbcOWBNLrIXBrm1GZg4y/Mmwyerxa5bgSxLXzMnaL10zV+pk
7GJu1FZeBD/7fiuvGa9nc3nEOWQozkH7Z0xwbYrcXKQmeUW7+PVRXpuERB+7
t1nwuJzhz531V74Pqd/a2N+lfQp/Yn7lS0pDUWEB3A77+TU7QtQLXJd4uL0+
FJYUB9fkkJ8fX7fYhfS0FHFd5Peb1/MlB49nt9HaZARBDApyMnKywTrZu1v6
8OkH72Dd2qcwUazjbxrQr/oJ/h+PxRmFZXh8zbP46LOdOLT5rYicTNovz6to
rY0q/T/3C0syn9N/DDPK80Q+bTDfDbX3QwmCx9NaN1U7b6RdL+TxNLEE1341
ax4zsNaH+ruvAtfM2n/NnOlTsP/wETTmpoqxOe17ENmasaKeyrq16vc2Sj/b
gmvbRvquI9EO5ljq52fRvuf9x4tO+wmC+OlBTkZONqh3K1lcmDKtHYsXL8GS
xQuR6/eFjdHcHZLSsrCA1Vl87bVob6iB26pvDdfIYW1xJqOlrQPZSZ6f1LuK
Bo3FDJs7BW3tHUj3umguFEEQxEWGnIycbLDvIB/Me7N5LiFW1InpX9Ni+Pq3
RczhJ7eIAPGuUrpmBEEQIwE5GTnZYJ2MIAiCIIjoQU5GTkZORhAEQRAjDzkZ
ORk5GUEQBEGMPORk5GTkZARBEAQx8pCTkZORkxEEQRDEyENORk5GTkYQBEEQ
Iw85GTkZORlBEARBjDzkZORk5GQEQRAEMfKQk5GTkZMRBEEQxMhDTkZORk5G
EARBECMPOdlP3slayMkIgiAIYuSJkpO1GMjJRpOT5RjIyQiCIAjikmIYnCzH
QE52KTmZzxC4B6mMdAM5GUEQBEFckgyjk6UHPcAf9AJysovvZF4DORlBEARB
jAouopN5DeRkF8PJ7AZyMoHJZEJ8fLwqvN+PdPsIgiAIQs4IOZndQE4WbScz
M6yGyJwsz3AZO1lOTg4KCwtVcblc5GUEQRDEJUUUnSzPEJmTWYMeQU52cZ0s
0xC4R3kGnU5mMZthjjHCYjLr61PGeFhijQFU6kS6v8H2682bN+Prr7/G6dOn
B3DmzBmUlJSIfNlIf/8IgiAIQiLKTpYXjPeZBnKy4XaycQb9TpZsGKSTcW9y
FebC+sg8OCakhvEoC+tPDjjnNcC+sgOu5W1wVKaxOpYB+3Oy/bnZ/pwTw+1v
aP26u7sb33zzjXAwOWfPniUnIwiCIC45LoKTJRv0O9k4AzlZOCe7xqDPydwG
fU7WzJzsT2pOxn3JPM4IZ1MjDCd+Bdv1lbDExfdvs5gDrsXzXgG3Yk5mdsH5
4CJc/fHdMBxfA+uyCayOqX+fPD/mapgm9ue4sap/f4H9sP3FmwRif5aBbRGf
tejv1+RkBEEQxGhiqE6WlJT0Jx7XDfqczG3Q52TXGMjJhuJkTkNoJ8s2hHMy
mx3OnDS4ClLhLM2Fa24N7Ble4V82hwOuvFTYk1zCoxx+H/t3CqzOwD4scUa4
K0tgOPg0rEvLZU5mgzPDD3dpTnB/nn6vs7J+6EhOZNvy4JhSBGcB2x9zPO5g
3MfcFcVwLqhhfzedrxOmX5OTEQRBEKOJYXCybENoJ3MayMkG42RXGobmZCmG
wHpxcifj6/te6GQWM6zuFMS8dif+eueD+Nm2B2DY+yhs15XBHBMLZ24ufr7j
cdiunwDT2Dg471gCw5574MhLDOSzjPFwVymdjOfQ3DCvWw7Drodg6FsN26Iy
2TYHrM/9Ej/bci9iPr6HHW81nLfUBRwsnjnZnHYYjrL9PdIKWwLPp4Ue8yQn
IwiCIEYbUXSyXMNAJ0sLesBQnOxKAzmZHieLN6g7mccQWBdOzclyDVpOJrDD
kZMGe14KXG3VAb9aNgHmcbHMvfKYkz3B/l0hnMxx53XMse4N42R8nzbY0pPg
6pgMw6GnmePJtzngKs+BjefevB7EP7MChh13wJ7mCsxHi7ewenXsOI8j5pVr
4Uj3hJyLRk5GEARBjDai7GS5BnUnSwz6gZqTxRvIyQbrZPyZiDhDZE7G368g
d7Km0PPJ4uCeUBjSyZx3LNXpZHw+GdvfxOILnIx7l7uyDI6nrsfP31qOX3Q/
BMOuu+DM8fa7l4kd21lbw/a7Bte8txQ2rx1WjXFMcjKCIAhitBElJ2syDHQy
6b1Kep0sLugX5GRDdzK+7pvSyfi7reROJr2HPKSTif7B/Yo71AAny2e+xJ2s
HMYrmCfdu6zfyfj8fNPYWOZxRaKOZcl4mMbEBebms77GtyVMCDiZdXFgGz+G
q5B53u4nEfviQrinFMO09lb81e67+52Mf8aZmQHriyvx8133wdlSxPou5ckI
giCIy4dhcDL5uy5TDOffdSl3MpuBnGwoTjbGcKGTydfy59eYP0shdzJpjTK5
k/HnMSJzspg4ONIzxXyy2JcXwDmvBVf2PAHDnnvhzPXC5nLDNq0Mths7YDjy
K8Q90glbcylsiS5YPQlim6N/W4fYZnXZ4K4qheHoWljvmSb+/ouND8PQe0/A
yeJ4G9j/dT+Mn22+Dc6KdJhjQ/sUORlBEAQx2oiik+UYBjqZtDaZ3MlchvNO
Jq3hr3SyMQZyMi0nu8qgz8kchvBOlhOkUdXJWL8QY5exRrjLA2OXlhsmBNaj
iLfCvawLf739QVz10a1w3jYDY9+8gbmaG/aMTMS/cQfG/voujPvgDsR9eBdi
+GdyE4Pb7pRtu1PUd+QlweJwwblqCXO9h3DVhuVw3TkbMW8sY/tMEMd0dTVg
3EuLYctxM0806erX5GQEQRDEaCJKTtYoi/HhnMxh0OdkVxnIyYbqZNK6sXIn
k79fSd3JWJ+wJ3ngLEyF1eVEQmcjDMefhq05r9+HuK/ZU32weu3iucgh98Xg
e47sWcmwue0XPFcp1kAT66Dpex8SORlBEAQx2hgmJ5Ov4Z9kCP3+cXKy816m
5WRXGC50Mun9SvzaKd9DrnQyrfcr8bl/FziZmN/Fxyt3PYqffcbXpXgM8c/M
C7iS7B2RYp0wnWu46u6PZnNU9klORhAEQYw2ouhk2QZ971VSOpnRcN7JpDX8
5U4mOYmWk0lOczk6mdzLJCcL9c5Lfk35PD01J5OevZSvG8upZ072vTJPZmN9
wllbCs/0KjjrC2F12XWt1XqpQE5GEARBjDaG6mTsz+95XJfFeMnJlGuTyZ3M
ahjoZFrvupScTPKxy9HJ5OOXcidT5srUnEzvGmXKdWOl9TA4VWPGjOlTnU9m
jBfzySJ5p9GlAu/X27Ztww8//CC8TM63336L8ePHk5MRBEEQlxRDcTK/3w+7
3d7H47osxivXwfAZIlubLJSTSa6idDK531wOTjaY95DrWaOM5y2V62EU/s3f
/M1qs9n8Z61nL0cjvF+/8sor2LFjB7Zu3XoB+fn5MJnCPytAEARBEBeLwTqZ
z+dDQkLCn6+44orVPK4bLlwHw28Y3Hqxet4/fjk4mdo8/781DP6dl+GcTGue
P79vtX/3d3+3nnnZX7iXXS6E6vcj3TaCIAiCUMLjE3MrkTfgnqUXVucvV111
1Xoezw3n17pSm98/2DX8w73rUs3J5L5zOTqZ2hpl/NoN5tlLaZ6/9J7S+r/9
2799auzYsYeMRuPfx8fH/yvjz0H+IuPfJNjn/l3G/1bwHxr8Zxj+D0EQBEGM
Mv4zDFoxcUDsjIuL+3fmZv+elpb2706n899k/EXGn4P8q8Ph4PH60M9+9rOn
DIF5ZFJMV5vfr/eZS8nJIlmbbLQ62XCtG6vn2Uut914WBCllNDBmMOYy5jMW
Mq5lLGEsZSxj3Mi4mXELYzljBeM2xu2MOxl3Me5h3Mu4j3E/4wHGg4yHGA8z
VgV5hLE6yKNBHpPxeJAnFDxJEARBEMOMMvZIMUkep6TYJcUyHtekGMfjHY97
PP7xOMjjIY+L9xoCcZLHSx43efzkcZTHUx5XeXzlcZbH22WGQPzlcZjHYx6X
eXzmcZrHax63efyWYrnWey4jeeZyONaLHU1OFm49jF8YIlsPw24IXHOen1Rz
Mvl7L/MNgfHn4iAlhsD9LWdUMCoZkxiTGVMYdYaAj08zBJ655e87bWW0MToY
nYwuQ6CvzGTMYsxmzDEE+tA8Q6A/cRYYAv2LsyjItTIWB1mi4DqCIAiCGGaU
sUeKSfI4JcUuKZbxuCbFOB7veNzj8W+2IRAPeVzk8ZHHSR4vedzk8ZPHUR5P
eVzl8ZXHWR5vpxgC8ZfHYR6PeVzm8ZnHaR6vpdjN4ziP51rvuZScjHsB9wO7
IbJ1MMI5WbhnLi8XJ/s7w0An01oPY7Bzyniek7t1EWM8o4wxgTHREHh+o9oQ
6A98nHqqIeDkvM/w9ze0GAL9qN0Q6FvTDeFdTOlhofxL+l4sDcH1BEEQBBEl
QsUbNVdTepqan4VyMx43efzkcZTHUx5XeXzlcZbHWx53efzlcZjHYx6XeXzm
cbrMEIjbPH7zOC6NWw5lLpnWOhjcQyQn+Sk6Waj1MJTz/JXvIrcbzr/3kucp
+b1QWztWnivj91QrR1Zj0M6R8f7DHV+PlyndTPIzZY5ssSG0o4Uj1HeKIAiC
IDiDyZfJ45NarkyKbXIX0+NjPI7yeKqVK+NxWCtXxuO3PEemtlYs9wBp3FLN
yeRzyZTz+/WugzFanCzSdWP1PHupNs+fX1u9c8rka2LIxy/15MrCjV3yfiaN
X84yhB+/VBvD1HI0JcrcMkEQBEEMllDxRulgypxYuHFLjjRuKflYqLFLPTky
5bilfA0MHu/l45Zqc8nUnEw+lyySdTAiWS/2UnMyycsicbJI5/mHGr+Uv49c
Pn4ZLlcmeRnPqfJ+w3Osci+T58vU5pVx1PJman6mdDS1OWdqhPpOEQRBEAQn
XCxRiz/y+KTlYXIX4yjnkSnzY5KP8XjK46p8zFJPjkw5bqn13nFp3DJa8/s5
ak6m55nL0eJkg5nnL3/HUiRzypTjl+FyZbxfyMcwQ3mZWs4slJsp/UzpaUpX
C4Xa94ggCIIg5OiNKfI4pIxRcg/T62I8PobyMeWYpd4cmdq4pZqT2Q3nxy21
3qmkd37/5eZk4dbD+LnhQidTm+evNqdM7/hluFyZ2hgm7y9q+TL5/DKllynd
TOlnao4mR/ldUDobQRAEQQwFtTijjEVKB1N6mNLFtHxMmj+mzI/x+Ko2Zqk3
RxZu3NJuUJ9LFmp+P/cQyUnkTia5S6Rrk10qThbJGmXyXJnSyeTz/KXxS+Xa
sXbD0HNlyjFMvV6mlTOT5820/ExCzdOUKL8rBEEQBDFYQsUbpX9JKD1MnhfT
yo3p9TEed3n8rTAE4nGZYeg5MrW1YqVxS7X5/dIzl1rz+7Wc7L8aLg0ni8az
l1rjl2rz/JVzytTGL7kjR5IrUxvDlLyM51J5f5HGMeVeJl8nQ8vN1HJnkp/J
HU3L1eTMIQiCIIgoMTsEytgkxSy5h8lzYlouJl/vQulj0npk8jlkamOWkebI
Qo1bas0li9b8fjUn+y8aDLVo7fe/GMI72VDmlOlZp0z5/KXeXJlyDLPMoM/L
5M9jynNmSjdT8zM1R1O6mpazEQRBEES0UcYeZWySO5iah6m5mJQbUz5fqcfH
Sg0Dxyz15sjk45Y2Q+Trkg11LpnSyUJ501BLNJxMPn4ZiZOFG79Um+sfKlem
NoYpn1smn/MvH8eUP48pn/svdzPlmKbSz9QcTelqSpTfD4IgCIIYKloxRxmb
5A6m9DDlGKXSxaS5/PLnK+XjlfI5/Tz+Sj6mNmYZKkemNrffYohs3FKPk4Wa
S3YpOtlg5/lHMn6p9fylnlyZ2himfG6Z0su4v8ufx1TOMVO6mVbuTM3RtFxN
DeV3hCAIgiAGS6h4o3QvNQfTyompuZh87pj8+Up5fkzyMfkcMrUxSz05MrtB
+3lLveOW0Zjff6k5mdacMqWTRbImhrR+rHz8krswz1PaDaHnlSnHMIfiZVLO
TOlmWn6m5mhKV9NyNi06CIIgCCIMemOKMhYpY5XcwbQ8TM3F5GOVg/Ex5Zhl
uHlk3Ae4FyjHLaUcmd41MIY6v3+0OFm0xi/5deYOrJYrU3sGUz6GKZ9bFs7L
+HMgyrFMLTdT8zOlo8k9TelrcpTfh3AuRxAEQRBKwsUStfijjFFS7JI7mJqH
hXIx+Vglj6vhfEw+h0w+Zqn2rGWoHFm0xi0vdyfTmyuTj19qzfVX5sqkMUwp
VyYfw1SbW8bvP+8HRYaB88vKDAPXL5NyZlpupuZnao4m9zS5q8lRficIgiAI
ItqoxR95fJLHLbmDqXlYKBeTcmPy9S7k88d4/FX6mHwOmXzMUrkeWbgcmXKd
2EjW7r+cnCxa45da7yRX5sr4/eCurFyvTBrDVJtbxu+7Wr6M9xOtnJmam8n9
TJ4/kzuamqfJmaaDRoIgCIKIED3xRS0uKf1LcjB5PkzuYaFcTJkbk8/n1/Ix
+RwyacxS6z1Kajky7guR5sgiHbe8lJ0smuOXanP9+XVV5sr49eduHGq+v9rc
MjUvk57H5M4u97IyQ2g3k/xMnj9TOprc09R8TeltBEEQBDHcqMUhZayS58Ek
B5PnwyQPC+ViZYaBPsbjrPR8ZSgfk88hCzWvX/6sZagcmTS3f7jGLUfSydTc
TO86ZXqev7zScOFaZVrzykLN95fmlql5WaZh4Lx/+fplypxZmWGgmyn9TMvR
1DxNTm0IlN8NgiAIghgsoeKNWnyS+5eWgyk9LJSLyccqJR+Tz+dX8zFpDlm4
ef1a88j0rEmm9bxltNYluxScTM/4ZSRz/bXegRlqDDNSL5OvKyvlzLTcTMvP
1BxN7mlKX1N6mx7UvjsEQRAEwYkknihjkTJWyeOY3MG0PCyUi0ljldL6Y4P1
MbUxS613W+odt5TnyAYzbnkpOtlQxy9/btD/DKaeMUz5WrJqXpZmOO9lamOZ
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
    "], {{0, 409}, {613, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{613, 409},
  PlotRange->{{0, 613}, {0, 409}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQdUW8ma76uZ07ntdgAklFBACBA5JxMMJjhgMM42zjnHdmjb7dDOOeec
s7ExGLAxJhowDp1Pzz1nTp6ZO+fOXeu9teac+97Mev9XVZJAyJKQQCS7aq2/
LbS1U9Xeu377+776SjV1Uc7MfxQIBMs+If/kTFnZf+nSKauH9yZ/jFy4bM6s
hTOmD1y4fMasGUujp/6KfHniHwSCGeT3Hwh44YUXXnjhhRdeeOGFF1544YUX
XnjhhRdeeOGFF1544YUXXnjhhRdeeOGFF1544YUXXnjhhRdeeOGFF1544YUX
XnjhhRdeeOGlS5Z/4OLi4uLi6mDxwkt3Kp19v3BxcXFxcXV38cKLPaWzr1Mu
Li4uLq73Xby8X6WzrzcuLi4uLi4ux8TLu1E6+zri4uLi4uLicq546R6ls68T
Li4uLi4uro4VL12ndPa14Ez9IxcXFxcXVwers/s+zmfdu3R2m3f2/cPFxcXF
xdXV1dl9NS/tWzhzcXFxcXFxvRvibNY9C+cvLi4uLi6ud1+czbpu6c4M9isu
Li4uLq53VN2Z0XhxrHRVBuvse4CLi4uLi6u7qasyGi8tl67AYp19/XJxcXFx
cb3r6gpsxovl0lkc5qxr6wMuLi4uLq73VJ3JaZzNnFs6ksU4b3FxcXFxcXW8
2pvROJe1rXRFDmvL9fYhFxcXFxfXe6aO4rSO4rP3sbQ3jzmbvzrrWv+Ii4uL
i4vLSeoO3OYsPuNcZl/pTBZrD/7q7HuMi4uLi4urs9UenNaZbPY+lM5gsbYy
WFuu0Y+5uLi4uLjeEbUns7WFz9qLzd7l0h481hoWayt/Ofsa/4SLi4uLi6uT
1Rn81hpGawubcS7Tl45iMWdyGGcqLi4uLi4u+9RWVnMmnzmbzd6l4kwecwaL
tYbB7L0mP+Xi4uLi4npP5Axec4TRnMlm7yOXdRaP2cNhjvKXvdfoZ1xcXFxc
XO+42sptjjCaPWzGucx2aW8ecxaLOcpf9lyrn3NxcXFxcb2jaiuz2cNozmSz
953LnMVjzmSxDx38fVv8mJ1tT+bi4uLi4movtcVf6Qhr2erPnclm7zKXdSSP
tcRWH5t870IkJ/IgUphJaSaVBamtyNNBabi4uLi4uLq4HO3brPWRlvpTpZnM
+2TaT9P+mvbbRgazxHMtsRnnso7xVdrDYkYec3N1dZ0hkUhKRCLRb9zc3H4v
Fot/L5VKmcj3VH8gny1KJpPZJblczmT+t7k8PDy4uLi4uLi6tKz1Ydb6vJZk
rY+l/S/th419Mu2faT9N+2vab9P+m/bjgiYuc5TN2suX2R1Ke/CYOffa4jFz
+6gbaePdXl5ef1OpVCDXBcjfcHd3h1AotClyTTgkct1YlYuLi1X17duXi4uL
i4urU2Wrn7LVvznaV7bU99L+mfbTtL+m/Tbtv2k/LtBzmaV+vrU2s3edyzra
V2mNxRp92aR9Z6rV6r/T66BXr1744osv7Bb9PRcXFxcXF5fz5Gg/TPtv2o/T
/ty8jxe0zGYd4cvsqqUtTOZ0HiNy8/DweEw5njMWFxcXFxdX9xPtv2k/Tvtz
gd5W1lFc1p2ZzNk2staymHHMI12udHFx+Wd72/3Tnj3xCdGnBn1iUM9W8txn
n3+BTz7rSf7vyT5/Sj7Tv3t+0brrsifZTk+6/uc9mz4TfdHK7XFxcXFxcXUX
0f5coB8P8JHg7bGfjrLZu24r6ywes5R/4jPDMnXPnj3/2FI7U6b5vOcXSPSQ
4WBUKJ4MSEBFeiKuxsdgqq8Woj592HJ7rxvKXJ/3+AL9I8U4uEyDkoO+KD/q
h8ubvDFpiBxurr0Zo9m7PXp8PXv0hCRWBs+1/vA+HQmf85HQ7gyGR7YavV0p
r3E7IFfbRN9FP/30U/To0aPTj8XZ+vzzz8m5fdbi+X/2WdNvepB16Hr2bJ+u
Z3x3o+vYU4f0N+9iXXNxtZdofy7Qj+P8WNA8/5klNutoLutKpbN5zDRnijFX
Hf2+RSbrQdS7V2/siAjBf47IAsYNJ8rRa7z+c1lqEoLFYmY7a/GaIfzUp09v
7Fzoib+XBQINwUBdkF71IUBtMJ4c9kGgVsjsZy1t74ue5P++veG50g+6l0nw
/SUFAT8NIEqBz88D4PNjCjSnw+GmFTHbWWffM1zdU5Qj+rq4IHlACvx8vOiz
r9OPyRkycmZwaCgSE+LQl9ybln5Hz1csl2Ptxg0IDPDGJ4Tfln21BieO7SHv
UH2txj7Q70Xk2bB2w3oE+HvBxU2EkxcuY/asSc34rpnIOr379MWCZcuQnpZk
/XdcXFzNZMJknwgs56XlXKYvzoohawuPmefPp995tsRk1P5FeQy5hL9GDyMi
XDbKIPp5dDZhsxF4M3gAPIVu+LwFPya1j+1epNGzWA3hsIoA4FmgXvRzJfnu
ZRBenveDSu5C3pNbsG+R5ZpV/vD+p1QEfJcC/1f9m+tNMnRkmc+NKLiQ7fVq
aXtcXGaiTKD11TGW+P3vfotVy6fjo48+tnt9yiWUaSxxC/2O2oLMl9kznoZu
0xob2lpmupxue8b8RXj5+ltUP8uD2N3N4v4+Idy2cPVXKMi/CZHQFZ+R36zY
sBEXzh+FUGg9HpXuw0OpQu3LOgxOI/egmxAXr1/D3LnTCOd+1qwOTI+XcuK0
JcvwpPQhJBIhj3fl4rJDBibzNPTv5vMJtDeXdQcmc2ZMf0s8Zil2zBqP9TD8
rbHFZNTuleQhw98Yf5nw2IihejWyGeGy3BHYHxnC4susbe+Tz3siJdId/8+z
oOY89jRIrzIDm1EuI8xGbWmffGqjX/msJ6T9pIy9jDyme0n0IonJvyFJ/93r
ZPj+kgrPpTr0/JT7Qrjs1+eEx0L79UP58+coLHiA2oYGh5iMsgUdJ69QKNhY
eqOvj9mnyLbpmHaNRsN+Y+4H7N27N1Oz7wzr0t96eHiw7dLPRmbp2bMH+5t+
r1Kpmvn/jOvSv+lysVSK7YcO4+WLWuQ9LMSzp5aZ7AtyT4vIb5/UVGHm9LHs
3Olv+vbpg17k+GzxEuUsuUKJiueVGJQWg08++bTZeRnP2dPTk43rp/xrZFgJ
Ybny+nqMG5VJ1vuk068FLq6uLgOTaQz9ew+B/VxmymbtzWWdyWZdhcdMWYyq
p+F7L1tMRvnqYHQY4623eMycy8bm4LdDM6Byc7VqK6Mx/EdXGGxk5jxWGtCc
y2qD8ctNPyikfdHDSqwaZTLtxkDGW6Y85lPfv1FGLgv4IQW++XFwkbiQPoa/
c3PZp08JC6SPGIm1G76GTC7FteISrFkxwyaTUZ6QKZU4feYM5i1ejHt5eXha
Voa8vDuIjo5k3EH9oCvWrMGTJ09QXl6Ohw8fYNCgAfjggw8wcuxYPCoqIr/P
w71793Dnzl1cvXoZbq4uSM0ZgctXzmH79m0oI9usqCjH5m82Ed7rw/hGpvLE
rgMHUf7sGdluBY4fPQhvLyU+/PBDZE2YhMvXLuDI0SN4/rwGc+bPxcbduxEZ
GohRsxaQbT2EWPw2k31GuDIpaxieE3bz9/XE5z16MkaaNnsOdm9fSxjvUyxZ
/iXmzZtNzu1Tdv6e3j44c/YMYT85pHIPPZOlRpJnyhf4Zt9+jB83mp1r/5QB
uEXOkR4vPZ9Nm9bCzY3co1/QcT+fY/+xEzh2ZAe5Z+2LW+Piep9lYDIvQ//e
06TPN2WzrsBlnVWczWSO8Jgl25iRx74wfKclbfgna+1L7WSlqYn62LFmPJZp
kAmXjcnG30dnI0oqsRpXRv2WZUd99bFj5jxm1FPDsqpA/P1pIML8RFbj/Slb
+V6MgvanAXomM/CYb10Sk5HLKKv5fZsCP/LZ3U/E4/25HBK16VB7Vy8XV9wq
LbWLyRSenmh4+QoNDbXIHTcCCYmJyCt8hLKnRRC59kXS4CzUEC6aNmU8QsPC
sPvoacJEJRCJ3KAm6yaS38fFxWHAwIGoefMdLpw5SPjwI2RPno7f/P4PuHbh
OGKiozFr3gL88k+/xqRxmfjwk0+x5dARPHv2FBkZqUhJTcNjwjmnj+/Fxx99
gLHzF7N1b145jbTUAdBqvZgd8Ff/+I/Inb/MKpN9/NFHWLB6HaoqHjG/JV3+
Eflu1cZNuH39GNnGx9i9dx/hqfWknj5hdjjfgABUVlWSfXgSJpM3MtnHPXvj
Qt59LFowizwnvsClO/dw5tgBRIaHY1TuJLz+8Qfkjs/Bxx9/go8IRy5aQ/Zb
2bTfzr4WuLi6smh/Tvt1Q//+hcA6lxnZzFEu685M1p42stbwWE9BE4/1Mnzn
bYvJaCxZZUaSfUxGeOy/iWLlUqtMRmPDak7qmjOZKY+ZMdl/VQQjyt82k/lc
i2Zx/C0xGY0rCyD/u/u7cybjcljMV+cmdIzJGuqxbOl0/OOvfsXsVP4REXjx
+iUyB8ahV18XeHqqCWsI4SH3QNaEyaiur2F2Jf0YyE/xAVnnqw0b8fjxQ2hU
cnz4wQcYRpis4c0reHspyDY/YtspqKzGV6sWwVUsJttvwIrFMyCTyZkvcMbi
5Xj5up5x4Ni5i8jyF/BUezCmMvo0P/n4I5tMRn/75dfrcfPqUfTt07ORyeh3
1y8fZky2Y9durF+/tpHJfPz9UfasDF5e6reY7MydO1i4YCbhro+hUpPlEjHL
Se4bEIjbJY+xYP4stv1PyPLR8xahqrYK7u4izmRcXC3IwGTehv69l6CJy4xs
1lou6+62stbGkTnCY9bi+e3hsV6Gv31aspNdT4zRj6+05rtstJMNw19zBsOf
PDut5cWgbHV7mxZ4YYjnL7PAZUYmqwnCvxX4w9fTldnXLF5/5Huvg6FsfCWL
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
YNuH6WxbWXdjMvO51C0xmbWc/a2xkZnGkNH2oeysMvzfjzMZFxcXFxdX58tJ
TNbPrJ/3EDSPLWuLrcxWbn9LTGbOZV2dycxjyaz5Le0Za2ke128phoy2j5JI
LdC3VzxnMi4uLi4urs6Xk5gs3tC/qw39vakP0zS2zDze35ExmJb8l/bElHU2
k7UlJ1lLNjJjflhrNjJrPkvaVp4CfXslECb7N85kXFxcXFxcnau2MplOp/s3
2q8b+ndPQ3+vFNj2YVqyldkag9lW/2V7j8FsbRyZPX5LR2L7LeUis+SzpG2l
EejbK5EzGRcXFxcXV+fLSUyWaOjfNYImn5i5D9NSzrK2xPo74r/sqkzmjPGW
LdnILPksaVt5CfTt1Z8zGRcXFxcXV+fLSUzW39C/ewmafGJKgeVxmNZsZZ05
/rKtpaPGW9o71tKSjUwpaPJZ0rbSCvTtlcyZjIuLi4uLq/PlJCZLNvTvWkGT
T8zUh2krrqw1sf7vMpM56re0NIeSLRuZkZ29Bfr2SiFM9j85k3FxcXFxcXWu
nMBk/5P264b+3VvQ5BNryVZmK7e/M/yXXZ3JrOXut3e8pa2c/bZsZEZ29hHo
22sAZ7LuKblUZkFSyGWyTj82Li4uLi7H5SQmG2Do330ETT4xW7YyW7n9HRl/
aSunf1dkMnvmU3KG39LSWEujjczIzr4CfXulcibrhiLtpf46F9I9MyHZNaNR
on2zoZg3iNzX0s4/Ri4uLi4uh+QkJks19O++giafmKmtzHwMprP8l47Ms9TV
may1sWS2YvtNx1qa28h0An17pXEm636i7eW1bgJUe2ZBSVjMKA/CZKp5GZDL
OJNxcXFxdTc5icnSDP27TmDZVmY6BtNarH9bYsq6KpO1Jb7fViyZNb+ltdh+
8zgy2lZ+An17pRMm+3fOZN1PcncJZCLxW5KLOY9xcXFxdUc5gcn+nfbrhv7d
T9BkKzOPK7MV62+P/9I8psyZcf5tLfbwWGvi+81jyRz1W5rH9pvayPwF+vbK
4EzG1ZVF4+PEYsKaXeBYuLi4uNpTTmKyDEP/7i9obiuzFOvviP+yNTFlrckd
29biKJM5Et9vnP/THr+lkcmsxfab2sgCBPr2GsiZrJuI3KvMBkb+t+veJiyj
/30XOPZWivpgfcISsWjhHPh6qdnzqrOP6V0WrW+xWNK5xyCXsWPobgxOx9dI
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
V/P8Vfrl+rxE7u7iZrnJGo+HzhfD7GbiZnmjWI4iw5wwzI7VmEtMxn4nZ3lF
pY3bMD7LjXnn9XPUmGzTLB+93GSb5scqFjc/VjanDdmexOxYmtVB43rN8ziZ
ynQ9/XxH+npptj12nFKbx9mYU8vedjLbprVzaGwH87g4s2XUBhSSOhsNz0sR
qaJ2L/dmbWc8d7GxDSz4983PgfpQ4waOxMKZ4xkHNr9GyLJBo8iycVbfN+n2
WJsbcmlJpW/nvtLX9dvrs7x5BtutaY6uls6B8l6zc5CI0T97IlauWIZJ0+bg
ftlzHNowl2xHZOU4TXK6yS1dL3YsMxy/O7s+HdimyXrmx8LaWyptdsz0ehGJ
5Fi99zLqSu9gSu5YjB49DgdP30Px1UPw95A0jR+Q6vf1dhvJLN7rzXOQNV1D
dH/rDl7H88c3MWk82d+YcThy7j4KL+2Hjua3s/sZ5RQmG2bo38MFluP8W8tk
9ubD6M5MZmvMZUtMZj6nEvUJ07q1Fd9vjCULN6jDmKz/7E0YuuYUhqw63qih
a84gfdoixmTdK5f629q0fQfOnDmDU6dONerMuXPYsWouYSvr53cwtT9uE366
MTitUbcJox1JiDIwmcG+Qd7/VXOyoAzSMB+kZs14qHbOhGb7tEYpds+Eck46
yxugjo2GenKa3m5uyGFImWzruF04Pe0kTk473qjTM89ia+YswmRda65vFhcc
l44tm9fBz5vPd8nluCgz6SIGYuumrxGsVjrtGpIzRrD8LmlrWVcRPcag5Gwc
PH4GF86fw9rl5P53Yv10tth4VN8QzF+1iT2Xz545jc1rlyHMW23XeJPW7E+l
C8XCrzbjzNmzZJ+nsemrJQgm+zOfj8L2dpzGZMY+3hhTZivO30PQPM7fVj4M
UyZrzdjL7sxkRh4zZTJ78mBYYjLz+P4Igb69cjrKd0ltHjRuQOIuNJEbywfd
2fevM0R9lW5ubsxfaRT9W9TCs1lI44sJN7lKTUT+FlI/pOlv6Tgrd0nj/HH0
s0wkbi6huDHPv34O8rff/4TkPdhNLDQTOW5p1+xDaJ9KY9+7O7NzdZ7YNSTq
WjbgriDKZUKhm/45JXJ/Z3isqd1ljTEkxriS9pxzS78/YbP9OWrbdxKT5Rj6
9wjB23H+joy9tJQPw8gkrc2H0R2YzN48GKZMZpoHw9Exl9SmGWFQhzHZuySj
f+Rde4Z1RRl9Obw/5eLietflRCYz9vGW4vztGXtpng/D3hxlLeXDeJ+ZzNKY
S2N8f/szGZvrz35uYTl9HPh9p90zdExSUCyWLF2IQJ1nq2KcRHTuPDvtPmx8
tkzWeiZh8RZiu+31MrmU/b4rMBCta5+wJCxdMhe+Wu675OLierfVTkwWIrA8
9pIzWfvkizVnMuM8l7aYLFKgb6/h7cJkcjru3gcRoxfCP9iv2fytFq9DNg9J
POLHzoJKrejSfS/Ld5Q6Bi9eVCMhyv+tcVW260UOsUKNebHRGKBVtzgHGuWo
cK0vVseGs3Fr9nJc0/1N+EoVgBkDFyLRR9sil9H42FD/AVg4cBpUCvu5sd3q
msX4z0BDfRnCArVtjvHn4uLi6spyEpMNN/TvkYKWmUwtsI/JnJU39l1kMuOY
S1MmM465NDKZeW4y0zGXRiajagcmk5O+1AMx009g9p0fEJ0Sz3Kf2rwOJWL4
JczEtLt/QeaC5SxPUWffG9bE8munjGJj3eMj/RxiMneZB75KGYj/M3UMZgV6
QdQCY9D5jgeFROP/njEZF/tH6nMwOdAOYqkaX467ij9sf4nx4eFk/7bz5FD7
WHrCUvxu95+xP2cWpNLOjcFxZi4MLi4urq4uJzKZsY83zYcRILCco0wheHsu
ciOTmeYo40zmOJMpBZZzk5nnwWg3JqP5gALSZmPmvT8hNXcS+9ue9aRiKSIm
7cHcvN+gX2oq82N29v1h8ThbyWTuhKcyw2Pw95mTsDsmGEI784G5SeVY0D8V
/9/08VgU6AOhnfN0iAlPDU75En/a/QesSc2BSGLPWAo5hBI55ow6gX/d9ROm
RMZBJHVs7gCn1jVnMi4urvdI7cBklvJhtJSjjDNZ65jMkXyxpvNcmjLZCOcy
Gc3doMWQPdWYdOCSYzkuaI56RQCGHX6FCXvOwVNpngOma6i1TCbxUOHRmDH4
dU4avD3s9wvKDTk9K8eNxw/ZA8i6cjty3ZDfKANwa9VrlC84DI1MaP/+5GIo
1FF4tO5nPJ17oFPzY3Am4+Liep/kJCYbIWjOZObzXrY2lz9nMvuYjPqALTGZ
tbnHaRtFCdqByajP0SsmG5Nv/QkZE8ZD4u5YnguaFyN84gHMufsdgsJDWf7L
zr5H3jrGVjAZzTkY6x+C/5g+Cfujg+DqwJy0VMxWlpSO/5o6GkO0aohbiAuj
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
Fe3Kk7n9jmytZy+OpT7Ik/TpSPi5yeW0f9AFSWeL0plKX7KIyYjJ+oLJPmQ8
8jWjT30+5H3r2Wr3pbaLSqpnH+TZ39dGIpFIfS1iMmKyvmQy/g0sU7joTyvW
PGOwJXcTwgIsTr4gfA9bX/iztnyju5O3OFcwJA65rJ5BNnfWILndUGa30b01
T6USltAEZsfXPI1t7PquXVQtcxfutIvSC77hyaye6+HnxppnT3n6RAxD7pZ1
8O2l9VBH3t2d/cPaXCbzFHOtyvYx5lmdWtLa9iHv3/eZ73kfO97vvHy37NQq
l33bPyUplV3PDUlpHf2qeP/J5a6u76nFuZdSe3bePrzPXc/PtTy/JEnzd33o
32af6+ftKVN82eu2xGTEZH3FZJx3rLYQTJ4wFha9psfnktg/mdjex5/vAbdg
/ISJCPYx9yp/8Pr5+Adj+vRpCPQ2uZy38PFPafHxd2+/puTjX4fYCL/38PGv
RbQjppRanC8zIW0iAnrZz4rzmF9QGKZPmwqb2ehy3pKP/3y8eVWNcDf2a/aU
p+TjX4nQANd9DLvN0/4e52d8c7/89v3Ax11QeDwWZ2VjyYIMDAnydpQrpQ21
p81zpPGx5Bs0BFOmTIBJr3P5Hexsp3XJjp9ZPn7yTMzPyMAMZudj0Pdsx3hM
bwnCxLRUeHfx95Lveed91l1aX4r7fIZHJ2Dc8KHiGjqkxSSytHinNN6m/uFx
mJI2Dka+r7a7OWkeL8xgxKTp6aw952HqRPas0jn3A78fAiKHYlLaWOi1LjzH
WJ46o6k1z7QxMOtc69vPUbwfooamYHRStGj73s6ft6fBbMXUWXNEe04aPxLG
T+C6+0rEZMRkfcVkPHbOkq1nkX/5W+gU3Z/TJ8ZiF7EwFF4aHL32HCc2ZYjY
i71VPx63M2niHPz+z79jZny4y995n0osDKXaiHP3irF/1TTnM5w/tF1knhiZ
vhj/8V+/IC0i0OXYBp9DLAyllwKBQ+Kw9/gF5D95gqP7tyEywNDapozRoken
o6K2AXeuXcC1775DRmqcONuQp8XY025fvYSrPI2f38PPWfSQY+byffhff7zD
1OjOOV06V9G5/twufeUB/OuPXzA5yreDXYtNi52IOWowYfO+47h1Px8/v61B
sp+lw1xeh7KVCvjFTENjYwWG+lpEOU6x89X8LAJ/bNuzDyPDrfb0NmnGgE7T
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
4yxe1xVj3cqlWMLKu3jzKV7cOAYflQxRI9Mwd9rYTsvqSR3Laz/GlGLeumXc
d9aeynbt2bWdVJ74vUqaN2zbR7xfeD94dTJ2W8Z7Z3n2pYjJiMncYTI+vlez
9/Dx48dx5MgRh46yn3esXQxvtVysnbl7xrYYi/w8yMAobNi4ASH+3Zyjo5bO
YuTfZ+s3b8axY8ec6nKM1WXrqgXYtjkHR492lpYJi923t0MdmDZsye00z9yV
GYzlFOI+tobEImfjegT6tp5bmZO7tXO75W3t4pjdutZzK1m7b9zK7I4e7WC3
ZcU8mNQK+x7yeGHHYwl0xQtqe7twH5hN27d3mef2bVtYu7RLO3ECm7Jnw6jq
2C7SN6UOW3bs7GB3nNltzkqX7MTZlInYmLOWfVP2znlPwpc6MonluZp9x/bu
GVKkD+wb7mcWmIAc1t9Bxt4537Slz7s6W7KrNM4i3hHJ2LHvME6dPIm1WXNg
1Gn75CzYfpHY22DBjAUr2TPmOHv+HsPGNVnwN7c/H6A3y7Ni5qLVjvK437zN
JLWpOPO1l+IhkpxFTEZM5u7aZcvaV3sJFvvQ8ciYz514YV3Vhfs4eHaT5sra
ZXd2rfG7Wusps6/ldbBr8w75MDuZy0zSXZ48n57KczfPjvXsxWfUe8RKI30c
9UV/f1hd2tyrXwqPtUitFnEaW59Hsr5lzg7lyb8cxv2ERUxGTNYdk6nV0hkT
X9zzjfTZqGUM9nc9SCQSqa9FTEZM1hWT8e9OY0AUcrdtRUSQd6+fKyH8JBTd
+9uT/tyS1i5TsH3bBvhaae2SRCJ92SImIybrksl4vOm4VDS/bsaoocFuxRrr
SZzHvP1DMXXieFh0GuIyUqdy9vHvxseQRCKRvgARkxGTdcdkPjHjUFNXgxHx
vctkPDb30u3n8eTSfscZfv19L5A+PfV2LAwSiUT6lEVMRkz2sZmMxzfXeg/B
8/JqZI6Jof07pC5FTEYikf5MIiYjJvvYTMb38qQu2IiSJ1dg1co7PR+FROIi
JiORSH8mEZMRk31cJlNDobTg0uMSbF+Y1m/nAJE+DxGTkUikP5OIyYjJPiaT
8Zj00aMzUFXav+dlkz4PEZORSKQ/k4jJiMk+JpPJ5F7YcfYBLuxdAVk/nSFO
+nxETEYikf5MIiYjJvtYTKZWKmAJG4nyykqMjwno1X2cpC9TxGQkEunPJGIy
YrKPxWRymRyZOSfw7Ooh6GQU/4LUs4jJSCTSn0nEZMRk7jJZd+dBdnkWpqcH
NN6ReFpWh8WTh4o1zP4e+6RPX8RkJBLpzyRiMmIyd+L48/GSsXARNm3ahJyc
HIc2btqMZfOnI3txJjZu7CQtYyqCQkKRmTkXVpOWzsghuSTnOP7EZCQS6csW
MRkxWbfnXfpHYM2Gdex9aBXnIXGtXL8eR44cwcGDBx06zH7esmoBNm9YjUOH
D3dI27pqIaxquZhLU1M8MpKLUiuV8ItIxPr1q+BjpvMuSSTSly1iMmKyrphM
Gh8qeHp6QtXmXfhea5ecxT6B8U76/MS/DTw9ZcTyJBLpixcxGTFZd0xGIpFI
JBLp44iYjJiMmIxEIpFIpP4XMRkxGTEZiUQikUj9L2IyYjJiMhKJRCKR+l/E
ZMRkxGQkEolEIvW/iMmIyYjJSCQSiUTqfxGTEZMRk5FIJBKJ1P8iJiMmIyYj
kUgkEqn/RUxGTEZMRiKRSCRS/4uYjJiMmIxEIpFIpP4XMRkxGTEZiUQikUj9
L2IyYjJiMhKJRCKR+l/EZMRkxGQkEolEIvW/iMmIyYjJSCQSiUTqfxGTEZMR
k5FIJBKJ1P8iJiMmIyYjkUgkEqn/RUxGTNYTk6lVKqg8Fez/atfGlMILarld
yo427ubXW+P8Y99X/X1vk0gkEunzEjEZMVl3TMa5SR/oD1NWKvTh3j1zlFoH
07gEGGaNgHFmCnRRvk42Ir+gACm/SBfy+1Cx8a2Qy9k410Cr/Qj31Mcuj0Qi
kUhfjIjJiMm6ZDI2NtQyLximT8WA389Bu2aEmPtqSdOoNW3+zdmK/b3KBPXJ
1fj30r0Y8OY4tMuTmI2ydbwxe9NUlt/fz0G3YVRrfi3lMUZTK1X2/NqMU5UK
aoXSzbHNbLQ6jJuaiWs3bmN5+nDIFF5u5uE6M/I6arR6pE5fgOs3b2HpjGFu
l0cikUikP6+IyYjJOmcyLXQWE5MR+vBgGLInQBdqtXOHFlqrCRqDTnCZ1miQ
fm6ZF9JpYRibiAFNx6FZlujEZFqTAYaQIBhZfvowq9M8mVavh97mC11kALTe
RonNeBr7G0MEq8O4GLEu6mDBbse1itUpCCe/e4Damjr8459/4Mi6dHjK5C7f
G1qdHlarFToXfO14eXrvEJy5/hg19vK+XTXdrfJIJBKJ9OcWMRkxWQcmY3yh
MflDcWUL/lq8C399uQODC3ZAtyAeKk85Y6kwfP10D7SLE6D0kMOwbiH+VrCJ
sZtVcJRaroApJQYDGtsymTSHpj2zFl8V7WR/z/LLiLPPffE0HbSHl0nlFe7C
X0p2wjAvAWovls5kzJ6DAa+PQLdiBNQapQtrnuwaDDbMmzcboZGjUFr/C466
wWRqLxls8RNQXPwcMeG+ULTwYTflaY3+yGDlhQwZjYqmd8RkJBKJRHJLxGTE
ZB3nyTjvGGAYHgPd+FgYFk3EgOYT0KxIgspDBj0bK/9efhTqlclQDpZDt3UZ
BtTtkPzDOJMpvGAaHteOyVi+ai30SRHQZ02W8mvDa7w80/QUaGNt0AXa4Hll
K/6tcCN0Nr19nwBLX53O7I5CeWA6tCZdp/sHnKWGzHMwVJYElDX+6jKT8XtC
yZjMP3EK6uorERfhx5hMKXzEXCrPJwmVr34jJiORSCSSWyImIybr0p/MS8mY
SwZTYrTEV22ZrPQI+1liMn1uNgbUuMBkTNzenBwr1jW12a1p3M4QEgLzmpmQ
HVmEQY92YkDFVhjsc2/cv0wlU8A4k/Fh0wl4XMoUXNbe76zD+FYpoPFJdJnJ
FOyaR0/Oxo0b13D9zmP8/NOPuHP9Kq5+dxlT4kIEm/VYni2ZmIxEIpFIbouY
jJis232XnK+GxXZgsgHlR6BdngjFVzJpnqwNk/H1TeMwae1SvXQo1IMVDh8w
niby475mWVKamnGOITgEns/3MxZbB1N2GhRXcvE/2jIZX8O0WGHazfiv7lvo
l4+CRqvu0bdMrVRAaZXmyY6snYXBnrJu/16pUiEqYRxWrliGtdsP4fWbJmzf
vBbLl2UjMcRXpPdUntpPmic7sHIaPHooj0QikUikFhGTEZO5xWTCnyyc8dIR
KI7PhGFUCmQvv8WAqu2MyazQ6PTQxQRBP3uc4C5Fbir0sUHQmPTQGA0izTBH
SlNvGS+lMbYyjErAgDenoV8zAjp/f3jc2YF/q9wmMZlCCWNEKLyu5zL22wPj
tFioZK74+mthsZjhFz5GMNKpzZkwGE09+uyrlV7wHPQNrPET0dRcg+gQCwYN
9mA81tNaqVSeb+Q41Lz5Hcc2zGXlGV3aI0AikUgkEjEZMVmnTMZ5h8elkCtg
TrbPea1MluLAqnQw7szCgNqD+EvRdqiPL8Pfnm2CIcTMFAaPhzvx1+I9Ih7G
V0V78NfCrYzXfFhaqD1td5u0LSzNFxqLNxSXNmJA9QF8/TQX6tOrWJ45jP8s
Ih6HcfF0/IWVoU/xd46f0aVUUKl9cfLaYzQ0NOD7H37Eq+YmVBY8wBA+39WD
zz7nMu+IFJw+fRzhQVYXeEwFtcaGMzefoKG+tbyyl3eYvXeP5ZFIJBKJRExG
TNZx36UaWrMROl+z2PdoGj8KA96egG5WtLRPkvtwaXXQJoSKvZZ8fkjvbZZi
YbDf670t0PlYxO/4/7m0Om0XaWaRxmNsaNk41KdEQBdsaZOn1l6eFlqjvjU+
hkvSwtvHFzabDb6+vmy82mDz84VO59q8ldrt++nDyiORSCTSn1vEZMRk7Zms
Zb3yry93YfB3a/CXsoMYeHcVdH6G1hgUaskvX/zM59Ta+trz2K/t5GqaxquL
PDWd/Ozi+Fbxs5wcci8Pd89I+tDySCQSifTnFTEZMVkHJuPzZD7eMC6eCMuW
WTBlj4POZnJzjopEIpFIJJI7IiYjJuvcn0zyJRNnhcu8Pup54SQSiUQi/RlF
TEZM1t2+SxKJRCKRSB9HxGTEZN3Gwmjv80UikUgkEqlPRExGTNYVk3kp5FCp
NTCbjOKsoZ7ipZJIJBKJRHp/EZMRk3XGZEqlBokT5uDq7XsoLi7CxeM7EOxn
IS4jkUgkEqmPRExGTNbZGeQKpRU7j5zHjpzlGD9xGgpq3uDGkY1Qy2TvEbeL
RCKRSCRSTyImIybrfO1SLWKdeikUGDhwIBbuvoyqBxdgIiYjkUgkEqlPRExG
TNaVP5nk36+CTGHEmYfluHFoPZQyeb+PWRKJRCKRvkQRkxGTdcdkMrkc2dsP
o7H0CWJsZijIn4xEIpFIpD4RMRkxWVcxY+WMx5bk7kND1QuMHeILGc2RkUgk
EonUZyImIybrdN+lSo2sTXvxtq4c6cOiYWb97e9vg0mv6/cxSyKRSCTSlyhi
MmKyDuddKr1gDU9GQc33+OFVIyorq1BbW4fG2hJMjouEwkvZ7+OWRCKRSKQv
TcRkxGSdzZNpdXpYWR+z/oWvr69dPjDqaJ6MRCKRSKS+EDEZMVn3+y6d1d/j
lUQikUikL1XEZMRkdAY5iUQikUj9L2IyYjJiMhKJRCKR+l/EZMRkxGQkEolE
IvW/iMmIyYjJSCQSiUTqfxGTEZMRk5FIJBKJ1P8iJiMmIyYjkUgkEqn/RUxG
TEZMRiKRSCRS/4uYjJiMmIxEIpFIpP4XMRkxGTEZiUQikUj9L2IyYjJiMhKJ
RCKR+l/EZMRkxGQkEolEIvW/iMmIyYjJSCQSiUTqfxGTEZMRk5FIJBKJ1P8i
JiMmIyYjkUgkEqn/RUxGTEZMRiKRSCRS/4uYjJiMmIxEIpFIpP4XMRkxGTEZ
iUQikUj9L2IyYjJiMhKJRCKR+l/EZMRkPTGZWqWCylMBtVLt2phSeEEtU0jq
xMbd/EgkEolE+jOImIyYrDsm4/xkCA+GcfNM6GP82M/dcZSajSc9DNNHQp81
AcbF46Ed6u9kI+UXAjPLzxDXU34kEolEIv15RExGTNYVk3FeUsm8YJo6GQN+
PQPtqhSo5V6ONI3a/rdsDElsxf9vgvbwcvytYBcGvD0B7fIkZqN05MnzM0+e
hAG/sfzWjXTk15qPCmqlqgOrid8plO6Nb5afiufn+F37n3uS9PcfrzwSiUQi
/ZlFTEZM1imTsZ/1flbobUyRwTBkjoY+yCJYSavTsd97Q2vWCw7RWczi77Q6
KQ8xFzZqKAY0HodmWaITk+m9LTBEBMM4fzR0wZY27MXyNRlhCAmEdmgIdAEW
kY8jv9gIGKYninVRjQtza3xcG01mBATYxN/znzkb2fwDYDEaXOAkdl16I/z9
bdDreva14/kbzKw8f16eyl6e1l6enriMRCKRSD2KmIyYrAOTqRkLmfzheTUX
fynbjb8W7sJXZXugWxQPlacc+vBwDH6xH9qlCVAOZj/nLMFfSrYw1rJK81ly
L5hS4toxmTSHpjq3Dv9eukdItyC+TRrjlpOr8NfiXfjm5U78W+Ve6LNHQO2l
FDItSseAN8eh35wKtV7Voy+aSqWAb3gSXlQ0IHfBJHzz9dcYMzsHNRXPkRLq
A4Wyu/kvNZQKGWwJE1FeXojYcD8ovLqfo1MrFfCPTEFBVQM2ZqSy8r5BasZm
1JQ9RVKQFcpuyyORSCQSiZhsADFZF2uXehjiw6FPCoN+7jgMaGJ8tSIJKg8Z
9GysDCg/CvXKZMFkuq3LMKB2J/u9t32NkTHZ8PZMxvPUQhcVDBNjlgHNx6HN
bpvGyhsbC22oFVpfbyjObcGA4k3Q+RsEf6lVOhgXTGZ5HoXXyXnQ+Rh65DIZ
q8fEJZvxQ3MZpoyfgILqRuTMS4NMrujhvmBtwZguMHkq6uqqMDTSHyp1z/cS
L29K9jZ831iCyeMnoqimGWtmj3OhPBKJRCKRiMkGEJN17U/G+IozmCkxWuKr
Nkz276VH2M8Sk+lzszGgZocLTKYR82zm5FjBeG2ZjNsZY4bAtGsBBl1cgb89
2824bysM4dLcm/DNYraGiWNZvicw+MYS6Cz6HtYx1ZDJ1Fi35yr++cd/4dLe
5aw8z27XERUKJcbPXIO8vEd4/KQA7375GfmPHuDhg3uYmRjWw3wZK0+uxsYD
N1h5/4mzO5dCJeu+PBKJRCL9/+29B3QUV57v32/fObt7ZtbjAEhqdQ7qVkut
nBOSEBISSEgoS4icDMY4jDE4Z2OcB2zjnAM4jG0MIgshcjAGY4LjeGZndnbf
zr6wM7tv9733P9//vbe7RKmo6q6WWgjh3z3ncwjVt+pW1W39PvrdW7cICXIy
crKQz11yv5pYfIGTGXZxJyuH8YpYOO9e1u9kVuYswuMqikQdy5JSWJi3iecB
+Bx4tk1yMuvi4DZWx5mbgyu3P4bYt65HQmcVzOtW4q92393vZJb4eNhZf7M9
eRM71kNwzp4Aq032nIEa7HixzLFuf+w1/OY33+OVe5cxr4sN6Uhm5nhZhRMx
a2YX5v/yPhw+cgC/vH4BZnR1oSg1UWwPdTzubHc9+SZ+88N3ePGuxTCNIycj
CIIg9EFORk4WkZPxXFVmNn7OnCzu2dlwttQJlzL03sOczAubwwn7xDw45zcy
7/oVTPc1wVGVK54H4HP4+TbHArbt8PltFocVruoyGI49A9uKKXDm5eCKXz8g
9imcLM4Ed3E+xn1wH3NB9n91ueL5zXB9O47Vm37jw/h832dorGnGrgMncMe1
bczTQo8lWkzxiBlzNRLHN+Hw4b0ozPJizNgYmMI8W8D9b+Ytq3Gs71N2vBb0
HjyBlfObwx6PIAiCIDjkZORkqk4WXN/CEmeEe0Jg7JLPH+Pz9y0mG9wr58Gw
ZzV+selOOB9agKs+Wg57hpv5WhZi37sHv+i+TxDz2f3sM3cwX/OJbeM2KLfd
xrYlwepKgGXNzczDHsHVH98Oy+prxT6dmR5Y+Hocc5pwzXs3w1HsGzAWqtmv
4+ORWdSALb17cV17Da6+egwaFt6K/b3dqCv2h5njz5/1NMKTPQGPPPIgslI9
YX3MxI6XxRxu+54+XNtShavY8ZoX3459uzdhckFS2OMRBEEQBDkZOdmFz11a
YPO64Ujzsv5hhaupTqw1Zm3PD64RFhgzdOSlwp7iDqyP4XbCarOKNTT43+0J
LvGnyI0N2Mb+X7YtUM8m1ruwORzMudJhT3YN3Kdok1WstWHR6zbs806XC15P
QnCNMb4ehhlurxdup0P3d0Pv+mQWcTy3OJ40/40fzxPB8QiCIIifNuRk5GRK
J+sfr9z+MK557zYYeh9DzGtLYPXaB8ypH7C2q0WWR+J/V6Jzm/AZtX2Kfw+u
f4f693B8ny7m8QiCIIjLB3IycjK1PJnV44G7vRqexfVwdVXA5g2/9gRBEARB
EIOHnIycTHM+WZwx8K5w/v4jyvcQBEEQxLBCTkZOFuq5S4IgCIIgLg7kZORk
mmvGqqC2LVQ91T7HMAffPxlJvUH17zD/1gNva4wpsneJm1idcSYTxjKMwXPV
ulZDPT+te0SEv26DrW8K9olI6hjNZtEfOCbZ3MjB9C/97TQjxkLP/BLEaIGc
jJxMy8nsDAd/F3k/wT7Dt7F/uxhO9ncjizFxwbHNUNs4PC7x9xSluJxIYPuL
ld4zLupZNesNFqnNEnzftgjq89hbmJiM2/KzkMyf+9TxnEGc2YLiJD+eqCjH
sxPGozHJHdim8swCP99I2qN2j1zB6y0x0j9TLnUk91H2jUj6RLk/FStyM+C2
6XM77uWVKalYU1mONeXFmOx1iv1wH8v2JuGOwlz4Hbaoepl0zFtYO13WC38H
Igji0oOcjJxMzclMZjueqKrEwaZ6HG5uwJGWRvTVVSLfyTzA7cV7dbXi/w83
T8UH1RPQlOhhLmJCQkIi1iu2TWPbjMxT4ph/lSWnYWNDPf4wowMnmmqxIM0n
6nkSfFg/9Xy99yeVoyHRLer191VrIB7qiS0mdqzi5FT8uqYCOc5AvsBq9+Ct
mkloDu5XytXxP9X2y78bY+NN6Mgrxp+mT0OhyyY+J22TYqq8DnfO0pRMfDO9
De9WlmJNRRkWsXN8vKoKqwsy+h2Ue9uSkjK8WV4Ah9k8oB3KfUrttCjaGc94
eGIl9k2bip76WuxpnIp3SwuRKDsvtXqh9infHqotmtfMqp4D1fz5o/J5vfXl
bVG2U+scAnUceLG6CnN9LowzqdcN9fNyDOsTy8ZX4PfttfAzJzOHuWa839dm
5ePHrja8XDGeeXopZvk9og/w/jWvsBT/NqcDXczT4i5oq57zU78217B9/7Ks
Er9tnQyfjZyMIEYD5GTkZGpOZmRO1t3Wir/MasUrE8uwbiL7/X58AdLsZiR5
/fjNnNn4fFo1+72/Ev8yfzZ+bKlBps0MX6IfP7Jtx6ZN6t/2m+YaZLBtScy7
Ts7owj93NmDV+BIc7ezE/57dgkavA4lsn38/Zw6ONlRjLXPB/75gNn5orkaG
3drvQbyNmayvunX0a+5GVZk5+G1HI8a7bTAyJzM72PGZK81L9rJ4aIXf5RSf
zUhIQDbbr3zdCl7f7XAgw+XG4qIS/LGzHgVBJ+PbvE4nCrwepDvt/d7I61/F
4uBNFTX4fGoF4uPixL/Hsri/YkINfts8GX5rIL6arU7s7WjHc4VpwgvsNjs7
twS2zwS2T+cAF01i7bSzevyY+Z4EkZvhcZg72SfNrdg8qQht6WmYnZWBZr8P
zmBOhNdzsGMlOl2initYj+/TH2Ibd4gkl0u0Jc3pEP+W2tJfz8XruQfU4/Ac
aTrbZtPzs4fhYdc4i69DJxvf5fc40R46Z8T7As+18s9kJXjEPuTewn3HHzyH
VFfgHPhnE1md/MRknGa/E9ydngw/O1aGzvbGBe97OusTd06YiN8w15GczBi8
ZoWsT6SIaybvExasqpmKXVXFuCY2Tjhd/31wu1CUmIS5manw2s6fs431B+n8
stn5ZbJ9mwf0T4vsePb+40ntTGTtTGP7vreiCt+xfuclJyOIUQE5GTmZlpNt
am1lPlWNBGMsrog14ipjvIg9ycy7fpg9C68UpcEwNhZr6xrw/81uxUSPDR4P
8zW27aWiVBjGxeJZtu3/zWlmXmTH3OJKYOEMLEnz4mcsNlWl5+AvC+fijdIs
uBOS8TtW7/nCFFHv+anT8P9mtWAC8zU+BhPLYs7iknL857yZWFOcKTwmVL/m
7azMyMZ3bQ0okTnZsY4WzElyI9aWiO2NU/FmTRU+b2/G72a0YVV+uohnom5q
Jva2NOJkayO+ZfH7j211wsliTCa2LQsHW5twjG070zYNN2f5RT3uAKWJHrxc
Pw3Hpk5EBXOdiiQvc0gL8v0Z+MOsNrT73MzR4lHE9vHbriZUJziFs11fWoEz
7U34grXl+84m/DIrReyTe9crdXXYwLx4V3MDvmft3FpTypyFxV4W13/d1IRf
5fnxVzHsHsUZRW6En3+81YZXp07F+ooy9DRPE/W2sHo+Gx/TsuI1sa0UPS2B
bd3BffLr3JlbjC87mvBlWxO+Y3/enJMq2mJm+3y9fireY/V2B+ttrh4Prz2w
Zm4MO495BWX4y7zpuCk9Mew8JjFu50sRnnxXtp+1Px5zCstxprUW44X/av3M
MiMhwY+9TVPxes0knGT39HfTm7EiOxWxJrPw7VkFJTjFrucpdg7fMC9fyu7R
GHa8eyZW40xHM/5l7gxxbicZOyeXI8l+Pt+l1Z+mZeXhCNvfidZp+O3MTnzX
VI1kfs1MfFs+jrY3ij7xVWs95qX5xLVMY55d5vPhI+bOPdVlKGOOOMHnYV7N
vm/Mu16qrcVp1p5z7VMxibmcyD1a+O89KTjQPBWvsfP7km3/bVcLbsr0i33y
e9GSVYBjrK8cY/2QH29OamIwF21h21hbgu383azpODetipyMIEYJ5GTkZFpO
9mlLM/48qx0fT6nCh3XVeKG8ED6rCYneZHwzayaO1ldiVXk5vu7qxFYW11yW
gK99O3smDrNtjwS3bakpg5XFkUcmT8X/Ze5W7nWyOGaCX+TUZuGTqkLhZN+z
fR6qnyjqfcPqdbN67mDOh8eaBSxe/4+5nXiyMD1svA/nZDE2L050TUdf3QQx
j2dByQT8yLwrw26GxenBofY2PFWQKdZkm1VQGsiTOdl+HR7sY7HwbuYp3IFa
8kvwY3s90tm21pwiHG1pYA43Hf84sw0HmupxqGky6jxO1l47etra8Pr4LOEe
KyZU41h9BZxmk/Cu4kQf0ux24VS3lFXiWxbv/azN3LvWN7bgnzsb0e73IN2X
hj/O6cTspASMY9/dDY3N+JId46WqCXijphK35WWIdyLwfX7APOC/TW9AG6uX
kZSGf2T1ZiS6RT2+7Z/YttbkBGQmpeOfZneig92XlMRU4VqLmcNwP1hUXIY/
djUyR7IjlrXloxZWj12LFlYvW9RrZ/XcYsyNO0F1ei72NEwWc+j0zAfk93F+
cTn+vqMenekZON3VhpsykkLeX/E+BncK+72gC5smjRfzEldMmISvG9nvDxYT
cpPT8SO7/nMykoXXLWW++4fOach32kR+LdmdiM+nt+LWNI/IT3rYdQ/3M9LH
ftf4qqsdd2WmiPPkY4I8T5Zk437ow4nOVlzLPIzf20XjJ+Db5skiX7mwsIx5
UwN+ZG70B+ZVvE/sbZiEMqddtI3nPLN86ay/N6PG7Qw8D8LOz+dJwx/mzMBH
lcVwMRe+p7IGpxqq2HfMBK8nCV9Nb8GCVC+uYL8nLWHn93VTDRKsge/fWea4
KzP8op0ryydRnowgRhHkZORkWk62kTnZ/2Ixd8uUanRPnYzXy4uQzOIFH2c8
N2sG/onF7v85bzb+sb0OxSze8TjKPetradt8vq0WhWzbNcxtnqmrx3/Mah7g
ZDyn9mlVkXAy7nn/NKNV1PtjW62IoXGyXAmPKWlOp5jXHq5fh3cyFpfZ37nb
XGk0ojI9C9+31SPfYUFZejZ+aG8QDsYdqZ25FneyHIcZJalZzImmY0N1BdZV
luPVmin4X3M70OpLEPknPib1yBQWd6eUw8mO6QjO4efP1d1aNgnnGqtY7LRj
W2sLnsxL7Z/P5E/w4qEJZXht0kR0N07D79k15fPguAd92NSEF4szcFV8PCw2
J+bkZKOcxW++7f2mZuyvr8KdJYV4sLQI8zNSxHeaO9nHzc14vihd5Dd5vbms
XpnbIa4p37ZOsS2fuSnPL/EYnsR8gl8zC7tm3EWWM68bw+pxT3+2MK2/3rzc
bJS6Hf05LTEHKjjPSd/PIP7MoRVPTKrFf8ybgZeZs/LnO0L/zGIexJzsbGcz
6hKcrC1GNOYW4NuWWniZlyxkHnmO+ZmH/Z2fg92VjHPM9a5n95r3UYcjAUeZ
Q93g5/8O7yq8Pc35RfiW9Uk+L4uPPV43vlw4mZc50tScAvzL7A68MWkCnmd9
4q3aOvwP9rtHBbsuPPdmYt73yrQmbKwsEr+byJ/rMAf969z0pgFOlsT+72v2
fzx3dg07v86CIpxl98XNjteYW8iO147Xg8d7u26qOF4B67ut7P59zT7H/WxM
vAU3lU4kJyOIUQQ5GTlZqLHLH9nv30kmo5gXNU48wx/4Xfz7ObPwekkGpuUU
4j8WzcYzBRkYy5zBHxzXfI1t47GDb1vLtvHf52+ZOBlY0In25AT8PC4O+f50
/PcFc/BOWaZwst/yMc/idDTlFuH/sHq/yksfsN4AbyOfI+PU0a+5k03KzGGe
1SCeS4g1m2B0ePEFi8Xzkj39TjaH/X0Ma3eV8Ld65LG4VpmRI/wsj9W7krW7
I78Y/xh0slLmbjyn9HhZIW4pysdKxo352eyz9sCaBownhJOVwcKulzQexp85
KPJn4HczmjA/OxdnOhpRmRCcq+X0YHdbCz6bVIrFOVl4proav++oQ67Mybhb
SeO1/JqYgvPJ+Njl2vwU/HVsnPAk6TPCydg2ab6avB4fg/y4uUm4lXwbd40F
RaX4pmkyfFazaJuNORnPXV2fzPNyzMmYy60tSA3Ws/TvU7rupuD7svQ6GfcE
7rLrptQJJ3tjfI5woFD+IDnZGeZk9R6n6HdNeYX4prlWeBgf4z47rZr5S2Ac
2ulMxtfsHBb43OIZCydzsmOsH1zP3FzPHH/eng7mRF8H3YZf5+tLJ+BH5mQ8
LzeNHftPs9pwf3EeVrD+wFmam4l0e7BP8DHfoJMpz83E+qU3IVU4WbXLIdon
OZnwNFfg/KYXluAMuy88T9bC/PBPM1txr+J4PnY/ZjAnO8N81M2uA2/nL8sn
4ntyMoIYNZCTkZOFcrJ/md6I+wpysLwwDzfnZCCJ/WyX5vi/Mz4T11ic2N3R
if/WMRW5dosY1+Rz/N8Obuvt5NvqkMXqlaZk4V8WzsUX0yZhflYWft3YjP87
tx0tiU542T5/z+q9yVxuDKvX1zld5N9yHYE4z+fRLCgux1/mdeHJwoyw88m4
O+YkpeG3Mztwa5YfbhYfp+eX4u87G1HmtiPO7uv3M+5kkzICubFC5kG+xBR8
z+rdlO5DljdJjDn+qaNeuJ3Nybxuert4hpIfJ4HtN8lh7493vJ1P1jZgf205
bIr4G291oru1Gb9tb0YPczYHi8fc1dKT08V4JG+L1ebEC1Om4p/59Qw6Gc9p
vSRzsvP7C2x7izltisuF7IQEZLAYbgtu4/70gsy7JLiT8XzX84ptvC0FzBt/
P6sDN2clw8XObVFJBX7TztrisCGO1fuspQXP9TuZVdFnLKgVY5c1aE9y6Rq7
jDVbxVjtD621aEpJF3P37spJ7X8+Vf1nVsDJzk1vQUPQyZqZF33XUge/1YRi
1s/+gZ3DdRk+dt8dWMr331bLHCnQlxx2N453deBp1o/4XHg+xz9U7pVfl8LU
LPxhViu6/B7xPO/n07vEcy0+G/sdxePHdzPasTwrRXyeP7eQKOsT/Lq9yfr6
pqpCRQ7QhlR2v8YnZ+GHrhZ0+LzsPjqY0wacjI9nTg46WZfIf01hbmVGipf1
T3a8mzP9A45nZP1pPPt94h9mtLLrn4BS9jsPf6bm+6ZJ5GQEMUogJyMn03Iy
Pp/7D7M68buZ7SxOd7KYUIsiF/OQhGQc7mzHs0UZIo80t6BMzCu6ncVxZ0IS
jnS045ni9IHbspPFWMq1RSX47azp+Ne5XfgHFnPuZPGXx6lk5nLHWL21zBN4
vfmF5aLebVmBec2chcUV+DNzsqeLM3Wtg2lk8f6GklJ83dmCL1oa8FXbNFzH
9idyFQ4vdjTVo9OXIGLehLRMHGycLMZLuW+sGM9chMXJL5qm4uXKCuxtqEYe
H581mVGfnY/jHS043lyPI60NLNaWiLE+nhPj897urZqMjez/lE7GPWNxyUT8
aU4H7sxOEvO6+P+bmIc9M7kW33Q04WjzVHxaW4397HjZjsA8/lemTsVj+WkX
rFHKvev5uqn4nrnJ8bZGnOpsxmeVJWL8TprHvzov9YJ63Mleq1ffxsfOlpWM
x9lOfn4N+LJ1KqaL+eqBOf5v1tdjVV6K6nqpsey68fv9r+z8bk71ipxhqPtj
YtdqPHPAL1m7+XohVxhNmFNcirOtdahJcIhzUP+ZZYbb5UdfSz0mJzgxjt2/
qdl52F8/CSn2wDz3X44vwzlxDo040TIVrSne/mcTeV5vIeuHX09vFc9wbJfm
+IdYe85oseGRidX4DbvWRxtr8VLVROyuqxRz/Pl+Z+QXiTleR9j9O8b62fry
AjF2LfKA7LqtmVKHt8rz+p3MwvqLy+7CRw1TxXMd3/K2dDRiM58fx+6fN8GP
/cwxK50OcX7cOfdO5XP1A8ebVVCM0x2B433OjvduWb5YU4Uf6/HKGtHOw9Nq
8XJVJXbWTiQnI4hRAjkZOZnWmrE8T5KgwBbcxvNOjmAd/rPe7eDbbRdss8q2
Bebqs9/zExJQk+xDqj2wjoRFZZ9WxT4D2FCQoG8tDAlpzYCJPq/IZ8nXDODH
k/Ij/PzdsvPj+ZQcjwe5Lrv4u3wb36fD7sD4RC8KPS5FGwPr7LrsWmu32gZc
x8D1C/gcX1sj1xVY04HXlz7jUlyXAcdi23iexBskQTZfPVS9UNukdR3484Ee
1g75NQtVj8PXwshw6ltbQtqfx2HvHz/kf/I1SNw61r6V35PA/bMNOIdkd+Ac
EhTnIN1f/pxsiTcByY7Qc/ylPs6drcCTgExpfr7sWhtFu50oY/0sn3miW9kn
2GfV1vN1y+4b/1P+vIH8/OzK85MdL092PKmdfI2MDKftgnYSBHFpQ05GTjaU
dyvJ/x1qm3JNULFmq8bx1PYpoXfNWGUfN6rUC/dvs2w9TrXPmjTWTdVqe7ht
8vVGw10Hvfco0jbIr5nWmrDhrncka7DquQ+Drad1Dnq3a9+j0H0i1HvDhnL/
IjleqHYSBHHpQk5GTkbvICcIgiCIkYecjJyMnIwgCIIgRh5yMnIycjKCIAiC
GHnIycjJQjoZn5fCn7kLvi9Q2XcsIZ5Vi5S4uFix7kCovhrN4xEEQRDEpQQ5
GTmZlpPFx8eK9QiS2H1O9HrA1wg9v539ndVx6nhmLTx8PrIbMxcsQU1BOkwq
6ywEjmeP0vEIgiAI4tKDnIycTM3J4uPjUVDeghfffh/btm3D9m1bcNeNsxFr
NLI+Y0JcnAN3Pf4crm8qRUxsrMijyfsUX8PexNexV8l7iefdpO3iGT0zTOZk
fLDzIO6aUcX2bQx+JpCb48eLNbpw3xPrsKS+6ILjiRwePyb7k+/TInvuL/K2
WAfsN1w9eqaNIAiCiBbkZORkSiezmE1wpRTh091H8Nw9t6CyogL1TS2oqykX
HuJJSkZ6Rgk+3n0Ijy7uQEpqGjIz0uDga5Cx/mRzJiAjMxv5rE+lp/pFnf59
m+KZ+ziQmZ2D3Nwc+BO9sFpMwsne29qH27sqERsTy1zHieycbHicDnG8jMxS
bOw9jIcXtMCfli47Hs/j+eFkXudJ8rN+nAs3Xz8quB6V3ZWAzCypLckXtsV6
vi3JPBcY9LJ4YzzbXwry8/OR7vcJR+3/3rDP2B1OpKen63r3JkEQBEHogZyM
nOwCJ4s3IqlkKo6cOoXFDWW48sqrMHbsOBiZp8THmzD71kfQ07MbJ06fxeF9
u7Ftxw5sfHcdsv0OxMbFo2v5auzu6cG2bdtxYH8ffjm/lTmOEWbmek5/AZ54
ZQP29u1BT28v1q95GMmWGBhNASe7rXMCxsTY8eDad7DpjXVIYe2atfJRcbyT
7HiH9u7Gdna8T955BplJdsQaLVj9ynt45dFHseGTbhw4eAgfvfI4khNsbBtr
621PoJe3ZTtry749uGF2Y39bXKlF+NVrH7K29LK27ME7Tz4InyWWnWccyqfM
xWfbd6K7ewv6enZgSVedqMevD8/jNS64C9//8A1ubJ/IjhM/It9dgiAI4vKC
nIyc7MKxSwvirR7c8MhL+PLkcby89lFMLc8XTsL7i8Nhh92Rhne39OGeebXg
a9O7XS7YbFaRt8opLEFKghPXXDMGM298BEd3bEC6MxYxcSbc+cx69Gx6A3l+
DxxOL0oKC+F2xMNoTmb762VONgV3PP4a9nz8Noq8bvEuGofTzsjA+1v34o5Z
1WJemSv4XkejyYynN2zF6SM9aK4qQGLuFBz78kvMqswXrpRbVIJkt0O0Zf4t
T+DQ1reRYo9l7mjB/c9/hB0fv4Kc5AQ4Xb5AW2xG2JLy8EnPXtzYWYtfXHkl
auevwOG+zcw5nSL/ZmJeWlw7Gxs2vIuGimzhqSP9PSYIgiBGP+Rk5GSqc/wt
ZuY7Nkyqa8Vzr72HEye+wOpbF8NuDswnMxoT8Xb3Htw1qxKxsXH9c7j4eGBi
Rh5uvXcV1jz9NN5cvwkn93ejMNWGOEcetuw9JnJhY2NixRhgYE5WYD7ZGxt3
YXf3Duzb8SHyXHbE9rsOb0sS1vM82vRy5lPG/uNxJ1v7wRasuX02xowZA7Pd
h+aOLpRmJDGHjENSVgFW3r8av2Jtefv9bnzRtxG5ycw53UXYfuA4bmkuYW2J
658fZoyLRXF9F744fQovPvMUHnt0NZ5+4S2c+/okGoqzYQy2iefZxHwzc2Rr
1hMEQRCEFuRk5GRqThZwlHjExIzD2LFjUTf3Zpz76jAmFvqZl8QzF/LhHeZk
t0+vYJ8JzLnn89AsiVl4Z0sv3l63CjOmT8edD6/ByQPbUOS3weguxrb9J7Cy
jTnZuBjhNXIne5s52brHH8fOvr1YNqOauV5ssD2B7RuYk93aNh4xzAGlefcB
J+vG07fOFP/Pc3xxrB6f/2VLysGG7X1445kH0dU5HfesfhZf7NuEvCS2v4Qy
7Dx0Ajc3lgg/lNoSz5xsfOMMnPjqC9y5/HosXHQtrr12EebOmYEsn7f/OYDA
s6GWkGt3EARBEEQkkJORk104x98Mb7If44uLkZGejmR/Cmbe9AC+PNqDkiyP
GE80mrx4u/sAXn7gRtYHktjn0uCwGJFYVI8jp05jYV05bI4U3P/0epw9sh1F
qU7mTDY8+sYm9H78Mgpz0pCakYXyCePhsceL+WQbtu/Hra0lqJmxDCdPHMa1
zcUwijlc3Ml8WL/tINbds5QdLzlwPLtNONlzH23F2pWzg04WPIf4WCSVNePz
r05jTk0JbM5UPPzshzhzoBt5fN6b0Ymn3tmCXR+uQ0F2aqAt5SVwW+PgSC7F
tr3HcPfSmbDzd2R7E+FL9IjcId83973yKfPxyccb0FGZSWOXBEEQRFQgJyMn
UzqZiXlQzoTJ2LRrL3bv3oVdPbvRs30T5rbXwhR8/pB7yZTp12Jn3z7s3LkD
n779HHKTrYizeHH7k69hX99ubPnsM7z64vP4dMMbyPe7xDoayRmFeOHtj7B3
Ty927dqNd371AJKsMWJs8rl3fo1lzaW4+poxmHfzg+jZ+gFqcn3Cu3gOq67r
OnG8HTt34uO3gnP8mQ899OLbeGBpmxjT7O/bzJ9M9iTcveZ17N/D27IRr734
Aj5971XkJDvE8wopWSV4+b2P0ce27+rpxZtP3BOc4x+P6o7F2LJrD7Z2b8bm
bdvwxlN3wWuNFe91jouLx7TZd+DMmRNY1lRGc/wJgiCIqEBORk6mtWasy+NB
TkEBCnOz4XbYxJilfDv3M7fXh/z8XCR7EgL/z1yIj+9l5uYiK80v1gazOxxi
Pr7ob2ItDLY9Kwc5aWlwyI7rYJ+z838H1yZzuRMGrBErP16Sxz2wnl3lPQT9
bclDZmqyaItD1haTaIsVmdm5yE5NHdAWfiyby4O8oiJkZ6fC5VSsVcs+6/cn
96+dQRAEQRBDhZyMnEzLyc6vp2rWfKdR/9qpCjexyNZaVW7jSHPkB6y5qtyH
Sj3144X2okG1RXaswJq0F+5XbS1ZgiAIghgs5GTkZPQOcoIgCIIYecjJyMnI
yQiCIAhi5CEnIycjJyMIgiCIkYecjJxssE4WGxuDcePGMWJU104V7/++4L3e
JsSIOuPE2hWRvMM7sL+L870wxsUhJiYmsPbaRZjHf7GPd6lxMe/tcJ5DYO7h
T+/+EQQRHcjJyMkidzIee9y4/tb78Pzzz2Pds0+iIjstuI4q71NmxDHfcrrc
cDkd5/tafDwyisrx5DOszvPrcP+tS5BoN+qMxRbY+DuVlM8/DgPciaYvWIYH
H3gAd668Gfl+37Cu18/Pf8aiG8Tx7lhxI3KTvez6/nTiunhvvd0x4Bnb0QZ/
R6rN4UZKih921leNtGYdQRCDgJyMnCxyJzOLNV7Xb+3F0w/cgblzZiIr2Sc8
gq8363R7Mfu6Fdi8ZRvuWDRNvLNb9DW2zZeWha5Zc/Hw0y/j8Nb3kG4PrPkV
so+aTYg1uvDAUy/guoZijIuNvWD9fPGeI/6M6ID/P5+3CDw/atKVl+NO1jl/
Ke5/ZA1Ofnkc7eNzLoixasfjLnphuwY+IyrVMw+ox5xs4TI8sHotO97naCnM
Euvy6r0f/W1Re/5Vdu7K/Jv07gJzhNdM7Rz0/JyR9ie/RuKZV2sSnlj3KmZU
pIncqa53I8iev+VrmvD18ga4fXA7f0frgHMIV88arMf+X/odY+B5mC+4JvHG
eFTVz8B7n2zB4cMH8dHbL6CuNJ3WEiYIImLIycjJBudkSXjr0y2YMSFPrPEq
4r2FxSBvJl567zNs27IVX539FmtvmyPeh9nf31i8vfqqq1DTdjN6N7+NtDBO
xuNloj8F2Tnl2Nh7GKsWtiE9IwvZWRliHX8eQ/kar8kp6SgqKkJWWkowzrL2
2J1ITU0BP7esnDzk5WTBZrpwzQs1jLHjYHSNx7befWhTOBmPwYn+NHE8vu6Z
FNc9vhSkpyb1r/dvNtuQmpaB5ESXaA+vlxSsxz8XL1vvjR8vPmECduzZh6YI
nCw+eO6FbJ8F+XlI8rj6vUysv2Z3ITcvHwUFefCLdxFYgtfMBH9aJmtLIWtL
cn9bbOzzqSl+du3syGL1crMzxFoi0jWTX+u0FN+Acwh1D50JXuTk5qGwUDpe
YJ++lFTkF9eg59DnWNk+GWlZ2cjKSIPdFmqfFthdCcjKyoTb4URBSRkmlI+H
wxZYs8Qi1qWzIjOvBDW1tcjJShc5Wn5dnFI9pxOFvF5ZSX89cV1MFqRnFmLK
lFpkZ6YG6sl+VrrY7xvZrL4zuP6KKd6IzJJa7PviHLa88yxmz56PjT1HsX/z
G/AnWH+S49AEQQwecjJysqE42ezqEtk69tyDPKidUo3ElHJ09526wMk4fFxz
atcKXU7GXWjebY+KNf9Pnj6LQ3t3Y9v27fj47bWBdfxjTWiYfSt27N6D7du2
48C+vbh1cSfi42JgSS7DBxu78eLLr2L7jl04fPQIHv3lQlhZHLUE28tzPRJy
V7OYjbAlTcT2PQOdjOddJk5dgE1sf5s2d2PP7l1YOmMqYsaMwZQZK3Cw5yPk
JvH3BMTClzsZO1n96VV5Yv5cZf0ibO6vtxPXddWJ/UnHs/snifcU6HUy7jU1
bcvQvX0XtnRvxq4d23BTVxVi4+KFR3myyvH8uxvR17sbu9j1eWP1XfCaY9j9
sqBt8d3o6WXXbPsO7N/bi+vnNiIubhycGdX4tHsLXnjpNezc2YMjRw/jviUz
mJsYxXuuJjcvxZZdPeIcent2YEFbdf85aN5D5qbXPfg8enfuYPduBw6ye7iQ
+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
vnkyvIk+LHv4Oezb9DZSmQuYxVpSJtaWWOY1zOfi4mTrXfC5+anIGd/KXOUQ
FjVORloqX+OA559KsXXvMdy7bDacThcSfUnwJyUG5/XzOUeJWPfRLnxx6Aje
XnMPzMzTeN7K6S/H9n2f4+6lM9m1kOp5g/Xs7HhpyCvrQN/BQ5hfXx04Xsh5
7hwnsnNykZbih8vlw/IH14sxQY9pLIwWN579YCe2rV+DguwM8YxDxYQS2I0x
yJrYjKMnvsCyGVPg8fow//Zf4dCuj5DuNjOXq8bu/QcwZ0oFvEl+rHjqNfR8
+BK8tli4Uyei59BxrFzYLs7dl5QMv88r5tRrtZH7U9bk2Tj11Uk0MxdO8OXh
mbe24Ytd78vyZJnM34/j0ZtnBe5tZmrIcxdONmUmvjrzDW6fM1k42UOvbsGZ
I91IYvuc2LQYZ7//ERueX42mti6s33oYX+zbiLwEE3Imz8Sps98Il+NOtur1
bTh9eDOSPRaklzXg8Klv8dErT6K0MAellZMxvbUebkfAx4wmK25a9RK+OXMc
S9urWb83Ip71m7KGufjqm+/wyqPLUVHZiPd3HMGhre+xfmanOf4EQUQEORk5
WfScjK8TkIjHXngPfX19jL3Ys6cPPZvfR1GOX+Rq+OcidzKrqFvbuRjbe/uw
Y+dO/PrN4Bz/OCPaFtyAnb292LZ9G3Zs+QRt9RXMs2Jg9Zahu+8EDu3dic82
dWPjh2+hrjxXPKuofSzmalYfHn/+LWzbth29e3qxfcd2fPDqk0hPtIm8VGUb
n6u/B1u7N6N761a8/uSd8FoD58G3189diaNH9mH2pIL+PAl/PrG6YzG6d/aK
epu3bcNrj98h5lSZrcl46sV3zx9v+3a8/9JjSPFaQ8zTYh5kS8Gzr3+Enp07
0L1lC7o3vo/GmtLgOg4mpOWU4pX1n6Cvtwe7enbj1YdXMl+LFeOws5euwK49
e8Q127bpQ9RPKmb3JQaO1Gr0HD6F/b3b2TXbgo/Xv4pJxRlifJUzZcYybN3V
iy2b2bmzui+tWg63OVZ7jTnua+40rOJ9oncXuj/9NV564Xm8//ozSOZubLaI
NSfaFi5Hz9692LFjB9Y//wh8Lov2HP/4WGRWtGDbjt24rq0CY+IsuPWxN7Dj
k9eQkuhkfdON61c8jgOHjuL48c/Rs/VjdE4qRey4scxHW7F1524sbpkg6q18
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
+b1QWztWnivj91QrR1Zj0M6R8f7DHV+PlyndTPIzZY5ssSG0o4Uj1HeKIAiC
IDiDyZfJ45NarkyKbXIX0+NjPI7yeKqVK+NxWCtXxuO3PEemtlYs9wBp3FLN
yeRzyZTz+/WugzFanCzSdWP1PHupNs+fX1u9c8rka2LIxy/15MrCjV3yfiaN
X84yhB+/VBvD1HI0JcrcMkEQBEEMllDxRulgypxYuHFLjjRuKflYqLFLPTky
5bilfA0MHu/l45Zqc8nUnEw+lyySdTAiWS/2UnMyycsicbJI5/mHGr+Uv49c
Pn4ZLlcmeRnPqfJ+w3Osci+T58vU5pVx1PJman6mdDS1OWdqhPpOEQRBEAQn
XCxRiz/y+KTlYXIX4yjnkSnzY5KP8XjK46p8zFJPjkw5bqn13nFp3DJa8/s5
ak6m55nL0eJkg5nnL3/HUiRzypTjl+FyZbxfyMcwQ3mZWs4slJsp/UzpaUpX
C4Xa94ggCIIg5OiNKfI4pIxRcg/T62I8PobyMeWYpd4cmdq4pZqT2Q3nxy21
3qmkd37/5eZk4dbD+LnhQidTm+evNqdM7/hluFyZ2hgm7y9q+TL5/DKllynd
TOlnao4mR/ldUDobQRAEQQwFtTijjEVKB1N6mNLFtHxMmj+mzI/x+Ko2Zqk3
RxZu3NJuUJ9LFmp+P/cQyUnkTia5S6Rrk10qThbJGmXyXJnSyeTz/KXxS+Xa
sXbD0HNlyjFMvV6mlTOT5820/ExCzdOUKL8rBEEQBDFYQsUbpX9JKD1MnhfT
yo3p9TEed3n8rTAE4nGZYeg5MrW1YqVxS7X5/dIzl1rz+7Wc7L8aLg0ni8az
l1rjl2rz/JVzytTGL7kjR5IrUxvDlLyM51J5f5HGMeVeJl8nQ8vN1HJnkp/J
HU3L1eTMIQiCIIgoMTsEytgkxSy5h8lzYlouJl/vQulj0npk8jlkamOWkebI
Qo1bas0li9b8fjUn+y8aDLVo7fe/GMI72VDmlOlZp0z5/KXeXJlyDLPMoM/L
5M9jynNmSjdT8zM1R1O6mpazEQRBEES0UcYeZWySO5iah6m5mJQbUz5fqcfH
Sg0Dxyz15sjk45Y2Q+Trkg11LpnSyUJ501BLNJxMPn4ZiZOFG79Um+sfKlem
NoYpn1smn/MvH8eUP48pn/svdzPlmKbSz9QcTelqSpTfD4IgCIIYKloxRxmb
5A6m9DDlGKXSxaS5/PLnK+XjlfI5/Tz+Sj6mNmYZKkemNrffYohs3FKPk4Wa
S3YpOtlg5/lHMn6p9fylnlyZ2himfG6Z0su4v8ufx1TOMVO6mVbuTM3RtFxN
DeV3hCAIgiAGS6h4o3QvNQfTyompuZh87pj8+Up5fkzyMfkcMrUxSz05MrtB
+3lLveOW0Zjff6k5mdacMqWTRbImhrR+rHz8krswz1PaDaHnlSnHMIfiZVLO
TOlmWn6m5mhKV9NyNi06CIIgCCIMemOKMhYpY5XcwbQ8TM3F5GOVg/Ex5Zhl
uHlk3Ae4FyjHLaUcmd41MIY6v3+0OFm0xi/5deYOrJYrU3sGUz6GKZ9bFs7L
+HMgyrFMLTdT8zOlo8k9TelrcpTfh3AuRxAEQRBKwsUStfijjFFS7JI7mJqH
hXIx+Vglj6vhfEw+h0w+Zqn2rGWoHFm0xi0vdyfTmyuTj19qzfVX5sqkMUwp
VyYfw1SbW8bvP+8HRYaB88vKDAPXL5NyZlpupuZnao4m9zS5q8lRficIgiAI
ItqoxR95fJLHLbmDqXlYKBeTcmPy9S7k88d4/FX6mHwOmXzMUrkeWbgcmXKd
2EjW7r+cnCxa45da7yRX5sr4/eCurFyvTBrDVJtbxu+7Wr6M9xOtnJmam8n9
TJ4/kzuamqfJmaaDRoIgCIKIED3xRS0uKf1LcjB5PkzuYaFcTJkbk8/n1/Ix
+RwyacxS6z1Kajky7guR5sgiHbe8lJ0smuOXanP9+XVV5sr49eduHGq+v9rc
MjUvk57H5M4u97IyQ2g3k/xMnj9TOprc09R8TeltBEEQBDHcqMUhZayS58Ek
B5PnwyQPC+ViZYaBPsbjrPR8ZSgfk88hCzWvX/6sZagcmTS3f7jGLUfSydTc
TO86ZXqev7zScOFaZVrzykLN95fmlql5WaZh4Lx/+fplypxZmWGgmyn9TMvR
1DxNTm0IlN8NgiAIghgsoeKNWnyS+5eWgyk9LJSLyccqJR+Tz+dX8zFpDlm4
ef1a88j0rEmm9bxltNYluxScTM/4ZSRz/bXegRlqDDNSL5OvKyvlzLTcTMvP
1BxN7mlKX1N6mx7UvjsEQRAEwYkknihjkTJWyeOY3MG0PCyUi0ljldL6Y4P1
MbUxS613W+odt5TnyAYzbnkpOtlQxy9/btD/DKaeMUz5WrJqXpZmOO9lamOZ
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
    "], {{0, 409}, {613, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{613, 409},
  PlotRange->{{0, 613}, {0, 409}}]], "Output",
 CellChangeTimes->{3.7640146780130377`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "+", "x"}]], "Input",
 CellChangeTimes->{{3.7636866938434668`*^9, 3.76368669431944*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "x"}]], "Output",
 CellChangeTimes->{3.764014678066975*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"fdaf6c29-083c-421d-9447-9ebfbe2c5714"],

Cell[CellGroupData[{

Cell["Mathematical expressions", "Section",
 CellChangeTimes->{{3.763686720548397*^9, 3.763686723428845*^9}}],

Cell["\<\
Using variables in this way lets us manipulate mathematical objects such as \
equations and polynomials\
\>", "Text",
 CellChangeTimes->{{3.763686726932262*^9, 3.763686743682476*^9}}],

Cell[TextData[{
 StyleBox["Note: ",
  FontWeight->"Bold"],
 "using some shortcuts, you can use \[OpenCurlyDoubleQuote]fancy\
\[CloseCurlyDoubleQuote] notation in input cells (e.g. superscripts for \
powers, fractions for division, etc.)"
}], "Text",
 CellChangeTimes->{{3.7636867491859083`*^9, 3.763686775152616*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "*", 
   RowBox[{"x", "^", "2"}]}], "+", 
  RowBox[{"b", "*", "x"}], "+", "c"}]], "Input",
 CellChangeTimes->{{3.763686792225308*^9, 3.7636867984078617`*^9}}],

Cell[BoxData[
 RowBox[{"c", "+", 
  RowBox[{"b", " ", "x"}], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{3.7640146781102448`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"b", " ", "x"}], "+", "c"}]], "Input",
 CellChangeTimes->{{3.763686779017921*^9, 3.763686783656386*^9}}],

Cell[BoxData[
 RowBox[{"c", "+", 
  RowBox[{"b", " ", "x"}], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{3.764014678149736*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e4a1835e-23e5-4471-993e-956a43d46bf1"],

Cell[CellGroupData[{

Cell["Plotting", "Section",
 CellChangeTimes->{{3.763686817464315*^9, 3.763686818380718*^9}}],

Cell["\<\
Expressions defining functions in one variable can be plotted:\
\>", "Text",
 CellChangeTimes->{{3.763686825148055*^9, 3.763686834123514*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763686837987665*^9, 3.763686852012814*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999795918367}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7640146782337437`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
F1HWff8PT1Gxyg==\
\>"]]
}, Open  ]],

Cell[TextData[{
 "The syntax {x,0,1} defines a ",
 StyleBox["list",
  FontWeight->"Bold"],
 " (similar to an array in Julia).\nLists can contain anything, and can be \
arbitrarily nested"
}], "Text",
 CellChangeTimes->{{3.763686857188447*^9, 3.7636868890696287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "0", ",", "1"}], "}"}]], "Input",
 CellChangeTimes->{{3.763686874084764*^9, 3.763686875915975*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.764014678262032*^9}]
}, Open  ]],

Cell["\<\
We will see later how to access and manipulate lists. For now we will just \
use simple lists to define the axes.\
\>", "Text",
 CellChangeTimes->{{3.763686910420917*^9, 3.7636869298687143`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"66d98a58-94f5-43a4-88d2-ce22bde25a86"],

Cell[CellGroupData[{

Cell["More plotting", "Section",
 CellChangeTimes->{{3.763686948676978*^9, 3.763686950074089*^9}}],

Cell["\<\
The plotting and visualization functionality of Mathematica is very advanced
You can read the built-in documentation to learn more
Some examples:\
\>", "Text",
 CellChangeTimes->{{3.763686952571146*^9, 3.763686975972986*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"BesselJ", "[", 
       RowBox[{"n", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76368697757927*^9, 3.763686993485242*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
Ybu8srmSHQX9ffq1y2VmDR12GlEZxf2Hg+5+KpkoBH7Zf/bdJ3Rg545OYWxi
eP+vvU11wPt/R/O/5Zw5EgxTl4Kvmb9Bajq7+BjC1tHiZtSrGLy/Gx2edupH
hMCfxejwG7yfteyxSinKRJBWqBvkwv3UU+0x99jfVVTqfitvNgL30/orfLr9
gkA8piYwxdCBzcsmKQpkC4Gjer5AAl8HtkE3w3l1kQC3xc3sAnA/7x59efWU
4wbK88eedOJ+vHQ3SD/NRwhcWwPlP+N+bKSIGUb1EiD2irCikAMFaUvnHzHF
1pDDytshU/w+HV94TzgmKAQlUtvE/PB5NqdTpuU4PxFWengHSvD62J64aGUu
r6Ms8dMn/9eP22/vnnK3w9fz7urH03g93QqpSuJn11Bixynyq9hhdGYy+Pcg
ExE2V4boFXA/vnHi8f7eJ0JgXRpQ0SDRgc8LZxTpJwiQYS5wrf0KBb0VrHby
J62j6++EPBfx/FPJcVz+5E4h+PZKqyiQ1IFxVnz5UCpNBFZrKrsR/ryX95mc
ilZI8EF+T2P+43R8ziFWdV5dR7zEc7df/e/3MTLTaePaQtByQuPbfnx9u7yH
F+4qEEEMad+zwOcz+epHAkLzBBDPSno0cp2CxOuYH52+LgQaL2Nu/8Hf7+fQ
Lgbt12uoYXrE1BzP/73Pijvmt+B6Nn7G9yXej1Z0duF+/zpKN5k2DsbX+2xh
JY5gLQTORWyvvuDv9+AjacGfngh8a0vPj+D54XinFsGbYx2tMslM38W/35HZ
+XuUvBBEknjSZPD92RtkXmAvSQRKhajUNF7fpbjDNsoZ66jR/MvKBbye3pAF
qYemQuAZp3xzFH9+MH9wzTshIryJ2ox+i69H86d3WLvgBroSeumVGL4/Vufo
+IqdhaCo41FLCe7PO+WmxzTZ8HwVTf+0E38+k5nR+yjNdRTVqVtwHH8+gXf/
JcF9QpA+Ou//HtfH4XXiG0kSEeSDRj2v4evPk6neeniDBLpVLF2pOa/RP36n
YP+tyyaei5r/+J2H1y1+Nb25RuN3sptO9qVIx9D4HRt98xG6ydc0fkfyNTer
RGAujd95osC94K1YQuN3zvsdJR0tqqTxOz2aWzhqzBpo/M5LUddVyU0yjd9x
HLtvacPTRuN36gy2Ghvt7KTxO+vPj//MrftG43c6giz/OznVQ+N3fN+V24zn
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
kJi+MEM2IqNSHe/pqdV8FPVD8IngrmMo5fATb5Y7rODJdWT/Mn7+e/0Tn/Ls
YIfXuiJbpfD70ZXumWDiLQ71c88IrBtULGXGRNVGTwKmbtU9GJ2jYpfCg6W/
lpIg76lu2VlNMjr1aZ3DyIINdgU+5r6B612J7J+tL7vx+cwrwbUM7/c/HmXs
zkCJAt7PfzzK29Id9KZF1MP6Tg0jrct1SO9G1w1vxutI7obRYfkn3SjjiPeb
tPIYFM8k2VufOoJCqVbBjrbpNH4lSN/iFak9l8aXjDzqOxLV+43Gl0T+tqDr
3+yh8SWKLHVFiSV96FxYc8T7ehYouzctCJX9SFuot/vvPTYQ9Fs2zMDXb3xN
/V6iIgdUcATFyXzuR6dsj5mf+sIJUaKE/QrP+tBzjsUfP1y54WeNWNTbNz3o
u87Z7Ah6HjDTvi92XOkb+seTuNx8taFHV0PjScxzbbb9PtFE40lK5OSqfZgo
mOyTPUZbrMWAf2l08GZ7K2ZrliQdt10cxKoVO5WbqdgA5bNT3W9xYOG/tWbE
04bR7U7gHq/E8/saGBIi8f05Y9UUHS4Jnt9sTKzx/D98bmRCwXkrDFc25zJ5
k7F//MiSpXPVokI5jR/Z+rrorM7uGoTpzP9QLZcBG6Gwvbx7G5DFBf+GqR0k
iC27mPnUspnGlzBaCDNtcpDR29fxFb8+FqGpFnXzVmSBWuO1Gbc1UtHgjT93
FI4GoV53pb1T3oPItM5kzv5JCo0XaZsrnBFa60bPyOekmM8zQZm3egnjfC/i
L/NI0qNjATWWxht7zPsRP/N+0lwqPhMN1N0r4xpAlYJTHzXN2UGm+uaHUeYB
JHYxJcNjlgNC7lr1zqB+9JeJLZXvCRc8mvqx0VnUi1q8M2/WSolCpgLFMpra
gtWTnossTInCzg769McsrZjM0e5MuzIx6Ciw6al3pmK6LWKvJoPFIeWh0eJP
fP5UeXt2PdpSAt47vkU1P6nYdYZxk9sKkmB3+PN/bbxU7L4/RSp+VRIs2vzv
qftTsOwG87vKkTJwY3jR5aRZHd4foS87lmRgMqtqKnymEZ0Cn2um50lAlb2n
+timhcaTtFvXhuzRISPxx20Nv3XeoY+bzG3khf3o4PYnBwLtyagztKqbN+8+
Sj0/+j0ukRmaGA5w1G/pRxpH/Cwp6qzQKn9U8OuffsQU41AtNsEG59xbZMLF
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
xbeAt5fydsrtJ2HkFavfTwqYwOuJ3u/OjbyYwaqm05XE+eHJdlqZ8Uwc686x
P5ocT8cF1o8lV2PEfBWgry5KzDfQp1gtXzAwWyxAPuVpOZf4oLwLZfGp1OGF
yyTscIT/Je3XTODn6r/b4J04pniDX/1GOh2XOCdX/GlDFeCUbWC5M7ZCqU6T
bY6mkbBSndw5IeI89emXDtkuKYFdX4vzXiD+HvoU/aN/ZdYY9VEuyuSy16QS
55Oso84X4n48U3eBZ4pDAstysxm3JN5vxoCd1o2OehCRd0Nr9Kog2MpXGHGR
gxdLXHOzKoOYN0lbbnzSzxPHQnxXZ3tEEd/3//yJ+dRPtaZtFZSC6UvSA34k
7Lh99gkdYr4wZy3PT1gUx45X6ovLEeep0SEWbqeCGsAdIcIj8XgDcOqzLXCd
JmGuw73P44nzNF7uFOVLfQUwP3lmueHlLIXbcmLiUQUJ+1YdYrqH+LxJcRv0
IjdKYBnn17zYQjze2MweV4s6cSyw4UozC3GeQo9yja7jfjG7CHmUEB9xyWF7
A0oT7VsSS584lnBV5r4oMW/wnegn9bSQsO7qvEVhYv2yQszU2MSI/Ukpzvo2
Mb+8MQ2/Mt1TDDitMzP9dGmUx/1nT3AkkbD0HweN3hDrUf9DsaaWlZhfeCtt
9In1u1l3viuLhRfTuyD7ofd/1vc/r3I4MzFDo6+Akmcus+HQV3Hs2IWLpTeJ
eaA+VHj+9RgJk9fQP6VEvL9Zk7Ssr7ueAZmzb+yd2yYp5vx3lWefkLBr4wH9
6cT6qADt31a8Eting4p9BcT7hz7l7NFJg0OFERT7KXd/nX7i+liwMZsjHi+3
YYfdAncpuIANKvnkD1G8Ul+a8q+XwMounHU5TrzeHTvKfs5FPQIsqSWzoWtq
KEJ52JHR3+LY3vGBsDLi8cW2vbJUXiBhazQn9KnE9fGqRC3TooqEfXjwNTWP
ePzpD/TkckEJLHbN92ob4v1An/JFfNMaBY/i/9On8I0/Pt2hRKVAn3L0YI5s
zHc+5FPiVhs+dBzcg3zK+m0577qkDJBPsYnq3f7Y5jLyKV74NpYn+q7Ip9wQ
mW/R6gtEPqUk5+34lwexyKfs2Rlf/wBLRj7FkT+/LrI+C/mUI7dM0tRXFSCf
osh2/nO27lPkUzrPNTJ0ie8p9Cm01Mo7SpmVyKe8LT1DFmLWIJ+inFLIR3v4
FvmUmmnGRRaLZuRT9g0VDa2Lakc+JYJtupX6kop8ygtvc8eqBjryKdzkSPeg
R93IpxSGibC7qfcin/Le7eEN95w+5FOScgJ0jPL/+RT1slUHdU4ykE9xkVyt
W5HAQD6lKHvhnbQlA/kUY6fRwZyCfuRTrKNT+SUd+5BP8dYxfJXT1/PPp7RZ
rAvM6kI+ZcqaduiEAg1An3Lt242TZ/rbAPQpYqEc+9l1GwD0KV9bhemXA3DU
B5Sszp55vLcE9QGFe3xzmQahqA9IxKu7/LDnQ+RTzioN0NfNPkc+JeFKsef2
vhrkUyZksnjWuDYin1I6NZqZztmGfEqAYZel38VO5FMkWiO5VSepyKcc3NhL
ybhFQz5lkX7ib4IfDfmU0g88pvZTVORTDj7TtVgu6MShTyGpRQjPbW7DoU+J
FrRzp6rEIp+it2r45xfqIgX6lKIyiV9cQduQT9HX9DLdkHQY+RTW+bPrqAMX
kE/Jer/5RH35deRTUvPMPB94eSOfsgUb9V6ZD0P9QTI37LjHshJRfxAusNmP
6+991B/EcbmHf2FXLsor8Zf6OsS2+THyJ82XVr2T/NWL/Ill0lQ5/65+5E/4
1ddzsa5lIH/SJ2d/ssSPAWAf0OZoCbt1YQwA+4C0ZP4e8RdkoDwS7pUkIROx
fgDzSFaTX0XuK+0FMI+keFl1UbOtG8A8klcBJj9yneio74dy4Pmz5Zp65E8Y
9fKazcPNyJ9EhCsU1tDbkT8paYx/v2RKRfkjDi+k7nYcouEwf0Tu6dcOixga
DvNHwp0ebmrRpeEwf6SwnLfjgQMV+ZV7hV9YHnN04NCvfA1+yWG8Rx/5Fbtb
pRnPBMco0K+op+gqp09tQX6Fvb7wwEU2gPyKjaoMw5jNEPkVPU2BLma1LfIr
wg6fiz7LeSC/0p4ldEy7OgT1B921olg6xsSj/iAW1wsKFPY01B80kvnhwOSN
h//yTX4w5A1XFyGfIiBy5cGu1F7kU/gVn/sYzvYhn2LOeSkymNmPfMoPl/Ta
MjsGgH1AXSI6I8w4BoB9QAZ7co9tIu4vYH7JjlQ+kYc2/QDml2yv5mlV3tQH
YH7J/XXiIbSzPQDml1hvNDt2n6sL9f38+JBrp3y6DvkUbg7fGJHSJuRTxnGT
2BOLbcinvLePTfBcT0V5JYyNk7dcRGg4zCt5uPHpRHcYDYd5Jbdq9fyVr9Jw
mFey67qx7bZSKvItgUJ89k8/dODQt8xwKK0t9C2nQN8yZ/xT1LyODfkW/2cB
NseP70C+Zd5Y//uH5qPItzxkvy/0y8wC+ZbOu9NXLWWdUL+QwOC5SntZf9Qv
NKvr7bPWOQr1C/Wlv74T/e4O8ivJLyqzlg36kF/JJelEeDr0A9gXtGf64vAj
JQaAfUG/+3xv8EczAOwLih108ZP1YADYF5SfJWZuOtYPYF+QVZawZH9rH+r/
cVcxvODxpwWH/T+ShiupyRkdOOz/MfPgy0/Oo+Kw/2fNvvaLqpf+5Zuo3DWP
142k4TDfBBt+ddRHnIbDfJOCQ3atbDL/PIzBVvZ3ESLtOPQw15e48lr2kJCH
4RFbRar4OECBHuZm1Vm3pF+CyMNUqSxW9T7TQB6muDVyrsXtNPIwMrE+OG/A
FeRhHMaXSPeV3JCHWRpx3N98MBj1C1nwSG/nSIxD/UIvl7NvU9JTUL/QVl+f
Ud272Sg/ZaTzxoPevwXIuyj95q62vdqLvIvZe6psaEsf8i4l48YZknX/vMvp
Nl4BW1MGgH1Bc59a4nKJ8x32BfEcI4sVn2KgfJRcOcXPxeHE5/dfPoqgqUbX
usN9AOajrEvttKy42wNgPorOfWn23nNdqA+oqm07a/OdWuRdcmYU9zttakLe
RUtodYVRQBvyLn0ZYbNSlZ0oD0X20aKlw2oaDvNQ/iQFanYG0nCYh9KYaXc8
+yYNh3kozHunArs6qcjL7K9YaNuj24lDL3Phfd9mwcZsCvQyiw4PWgRmVyjQ
y5yMjQmJ3aOAvMxAVsP+ttAjyMsM24XhuXJmyMtsG84W8a5wQP1D77fhRly9
vqh/KE98xlMyPwL1D10tjL0JXichD3MrYPir6rY+5GE0fSd3fTfoB7BPiF/R
ZoxflAFgn1CCZl+sUSgDwD6hHL2M9b/9id//1ydk2BWgHrDSD2CfUEz93peS
i32oH+h30HbpAocWHPYDPfjlkLRNswOH/UALIyvla4OpOOwH6tK5IiR59l9+
iu0vp7lP0TQc5qfYa8mKDKvScJifwrg/INp97J+vyU30eGSY0I5DXzOwlMtY
DHRBvuaZAHUHe9oXCvQ18UnDZq7OZORryAM9Sx8+HQCKOul2/WrT4IKuYef7
znNg8NWbycYrc0Byxm8wYZs96hvKM3f0857vB7BvyOrnmYdkNwaAfUMXx75J
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
y66UJPr//e//H4Rngnw=
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0jtIlXEYwOEvlwQ1hOx4KfOoaCAZCELQkJe8NDt693TZvIxqKtSSk4Km
lUIQBIJQmi2VXbRGdTIrh8pupqCDtZRm9HzDw/t73z8H5XCyY+01bXFBEBzg
CdvxQbBFij5ChMceS/igh2jgLKnhZ9xL+aiHaaSEZbdafuv7dJLGU7cyPukb
NFHKG7c6/ugHdJHOrFs5a3qEZtbtrSQwZy9jRdezq6foZsfeSYQFewbP9Dk+
61F29VWyaLH/MNtIZN5+0JczoE+G/4f9rdnAnj7sbUxP60Bf13lcsf40u0gl
w9tdc9E9UQ/rIrPIzDUnzTPmUe/PdQUn7F/syeZNe3E47Xv6GqfsUTPTvGee
NmPeN3Q7Bfak8O+bd8xX3uL1oC4kqifC78L9ndnIX53iPq4fhr8J3a/z6bH/
MrtJY8l+jBe6kq/6FhfYtHdwiNf2Ct7rJvb1DL1k8tKtim/6NhepZNWtmX/6
EX0cZ86tmu96jEtUkcW8+3nW9TiXqSZKNjnk8h/qEVqM
         "]]]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwt0slLVWEYB+BTadehMjWFwIQyWiSCcJ2H/ggth3LVrhKjQV3mpnl2IbgQ
BLFyaLKyTdPSoqzUJmuVtgvTZjfa80GLh9/vfc/5LvfeczbvPVjTsjKKohU8
+Z9zSVH0lUw9g3TWk0Y1TVzmEzscuM86vYo9XOJjuNd+lLV6O8P8odFugkp9
NxeZDuft7rFGb2OI3zTYvaZCf0yK3swXGs0X+ECl+S6p+jOy9HbmaTVvlSdY
ZtD8i3r9FeV6vjzPan/II3OPnq0nywPM0mBfYten58hcWSA75GI473rc3KWn
yffmbbLCfIcUc7l5QN8iC2Wh7AzfWz51vVffqG+Q+bJNfuOoa/0y1y5PHmeJ
AftumWH/U6/TX1Kmb5fnSHTtoTlJ388M9eZN8hh/w33md+H76SMk62Nkhv+P
OY6Yr/GDXeZxSvUHxPR9fKbOfJa3lJlv45WKDnOV7+y0e0FJ+CzO8IZSu1vE
9ENcYYFau+cUh7OcZio8D7ub4bnpReE+TjFJsf2N8Pv1BFYR3vc4NZxkIpxz
z3X+ATNqWbo=
          "]], PolygonBox[CompressedData["
1:eJwl0klL1GEABvB/40IFZQZCZRATmqOm1kQQ1AfIPf0GWbmWtt3ay4LqUlDQ
wTY3hDqWttzMJQ2srmXbKXPJDi0Xo34vHn48z/O+ozP/YeJ1bbWtsSiKljDG
3NIomiep73Lx0EWu3CZvslJ/6269fpo/XLKfk6438oUa+zA9/KDW2Su26lso
YQ9tdDNPjftxivWLPCPNbuAz1XYrXXwPf+9sjCK9naek2vV8osoeZbV+nDkO
2Z3hOam2X7JZf0O2forfXLDz5VVSPfMTO0U/wEcqwzPI6yx3P2Jn6seY5aC9
Ubbzl/v2LZnptbN6QlbZoxTaO+0Heo5MyqS8IVfI1+63y047W64Ln1melL84
736H3atvkAlZIq/IFDngvkPP0mMyX+6XH6hw1yfjzorlNZbpw87v6mv0VfIo
M7Q4j4fvhwXu2TNU6iMU6BOs1U/wk3N2nrxMzP/rD783fR+TlNtDZOhHmKY5
vD/TVNjD4XPrZ3kcLf5g63hPmdnEHb5R7myIhH6GR/xjr7N3lOqN3GaKMmcv
yNN30xC+L75S6nyQTXouOfwHCiFgfQ==
          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0E0s1nEAB/CfstINIV2yttpEObDZpK1DdbC60BZCRXGpUJ1RobhTi/Jy
0SUHntLWOmhzMNGLO5X3zt56WS+f/+Gz7/f7+/2fZ//nOVjTUFK/I4QQR4zv
CSGsUeqwjHLmdoZwnUSm7Cc0cZF5ZzdI4r3dQzObdiuZLNgjVPDFvkky03Yv
LWzZbRxh0R6lkq92PXuZsZ+yKz6ELruAdfsu23o7WSzZMRI912ef4o9dxTe9
gRQ+2OmeGdLP8szebXfrx8nVx+WG80P6qF7KPfuHfEA2Oe7eymXnB/QXepEs
lifklDwvX7pPkv32GXla5ssJWSz/us+UY/Y5WSFPyhl5QV5yv6A3Rr/JTpVH
5Rv50d1+/Xn02ej99UnZ5zxBf6QXkqe/k5vOD+sxvYz79k/5MPpOVuwM98N6
Ca/sZHsgenf+2ZdZ1G+Rxie7nz2eexz9drbsVn7pHRxj1R7jCkv2bfbx2R6g
jd92Z/Tfsma/pppl+w7pzNqDtFPDVa5RSx3/AcsrX4U=
         "]]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwVzzsvQ2EAx+G3GERHFkWii8RURGKqmEgkXUoiEpNF3Re3T+BuZ2xdYjJJ
3GKRmCQWt2+A09oZ3J4zPPm9//ecJj3p8fn8XFUIIUGBqDaECvHlSE0I99Uh
9OmY5vRM2zWheb3VHh3Qfi1pg175/bDe2Vkd0kE90Vb98PzaOePcpTv8sel+
VE9p8+zLvnHudu7VPZLOR+5zzsek7Be7xXmFMrPxR8X/iSL13rl0V6HT3uaX
DfuTrPMudd47tJ9ptpeJmLEvKNNhb/HDun3AE032Eu9M2+dEZOLv4ps1e59H
UvYib0zZq5R4oNHdAq9M2gUm+Acj3zhn
          "]], PolygonBox[CompressedData["
1:eJwV00dsT3EAB/DXRY22JxzMtmhCJIQaEao1W6MUPUjs7aD2rHk1WmrFOCFG
0TpIiK1mIrHpsm6CluJiHHx+h8//+/2+95L/y/u/f+qcooKlsVEUxdDMxxDj
c2IUfaJQn8oUJlPAJIo5xCNS4qJoCfVMtDdykIckO7aYOvLtSj6SYW/nFxvs
AzwgyV5ELRPsCj7Q3d7GT9bbPxiol5EQH0X77fu0thdSw3j7Hzn6MVJcd8Ge
qJfT0X5vd9O38oN1dqG8SLrzTfZNvY8+QO4lXt8X7lcfpOfJMfKkbCfvOZcv
r9g9ZSuZIxfIasaFZ2o/1ofKaXKsvCQz5N9wj7LKzpTZcoQ8KpPl+fDc9cF6
vjxLB/2d41f1XnpXuYUm1obvk5WkOffd7q/vIc4us3P1E7S179ot9fm8Cfdm
/2GYfoQk15yz35Jub+Y7a+xvZOqlxLpur11FC3ser8mzy6knzd7EN1bbe7hD
oj2XV+TaZ6kj1S6mkVV2Kbdpbs/hZfgt7NGMYiQjGB7eA1ZSwi2auXY2L8i2
V7A7/N4kODaL5wyzz1BLF3sjDSy3d3GDeHsmz8iyT1ND5/B+85VldiP99BJi
PJ+d9nXi7Bk8De+E/Zss/TCtXXfKnqCfob1dbXcK/wW+UBT+o7KCVOcbwn3p
vfW+cjeRviP8T/SB+hg5Wh6XbeS18B3yst1DxobnIqfLJ/wHPv6Asw==
          "]]}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0LdPVmEAhfFXpHxYwMQyqYjiLFaai7JoxMZgQkRMiC0xgokY/UTsyo4F
pKigLqDiSrcyoYkC6qCDiSVRsAB/AL87PHnOOe+9N/fezPLK4oqEEMIMDOBH
LITvOJ0YQhxnkJIcQl1SCGvxW+9CM6oRc3bdvg5jejdakGFvt23DTLyznUWq
/Ya+HuN6D+5gmb3DVoREvLfVYJb9pr4Bf/RerLJ163sxH3dtmbZH8nYkYdiW
a3spH8BinLPNtt2Sc/BX36QPycfQp2frPXIpFuCebbntsbwDydiiD3MVRpzn
6a/kg9gv/+Il2C1/5hockSf5vOvnyPXyUc7lPfyV/znbLL+RT3AFl/N49Azu
d76ae/XjvC96T/7J1bww+n7+xKc4zod5gi9wq/tX8JPoe3knl/A3TsFWeYRP
YtS1+fpr+RCWolj/Ev3H6HnO5+oNch7+64X6W7kSA/oavU8uwyK02bJsnfIu
xPDBVmAbjN4VGbhoS7PdlvMxoT/Dfay0P43+LVLx0XYJ6fZGvQCT+nM8wGXM
c9Zk34gp/QUe4gqu4hpqMQ2M2GHt
         "]]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{2278, 2279, 1161, 1665, 1524, 1641, 1407, 1502, 1619, 
          1312, 1384, 1479, 1596, 1240, 1290, 1362, 1457, 1574, 1190, 1219, 
          1269, 1341, 1436, 1553, 1160}}], PolygonBox[CompressedData["
1:eJwV1GVsVmcYBuDTIiGB4c4gwd1h/MJdAmQwKA7FobQUKRrcobgv6HDbcPiD
BXeWsAVnONuC/MD1en9cvZ/7Oe+XfHJOC8cn/ZwYG0VRDO39iUsbRY8zRNEI
mcJwhjGUIfzKIf6lSrooWkD69FGUrK/kIM+pbD+fdK4N1q8SqzdjK4XsV9gd
4BmV7OaR1j5Jv0KM3pQtFLRfbpfd3JHDVLDbb/eUivpc0tgl6gXMPTlBDbvL
dpG5CZv50W6ZXTZzBw5R3m6fXYL5AnX0J3oFcyqx+iB9rPkWrfX88jldzfEy
WR6XP8lLzo6TL/VecqgcJv+UjeU310fJh3qcbCwT5CZZQC51fbx8rfeRI2WK
/Fu2kFnlEzqZ42SSPCjLyb1e+7+5h3mgPE9t82P7++ZfzOXlHGLMCfZjzDdp
pecLr+UY1fWL4fc3X6OR/lVvZN5Ifn2JnsXcngOUtdtj94hy+myi8F70C3yh
od0G8tkv1nfzkLJ2s/jGAP08n2mg/0Ze5xfpf/CAMnYz+Up/fSG/8w+l7Wbw
hX56X/rQm170JJ4edGcBu8J3RCmvmc5nuunz2ck9StpN41P47fVzfKK+vp48
3uM8fQd3KWE3lY900c/ykXr6OnI7P1ffzh2K203hA531M3ygrr6WXM6n6pnN
7dhPGbttdrcppk/mfbg/9NO8p46+hpzOztF/CPcC+yhtt9XuFkX1SbwLz5ue
V3bnKNWcO2WXbL5KQ/2dXtu8mhz6bH2E+S+a65lkW/ZSSt/i+gDzOWrpN/Ui
5om8Dc+kPlreoKXreeSz8N2Zu8kjVDWfdO5FeNbD/xl5hQbmt+HeCPejuZZc
RXbzLPtX5t7mFDlcXpfNZEY5Ojwj4TPLNjIx3MeypNwcnn35X/guZH85RJ6V
NeUN10fKe+GzysLh/pUT5Bu+A2nWtOc=
          "]]}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0jdMVWEYBuBf2sVJYYIJrhV0YGAwgIWYOFkGB0siKuiMolIsuwK2gE6g
gyYKooKaYGIwAY2J0QuoMSR2RBcVsWDdeP7hyfd+77l/Ts65J1mzZ2NtWghh
FgPcygrhY3YIH+iSu7nCNvuLRAh7KeST7hE9VLn2UldHks+6x9Trf9qbKSON
q/rt+lfyPubxRZeiQT9tb6GcdK7pd+hfy/uZz6TuqC6DDvtahnWN9l9yKxVk
cF2/U/9GPsACvuqO6TLptK9jRNdk/y0fZzkX7AX0y5m0yXO4JG+KzyIXMyj3
Ol8tv5XruSmXsFDuMPPolQfNFUz5fbOZxSjnXLtjLovPynp7VzzPGAP2B+Zq
xuMZ5w+af/Qp84TZb5bG/yLew37RLOQ5t+33zcp4T7ndnMtl+a5Zzub4vs0l
DMl97lEjv5MbWESnPZ8++ZvrLXKC8/YNPNEdsv+VT7KSBGd0OfGbkrdww+92
xWeRG1nMd91TDuv/2U+xiuz4PvW79e/lJor4oXvGEf1/+2kqmc1ZXS7d8tb4
HchLuSc/NNcwwQwmfWqU
         "]]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1HmUjmUYB+BvdE7J1mKrLB3ltCKEdOrUqWStMGihVbuKtn/aCyEVxjIj
bbbRol0qhBYM7cUw0qaxte+btev3xzX3ff/e75vzve/7PE+LwcOKh9YoFApF
PO3P8L0LheqahcJT6hzKmc0sZrKKbRy6T6EwjCoG+fwM2Uq20lw2lHUMdG26
rIItNJPdwFoucO1JWZG+M2P4jVvlK+SbaWq+nkrOlz8hK+hPYDS/cot8ubyn
fhp7mUexSdbEfB1rOE/2uGyAvpx65hL2yOabm+c+6KQfxS/cbF7m+iJ9yzwX
eug7qQt4RP+RWoP7qfbZr9STWcoLrn+mNmYah5jXq214mSHm99TV6rnqY76/
Ue1CRf5HnqN6FHPpbz5RfZPZ+k/Uukxgt++eqr7Dq641y7Ono769Oj+/Uf8z
N+nf9fmF+sP1c+iun0qRfiTfuv68uVHuk4P11+Z+GGB+1PV++lnUMY9nl6yD
eSQ/cWN+j6ybvoyCeQQbZQeZr+FT+uf5yHZyvHkEP2aNyd+WfUNj89W5Z/rl
N8l20N48nB+y7uRvyb6mkfkqPqZYPlVWRilTmMwkJlLCBMYzjqV5jzT03Svz
junrfzwsW8KXNJBdwYf0ce0h2WK+oL7scj6gt2sPyrbTznwf32cf5D3KNnCg
eTDvc458rOw/2prv5bvsA/ki2eccYL4sa4ez5Q/I/uU48z1sy7qXL5StZ3/z
paziLPkY2T+0Md/NVoZkTcu66kvZk+cqq5Ltp7+ElfSSjZb9TWvzXWzJ2pC/
ITtTP4XduVfZOlk9/cVU0DP7U1asn0lt8zj+krUy38nmrA3Z67Iu+snsyrOQ
rZXV1V/ECnpkXcv66mdQK++JP2XzzE1zznCs/g42ZR2ZX3P9DP0kdua5ySpl
z+kbZr1QR38hy+mefZH3rz9S/yx99NPZN++fP1x/xdwkZxXH6NtlP3K7vjpr
MnvR5xboD9OXc7q+Y54fE/U78l70a3xurr6Bvoza+tbqSwzSL6Nb9lTuJecm
i2VHqM/QW9856ybPQF8za5Hfff6U7K2cQ/LVOZtyPnK0ua06j9uyJnMWZB/k
PrK31NNyLub3yivVFjmPkps3qB3y7ijJ/lC3Z53knMveUU9iSZ5h9r9an1Jq
mavUVrzIwKzZnFVqV/V/6izwfQ==
         
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwd1WWgFWUUBdBHSKeUdJd0I43SqISIgJR0SUspIaKkNEh3SKiggEp3d5d0
d4Ok6/PHYu9z5j2YO3FJ36RDzfaRIiIiSkWOiAj5iz8KclAfSE0K4HBEFKLy
Fr/6mUIc0gfxCQWJxm/2hTmsD6YWhdht9wn39Xl0IjpL7IpwRB/CpxRmj10t
Hujz6UwMltoV5ag+lNpcMLcmOqvNRdirf8pD/We6cMf8FYnYbo7J7/p7HNOH
8UzvS2o+M1+UbYjBmvD5XYxh+rvhPMz7ZG0e6W87NlFfoL+W35ORNPZzZVf7
u7IbOewSy+RyhtzhWGx9tJ5X5pUZ5IJwfjKW43/oxchiPm6OL8ebC8gfzf/q
/chlTiNTydnhfsg6jl/S2xKTpHZT5dpw38Lvh3MK/5Z5f/jsPNYX8kb/gUzh
+pnvye4kYWc4b5bpxTmhD6cul83tiMU6czEO6HV4oi+iG3FYbleCk/oI6lGc
g3Z1eaovpjtxWWFXklP6SD6nBPH4074Up/VR1KdkuF4kIGG4VyTilocqsUxC
Uv7ye6X5Rx9Ng/B+kIy/7ctwRh9DQ0pzyK4ez8I7RA/eYaVdWc7qY2lEGQ7b
fc6/4V2iJ8lZZfc+5/RxNOaK+Utis95cliN6fZ6H941e3Df3CPeVXeYUrNY/
4Lw+nuf6t6TlC/NVGb4A4rAhvI+eg+F6znAe5qOyAS/CtXJskr5ED18IA/XM
fG18IHuSjBSOzZS7w33Vx+j5ZL7wLsiF4RmWKR1fo5cjq/lCuDfyJ3PBkOYX
en9ym9OFd1LOCd8Xsonj1/QO4V00xw3/vpwmN4bvCn1EeBdIp88P18L+mGzI
Sz2x/WR9qR5JHxTeLb4xP5S9eIc95lSs1ctzUZ9AU66bOxKPTeZyHNcb8Sp8
v9Cb1Kyzq8AlfSLNKM8Ju8a8Du84fUjDeruKXNYn0ZwKpGWDfSWu6JNpQUXS
kZ4MZOS25zuTzEwWNvqdylzVp9CSSmRlk30VrulTaUVlTobnhTf6MvqSjc12
VbmuT6M1VThl1yRSxP//qSwX/cjOFvOH3NCn04Yb5k7EZ7O5Kqf1pkRiRXjc
3JvB4TkJz6/5UXjuSM5e87ts1T/ipj6Dl/p3pKet+absTIJwT/190+UW+5j6
yPCMhZ/Vfw7naP+PbEZ2u8gyiZwi/3Qsij5EzyOzhfdJzpNFZX/HH4dnKLxH
5hQypZwlC8l9jseVY835ZX6ZSS6SxWUOx7fpH5PNfMucUE4wz9RfyQFkoJ35
luxCQraaY/nZUeHcwvUwn5HNicJf5qiODw2fK1wf8xPZO5wj+8052a5X47Y+
iy/Dc2TuyttsM3/MWb0FUfnbPIBc7DBX544+m/ZU45xdS95ipfl7crPTXIO7
+hw6UJ085CUfuxyvyT19Lh2pwXm7VkRjlfkHnup9SMUBczyfeZxegMz6Ylki
XHvH/gNm6AuM
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwV1GW4VFUYBtChG6S7UywQFItGurulW0IFpFFSQbq7u5FUQkC6u0uREKWR
xrV/rOf93r333Dkz95zJ3KRD1fZRIpFI+qiRSEEORYtEGlA0eiQSVeaW62VF
+av95HK2XkqWlh/JnXKIvYh5mDkfecyb5T/WM5uXm6vTQf9bdiMDp/W09heG
92C+Hl+fZC7MU70Qh80NicYmfShRnBuu5+dfvSO3zd3JyBl9AYU5on9BdDbr
P9GJf/QeZOKsvpAiHNUbEYMt+jC+oijHrDUmJlv14XxNMYpTgs8pSSlKc9zZ
JsTiN30E3/Cv3pPMnNMXUYYTelNis00fSWfu6L3Iwnl9MWU5qTcjDtv1UUT1
/YzQP+CO3oW75t5k5YK+hATOTdaL8Ewvxylzc+KyQ0/hzBxzGUbr0fSR5g+5
q2fRV5hr0FW/J/uQjXfs/SIvWk9nXmSuxKfmPXKp9YTmKeYSsmi4ZrldVpbP
7eeUa/Rysq4sJPeH95Pl7Z82t6CYHk++JTeE95G/208p5+qlZVn5sdwlx9iL
bh5lLkBe8xZ5z3pW80pzTb7V78u+ZOeSnt7+4nCNLNMT6VPDNfBCr8AZc0vi
s1MfSwznRodnh/t6Nx6YvyMHl/XlVOSs3ooE7NLH0Z2H+vfk5Iq+gkqc01uT
kN36eHpQmfPW2pCIPfoEelKFqlSjOjWoyY3YkUgtWZs6XPC6trzBXn0ivajL
RWvtSMw+fRK9eaT3IxdX9ZXU45L+JUnYr0+mD4/1/rzJH/oq6nNZb09SDuhT
iOl7HBP+lzzQ+/KfeQC5+VNfzRvOTdOL81JvwBVzB5JxUE/lzLxwfzFVj6WP
NX/C++at8qH1bOZV5lrh/6U/kQPD/ca74TdSXrOewbwkPC+yivxM7pXV5M/2
E8vp+ueyRHiO5A5ZRb6yn0uu1cvLerKwPBDuRdnQ/lVzx/CZ9OTybblRHrKX
2jw/vDZcv3m3nGY9tnlceO7IZ/5NPrKe3bzaXDvcU/pTOSj8Tf7SM9pfaq7K
Gj2JPiNcO6/1L/jD3IkUHNanE8e58eGz81jvxzPz4PCbwHV9LY34U/+KlBzR
Z9Cf5/oP4bvlhr6OxlzTvyYVR/WZDKAJTWlGc1pw033cUraiNX95zTek5pg+
i4G04bq1zqThuD6bQbzQf+Q9burraRueEb0LaTmhz2EwL/Uh5OGWvoF24Vr0
rqTjpD6XuL6nCXpB/tN/4JV5KHn5W99IUudm6iWJhOfH2i35Lek5padxZoG5
AvP0ePpEcyHym7fJJ9ZzhPvQXCd8Lv21/Cnc6+Ez2tskb1vPZF5mLiurhWuU
+2T18JtuP5mcFa5JlpIFwu9tuFdklPAcy3XhemR9WUQeDM+PbO/1/wOl1RB3

        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwV1WW4VFUYhuGhQzoFpLtDEKQbRQUFRZQGaSWlQWlFuiQVpKS7Q7oEKSkB
6ZTuBu/147me733X2mdmz6w9J2PjtjXaRIlEInmiRiK1o0ciD2NEIr3RKmYk
kpE/5TPclf+xXop3yR24JTfk69yTf7eenZfKbbgmf8mXuDu/wVX5CHfiztyU
7/BPrk1i/sVcGp+bz/MjfUXzfnM7NDHf4m36t81/mBugnvkqp0S18F7Da+IL
+x5xH2TCCbm09d3hHjFbziEvC/eKePhAPspdMNh6UvlXcxk8livJB8ztsV0u
LG8MnwXeDPese8x9kRkn5TnIad9y+TPExxBdMt0Uc1k8kXegDp7I/ZAFp+S5
yGXvCrkWEmCoLrluqrkcnso7URdP5f7Iin/leRiGFPb/piuPZ/Iu1MMzeQCy
4bQ8H8OR0v5pugp4Lu9GfTyXByI7zsgLMAIN8EL3A3LgrLwQI9EQjdAYTfAV
mqIZmqMFXrrmR+TEOXkRRqElXukGIRfOy4sxGm96j9N1FfFC/hOt8DqcK+TG
BXkJxiCV/TN0lfBS3oPWiOgH6/LgorwUuXUrw3lEQozVpdbNNFfGK7myfDA8
E9grF5E3mRshFarLJ7gHvrYeRR5izhvOgvksX9KXMf9pbh2uNd/gZfo85lXm
tlyb6/BlToQPzce4M3flZnyXv+efXZuGZ4XX5Spcmy9wN35tvQofkr/ljvwV
3+bv+C/r7/DmcNa5Mdfna5waH5tPhmcf39gbVR5qzofLcll5T3htLJfzyqvD
M4nEGKd7K/xumN9DBPt0RXVbwrOONGiji6YbZs6PK/IK5NOtCc8bkmC8Lq1u
tvl9RMF+XVtE1w+XC+CqvBITkE4/R1cVUXFA1w4x9CPkgrgmr8JEtEdMayP1
hfCfvBqT0AEd8S06oTO64FJs3w13Q3fEcv0o176N6/IaTEYPxLY2Wl8YN+S1
+AXp9XPDbxOi4aCuJ+Lox8hFcFNeh1+RQT8vnA9ExyFdL8TVj5XfwS15PfLr
1oZzhaSYosuom2/+CDHwt66Ybms4I3grnBHdG+GcmYvitlxO3hvOAzbIBeR1
5rpIhqm6TLoF5mqIGb57+e9wBnHY+rvyNnNTNDD/x2nxifkU90IL8/1wzu2P
Zx4XnhsuxrX4HN+xVj6cY3NHbsON+Wb4G+F/h/WCvF5ux/XC++Qr4Vnl5OH+
+Th34W7cnO9x7/A76vrMvDDcL1cPZ5svcqxwBs2HuROO2Ftc3h6eUaRDDfnf
8DmGv2c9vjze/C7uyhXkfeG5x0a5kLwhPINIgWm6LLpF4VlEbBzVldDtCO8V
6dFHl0A3wVwc9+RNmI6s+sXhs0UcHNP1RUL9RLkE7subMQP9kMjaJH1JPJC3
YCb6YwAG4gdcdu5/5MT2T7a3FB7KWzEL2fRLwueAuDiuK6nbGb5fZEBN+XT4
ntHS/CDcDw+y939P5x9F
        "]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwV1XfcTnUYB+DHCmVlizKztyIUIiPZW/Zrb8ose8te2Xvvmb33DpG9laxK
KSLp+v1xfe7v/T3P6e05zzlH+qiO1TpEi0QiUdEjkQGvRSJl4kQi+2JHIkfM
z83VZk4u8Lr9WzMJp1lm32kW5So/OL+3+Vx/whxnbjLf4zIf2xeY6TnHZvv+
0HOdDc5vbt7SHzN7muvNvGSTZ5pvhb/DWvsesxh/OG+EGYfZ+m3mB1SWl5qZ
2SEfNEsx0OfLmvt19Vgj5+INebKZlOXyWZ/rI7+Qx7NZfp+S8kIzA1vk73yu
hXxb/ooNcj6yy7PM1KyT//S5kXJc5tirsEzOwk55kOPl5ANyfeIxxZ6MFfI5
x/vK/8oTKMVGXUvdHflrcjDbnob18hPHR4Xfjrn2qgzWfWo/KDcgPj/q+ule
yhP5JPx2ula6n+Re5OQv3ehwrZhnr8YQXXn7IbkhCTiv66/7T55E6XD9dK11
P8u9ycXfuqF8pj9sb0RCLugG6F6Fe44ybNG10d2V+5Cbp7phVNAfsTcmERd1
W2mr/8Xelzw80w2nov6ovQlvckm3jXb6e/Z+5OUf3TdU0h+zR5GYy7rttNff
t/cnH8/DvUhl/XF7U5JwRbcj/P5UceyErhlJuarbGX4nqjp2UtecZFzT7QrX
nDGMZRzjmcBEJvEtk5lCNf+N753bguRc1+2mg/6BfQD5eaGbSnX9KXtLUnBD
t4eO+of2gRTgX900aoTn396KlNzUDdRFmGwvy15dJ/ujcF/zHi/Dd9DFY769
OtN1Ne1n5NakYqo9OSvlW44PkqMxxV6ORXJGtsr7HO8s/xru6/AsyvnDcyrP
Md8O75Xw/2MWD/djuIZm/PCdWeDYdrMwNeTlZlbOs8t+yPyEm8xwbq3w/tEf
NduYa83cXAzvJvs0M0X4Pqyy7zI/5Fp4Pzh/sBk9/MZMDfe0WZBP5cVmJrbJ
+332C/m38HxRkLn2d/hOfhXuAzkBC+01mamrbT8rtyU1d3RDdDGYZi/PAd2X
9t/loRQiwix9Hf05uR1p+El3kC76x/ZhfEC08J7R19X/KLfnbX7WHWIOn4fr
qOvAO9zVHWYu9Ry7oOtIWn7RHWEe81nAQhaxmNs+v8RcyjLqh2vuvE6k457u
KMtp4NglXWfSc193jK7h3wr7cAoTnRX6hvrL8hdk4IHuON30f9q/oQgxWKlv
pL8if0lGHoZ3mC4m0+2fcULX3f5EHkFRYrJK31h/Ve5CJh6Fd5guVrjH7BU4
qeth/0seyYfMs6dloxyL8XJCFsm1wneRs7FbXu38JuG+k7uyTs7Du+GZM1Oy
Wt5tfhSen/BeNF8L7w5mOrbVLBS+KxXtS8L54fdme7iPzJLcCOc4v6f5t/64
OcrcaBYIv0X4G/b5Zrpwf7IpPLtmifA35QlmIhbLO8wi1A7X28zOHnmNvxEl
X5e7kZkZ9lSskX8L72o5NrPslTil+8r+VB5NMWIzUfdmuKfkOuE59rmm4bvI
3cnC77rTfK1/Zh9DceKE66lvFt4Lcg+y8lh3hl76f+xjKUFcJukSs1SuG+4D
OQd75cNmaW6x3vn/A2oKVpA=
        "]]}}}], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{0, 10}, {-0.3461261180190739, 0.581865061766651}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.764014678351327*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"x", "+", 
     RowBox[{"y", "^", "2"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
KLfHMLTka/a9gcJzz/Y+k5bGse8NFDOia3WefMfI9DxQXF/8uNvCrEYmh0Bx
e+L1ExufxKrvRf3Y2tyrkh7Pe6u+F/iZ+ds7ufjGq+8Fntv98oG4kSb1XRls
/i5747uAeAe9zLTx7xD1XcD3hdT1Tj0To74L+OCKcX/nF8l8Xmiem0tAwpv/
zAvpzAthXpj8SUf+FFv+ZJW8Gf4jf9KRP0H+bB1R65tvctc4/Z91RDrriLCO
2HohnfVCOuuFxlQL7FNhzn/WC+msF8J6YeuC+LpQ709JO8nsHunYPdKxe6Rj
9wh2j9kx0rFj9P/bsRTCPsX2I8J+BL8FeABV9A4vdp/vU6SzT1Gz/3+fIuxT
bD8inf2I+H4EXkLHH6DH4/1dDro85P4A6fgDpOMPkINvgWqD6//HHyAdf4C4
PwDeY8v3q108T/3HPyT4h8xPIx0/jXT8NNLx0wh+GsYDXqiwx/v1f7Y0q/EA
9xy3o832LmaC3IDXsM89Z12xJO6Xko5fSjp+KcEvxXcBb3a0cJN++U3qu4CX
KD7llrO/WX0X8AXLt3TzczRyf5LgT+J7F5aL9k5P/y6ml0/6kFYkTMl5rPRj
f/a2lbOrbB//d/73l/8NVP34XWl78LLLZ9Hn1ut8x1qHK33D+vAZPzd3yN3p
Sm4pBU4ntHf/IoY8PLLZ/mW4+t1T0m/szvTttuz//cG3T1ftNCh9k/GcWObt
tKBkd1+lbx9k/0FnL9Rw2/lCjdNOxkk7PvwokrmOdV03kPz2xE2d6nmOea7m
5b3094itU8kPifGHitf2/ce6ThvKfobNrmss/cQaB1nix2TxftWWedU+Wfe7
cdKP2s/s2E7Z/u/M1UpOXmzdF8r8jn+jxPjMjc+3eRmv7GduGa81Gb9g1Iov
N5S+Nf0djyeKMwGXA1pNea7k/EH6LfuY/S8v+/98rl1dR58YZT//kP2PnlAk
OO/wZ8p+NpP9F85VMnePDneUnLtInt7h3Nq5DU4YlD6clHnbqBYnhm7/y+rP
fJF+xTu2n0r+UnjYmfc7HwpX835J9jN3t19b31PxSv4Ff4/zlVgYdXd4uSNW
P7aG5D3OlWnyvfwFg5JnpoPa7x4Qi3L2KBj2wOq3fJV5ja+36uf/8d3qtyyQ
vGONU17GXZu433JH/nte+S2tZf8Xyw6r/ccJq99S8qClfye72KX9U6x+i7vs
f8iVzQ4/vlr9llK/x/+U8rVOWbpvkdWeD5XnM57UjlnV67A1btrzWz53Kf8n
u44391vHGS39DT8m51yy/1WDi9QfVzVMjbOL7L9l78NZT/nFqnFulv3fXBT0
cXR5q37elHmkTdnbr237OlaNs4xF/lSrUWyv1ReS1Thv/Oa3w6nZ7BWf4lyt
/lWC9B9WMv28Jvufc6B2kVrLotQ4C8v+af/zja+2Jqpx/iv7r3+1WY9dT0xq
nPUteks7K1WpXtPJqNZLMYv+07NoU0CRsBlqPEOln+DO1mlt2U+nQ1d7VuiT
pNZFUdnP7LUvR9co6Kd+N/hTS+ewy+/p4YYJeXOTNR484hn6o737Oxpf9Hid
xyNi1e8myf29AbM/QbKfMuXsYvJdtNqfw7KfJVU7lsjVLEH9rrvkw079E3rw
/dcoNS9zZV3ZwYxrbk38GqLGMyzL7CLuDp9oTf5w//gLQo3nqNzHBzL7LHkg
8ggIjV/ZLE7Ny2zZ/7rC7t0anHirxvmP7N/ntUv1V67P1Di73Js/0yXsGz25
l2Vy5PL7av9tIPNfrp+OeT2dGqrs2HC5j89n/kAn2c++6fOKOg0+pfbNerKf
Czsue01fHaj2zdKSV15Qq9/uxiMjlB3L4Vhi02WXdPLw77L8xiGj+t0ycj8d
zPbrbLJ9ZufJRe7ZJSk5q3sW5T08kPOrF+c7OHT4KQp5nTq9ppxZ8WB3Zd4n
SL6zA9xP4q8lju8yy/63y/t28F0vZf+eFdtncpmo6qnonuznqnxnB7ivxH0k
Dj/zjeznYslot1ej4xSO/Ml8b9/3iwxJyh/OKXnd1vK9JOB2OF8vcfjJ5XFu
oHWDfHdvmBVukvv4ugH9Rzx8YuTzLjDvGH8u1CfId5SAZ5W4ncQxfvxu2TKD
PUxJJoUb5e8G+qR9jPq1P7N1JMLiYuc8HB6l9t8SkpceXWjs3qSF0QR7kln6
Cbmu3Xn8c3iisg+ZJO4VdiJn62fW+O6m5HdfyrpZZh/EOrdiXrsfxip99pbt
K8n6WGYHxKf80++3PZ3A7Z6A3cPv2sn9/XmCcfydWla7JH9HVLy2Z1rlQSY1
v6fZe3bAj0j8qMQxzkyy/2X9CsdF7LGO87ns/83aCyHF66l3pugce+cO+EGJ
/ylxto8I7CMYj4vMCzWW79ABH8Rwtl8I7Bf43amyPd6nA94PeVqJMz+H4Odg
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
xaz30pK3zJNvy7ZLX93c52Ge2HrRPCEPIPPnrk8jjgxaFNw3mT8dZR9jv3bi
jS3uET5N52LitOnnCN2rIi4aXkP3mHYWI5/vVP/DZ5XcWHHn2XOevg6fK76u
GDmJf4H+xF//YDFyj/lMv43O8sS8d5PP8ifCG6rfeAfd7C1xGx+o+rnfWyA/
IHya7h0slP3N7o+892VEVEq+3e9gXAbofgfx+fDFKk9cBOeIeN3rQc9hHIfq
3pbi843PV3wX5xS7R6D7VvgL4DfqXtVexRXAibMizgS+XvehOE/By8h+G+vE
P/yh+AfOicQt3Cr/DucReF35aziPwKvI/8L5ET5Jfg3OKfCZ8lNwToHjd+C7
2LXuk9+Q78KPyz/I+QseJz8g9cOfkt+N85f55eVfox7kM35e4ohYd8d1r4Hz
Pvxw4Hxn8wq+W/cLOO+bPSdwfrRxZ76VvD1wjwl7DvNthe6pEafh5lV4vZg8
Bvi1LV5F+vxm7dfwUOnzdZR/iv6JTDsyo8gfV9Phg8TXSB+g/fdJH0BOwvdL
ThLvB+/fuk77HuE5dm/FzpVttnQs3/ScnVOYz29LPyde3daF9GriAOHEASJ/
4N9LznPuY9zjZs6fe/kPv/cN6Utmn/xuW0bEtX3zPccu95rscswTzt0VdH+c
+tmXx6UVHIjpnef9Q+2HT4zc81dsdK7pD/Da+xKXz7zV51mody/gLww5lJD+
fr7Z85Hzh7aM7Hf5f3Mtrg++YeaZ7gVz8i1eGvl8rObKp0IvZ5t/B97uUJ0f
Gl3wKU9Kuu3Lkb0SklcU5to+Av886sHqPz2ay7tNtl/00XkBPYHyK1bNW9Pv
nVy7V2J+nyO5VcNjc7zsL/CUph8+2DYx2+aJ+Uekz8/VfgGPPpC86kIz7OFB
PlVc7wrY/uLL++nWxrP83Fsxe1eF8V3/uiU+x5vg8NvEY2T3oJ7XdY/vbtkx
4GV1n+516TPUE1KxwsA6cVmeeIeXFcePTz3PaL2wb7JeXtK+yTy0exy6X8k9
FHjOqm1Dvy2R5/HpPGhxpy0v931yRK7ts3D22Vo6f8Hf/6xZ+3XDgnGP8PPc
i1QcL7xWeKW/9nydZeMLz5o8uM2RPb/afTTkGHaA4TrXwznXcw+LeVIir0/J
qB2ZXu5DwX1PDFwb3iDL9Ezzo0mfGSC9EV7wZOSTBztnKP48yC+K93X47+Kr
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
1/ypqXVKO5/d83HkBz2yPTXVD3z3BO9lqLzFaag8eS1Mf1Nei0X6X/C5yhdx
4N/ferOHNJQ9hPK05x/1A/F7lp+8bGA+813K39A10J/0m9lt9hwrMWtWpr0D
QvnnlcePPPzw6rofwfsUZl/SPCe/PXyD7ikMcfLdpWk98h4EPPHNmBvXPJNm
3zV/tPR28sbDb57hzyt8J/h+Frx0i8iX/k476Obb9y6VPZa89PCvzzaMm35t
/Pgu/TPmer09GA/T5f/q4WdNf/CMuz/2mzpf2TsO8Kpv37Kk25X99j4IvPST
V1ZndD1i7zvAeydU6Hs4PsHeF2Cf3ax8d7TTjcu9/v3cNUm8n0s74avT7ku6
uOlXayd839ETJWP6p1m/wUspjvf693bXJPHeLu2EJ05c1GNUSrb9L/j8sOjc
gxNOWfvde8e0H541MfuGDvtzrf22T71Sbl5M7TP27ht8lvQB2g9foDhn2m/x
9uvmt5uyNd/aD392/Ngoz/Cz1k72teXyv9NO+NSxVX5pFJntvO95ynNI/ne+
C8+9pd2PBaG5Vj/yP1b2RsbF8jJ923jgh7X32/+C75ddkX62fMgv3PfCsshN
9u4b86qe9N7AeGxPgjdR/uTBjt77s/TeIY6+10z6HvXD7y6/7cLPy/32Dgu8
k/RJ6oeP7xq7olclv5077P679Ey+C2/qDe06+lLwHUB49fJDQsfmB8cF3mvj
5Z0FUcH3AeFzNU9oJ9z/Rq2mN9c7a+208qN23ls1Jt/GEd5qQqky2wcH5w+8
x3cfb/mze/BdVMY96sqbO17ekWnv4zBeDdX/4Y7+M0X6D/ME3mjopqlRrT61
dsKjpBcNcfSfX4ZeL2/hayRv6QcrL/2H+uG+5gG5yv+yuEfJf8rDdyq+sZaj
P9SS/kA98FPSHyhP/+St2dxmUH6wPDy74YDoIXOD7xPBn5u08FDj1OD7zuhF
G/WeDusIHiJ/EOvI8nedW3P8ufifTf7Qz9sbxz7XMznLxh3+WNhT2fXeOm3/
l/3ljbNh1Xf0O271wMMVP0A9th/J70974D9evCPa3zD4Lif99tLCO5/fVf+M
rTv4I62WFD7wwln7X+an0/tBtNPecbg8KXr03VnWz/CIvWPiDu3JtP0OPlp5
IZjP8Fzlh6f/4YkJU9I61ku28qyXJ5TfnvLwHcqnQfupZ2XNIa91bHDY/hfl
NyrfRXF2DL4L7+F8F57kfNfOKaqffmBdv+L0AzzL6QfL/6l+oH54vP4X7be8
EGu7rLlUKfhOPbyh5C3tsXwIRz/4ZNfIvTYfLA+/I4fh4ySHmYeWX1R5NuDU
78v8rMKgnCOmj8G7Kx/F9e/B+T1/ys5JefhvMz75atPBZNPHqGe+8gHCKV/z
gcmXmrU6bP0PfzCz8ohxTQ6bXIXXlf5M++GTl18dnx6yy+Y/8m261inth69w
9E/W+zbFA/BdN598T+fe9Fj5/akHOblX5yPq4bsJisOEUz5DecKZV3YekZ+3
p3OOK3n9Oc7OTfV1L5j+ZB1lS7+if9DfZgX0N5M/8E0Bfc/mP3xbUdrjk1uS
kCfwpICeaXIbviKgl5p8pt/6Sd+2dxg1PhWfjXrkm5rBd72pJyygl9p+BB8Y
0Idtf2RdN3H0Cjh6Be2E+xw9AT5HekK4cx/tUd1Hozx8l/bHcOceWTPdI6O8
ey+M9jOfwxTHTjvtvQbFpdNv9Ges7vvc7tzTqad7OsxP5mGYzlnME4sb1/5F
/RY/pnFh3Vn+AWdfg7Ovse6Yn5w3mQ9wzpU9HTsJ9orr33E+5EX/p9+sn3Uf
gXlOv5Xr2D2tTbbf9kH4oH/OLb7wVPD8S79lSG9hHCl/l965ZhzhO/RONOuF
+bxe653+ZB9fXePTOt3uCI6XxeGEVmj+2f25th4tf2zqqJCMzkE93OzVh8pu
rzLWZ/sL3OfoV/Bz0q+uf+/7lHeZcw6i/7EjMe7wTvLbUg/j0kznPsaR+XBX
t71rf+xzzv4X4/5Z9uMT25c5a3IDPj7+SK2qn5+2eWXxeJJv/F/0n5Erp5zK
OBzUo+z+4IH2KVOa+6wf4J+kRe24t0PwPVl42xmpNRf1Cs4r5sNrjj4G7yJ9
jPptHXmjV0+resrWl8UBal9jPsATpcfSzxYfpX2NfoZzv5t1AS8jvZdxZNxb
Kd6ppxPXdK/impi35mfXfkT7mZ9J0pNZF/BxOtewLuCv6PxC+/nu/OvvrVt7
9ur8C2d+cu6mPbSzs+IKaD/ffV77NePFetyvc1Atx+53UHY/6oc/qvoZF3g3
zX/G0fKdar9mPvDdzpoPtJPxauC8owqv58gZ829KzjA/+e4OZx3BJ2sd9XTi
FSc7egv93POGXasPvWT+Nev/xSvfietVJdf6gXp88vMyXsz/Tc47mLT/a0c/
tHye0gMpT/27pY/9F+OUVmc=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnXX4FsXXxp9n49l9dvcLiGAgIAgmYHdgYTcWKgqiKCYWNoooSIhid2CA
ioktFogBJrZiYCt2t773h3t+1/vHXnN2dmZz5sw594ntOmho3yOjWq32bbNW
i1W+0KjV1qvXah+mtdrVSa12lbaBOhBltdpeqv9d9YnovUX/Ifp89euqfm+X
tdpt2q7UyW4tarXXRXdR/eG5zqM2P6tt1FKrnaW+/dTmJV3nH2276Ty/6tja
us5a2nbV/rVqv7T6HqG+x+o8T6rPsuq7jeovUdtfq1rtYLX7TW020raF6i9S
fVu12VL0xaJ/UZsn1f9GHd9EdUfpPI/qPD3VZnsdW031Q3V8oupXFT1L5ae6
72t0b1NVbqZn/l31vbVN0n1dp20NbX3Ud13VHaW+F6vPOqKfVrm6jp2nvtvp
vl7Wc32r+gt0H5fp2iuIPlLtT9E519O2p9ospfZ/qr6Ptq1U9xfPoW0b0X+r
3FLbturzg/Zn6763Ez1E/f7TOftrv8Z7Ev2Z6Ejn+lTlGdrWUfvtVb6n7R/R
81QOVvmvuuygbXvR/6ncUduI3O9vD93jTNE3iN5Y9MFqU9f5d9P+YPVPRU/W
tV4T/buOvaKyj8o/aK/tTj3/8iqfVDk69zM9rPN8pXYN3dsClYO0xTrPDTrP
Lown0bur3UVqv6vKR9T+W7Vpqv03Kg9Rm0Rt9uXdqTxE2z6iz839HDPU/ji1
OVfvfBsde0Jbe20X6thOOnaZrtNV33prtR+pc26icqjOu7HafKpjEyOPtS8Z
Zzq+uWhea3+V36vsrO0hnX9T7etz1j5W+7O19db+N+r/qerOUnmEOm2huq9E
f6ztI96ryj3V9hPRKfejNj+ovJBxrvsYqPZ/pR5/jMOWpscH46QU3UHX3Uv9
v9H+GL3TbVSO1/E1c4+d39R3B53za96H6CVjz6mvGHOR59QC0ffque7Rdra2
x9RmR9W3Uv2XanNZ5Dlc6ZzbqvxO57kk8hxn7C6l9ruI3rnuMfUF96ntU7U5
J7zzKbqH3jrWV+Wuuu/LdY4Gc1z3vJ7anqJzP63jm2j7Rfsn6D424vvy3VRO
0PZV7LnEnGqjc3ynvmuIHqa6LXS+zUW/pXY76Nil8B6dfz0dO1DX/0f7Z6r/
tbqfg7Q/knmo9scxBnVsM9Fvqu/+mcfbJNXNVPuNtP3INXRsMW1fav94bcNi
z98G41Xl32q/u657hcpldN29RF8l+jfxgD1FXyn6D9H7ir5O9O+ip4uua8D8
KXp06Xs4S/fzk+j1RZ8qep/Mc/Bq9dk69fd9T/dxqOiLRRcql1CbT3QPZ+tc
J+j5vhY9U8eu43m1faP9VVT+pPIZ1U9QuycYJyo/0jUeFN1K95Dqui+r/4vi
aU21f0r0d+qzifbvU5tVVGZq86rqXxH9ro79oO0pHcvU/kTVf6v9vrq/XbT9
LPoU1f2hco7aPKa+fbU/ivOLflv026I76NoddC9nqHytcL/NVV6k5/pV9AU6
9rHu8yGd43HVn6R+v6j+We2vmrn9diqH6Jzv6z4OVvmZ2j+i431FX9bw9Z9T
ebL6/qb2s7W/DDxK9EWqP03v8R3V9VS5k64xS/TX6vtt7uc7R9/qVBY/1iO+
jdq9qHI5lf/Ca7W9oP0Fud/tjurbTXRd7a/S+VeEp4m+RvThjFvdZ6XyK/iK
thnqs0bm83BO6haE+kLt5qvvR7qv4SojbS+rvp3O8YboFm2naUu0zVX9ayor
ba/xzRijfC/WpoaPP69ybfXtoPqMNVj0WtqaokdoK7W9rnZfMG+0PS/6O+an
yld1D2eEa76h/d10b7vB71T/fe7x9Ybogfr+rVX/JvNKZatwzh76xnepfFdt
b9M1p8a+3ocq52v7U9cbqnf9hN7Bj2rbSue6Uu2fVfs2oq8SPVv0t6LvUr9p
Kk9R+5tU/4rqu2v/atFzRHcuvE69zNoo+n61v4/xo/bXq/4l1fcsvO7PFX00
axvzXtdtp2/xtu7lVL2r01U/W/WZ5vVKOnaL2r+u9muo7608r+i1RU/lWeFF
eieX6ln6qDxbfZ9T35y+anM381dtPtG9TNC2la6xoeqnqf591W+jPler79Yq
T1DfWer7k675O2NS7R9TOVH39KP6naeyc+55eJro69VvUuy5Uap8Joz1VqLn
hHnYWvQLYQxtrWf8S3WXqu9N2tqo7kaVu+vb7ZZ4rHfNPb6vVP0quo/HGBfw
DPV9R+e6P/Oce0/bmmq3GLT6tde2rNrlKm9Q37axeQtjFP7BmGRs7p+YDzBW
8tzr6I065wQ9/y8qO+u97Vh4/P6l4+fqnbQRfajoO9T2dm2Lqu+nKj/Rlkae
W0uoXFfnH5x47iyubTP1XUR9x+p8m4teQvQKus6LDa/dX8BTVb+46g/T+T9S
nzHaNtSxnjrP2LCmn67+r6pcUeU26rMt307Ht9N5ctXfqrqntE1S/cGq20H9
Otf97Z9JPd4WUVmq/5KqP1LXfEvl0tru1bFc9UuIPlz1N6tcVNtE1bcvTK+p
73Ci6EVEb6A2h+hc1+p4a+QEXWuW6hfnfGrThTGsNkNTz7slkHVU35Uxo/r1
9a72QNYSfQDrJnxaz36v3stYHdtQ5fF6tq9FHyP6GPgfMin3Vbg8Rv2OVv0L
ojtoW1L1nVQez/3DX0S3Y2yovqPK41Q/I/U8bVF5eOo5tajKU9Vmsbply7Tw
cxwq+tHU8to+ep+zVP+x6tctvL6wpqyEjBjGFGMFPg9vX5H7EL2ztu6ily9c
nqVzDmPciO6mbVjqsb20ym/0nHvrmaerXEHtl9Xx0Wq/XOG2I5EnI9/DMvBv
1U/R/h0qT4/MR1dFti+8fm6s8mid9wFkJZ4D+Sryt1mqsCzaW+d8vvBa3bvw
WsPa0RN5Ufexr77JipoLJ6n/czpPN5VzUvOcoxi/6rNa3esUawE8eWXWyMLP
uF5YO1iDesHTU/Ock9X3K/XZUuXDyCoqKx2/CxlV9acw19T3IdWfo/rVaadt
AuNQ5Ztqc7LaTNP9jdF8HaH6Lqp/X/VnqP5+1X8ueiT3qfPM0LGL1GZTlZtr
O1t0r4Z1yjFq8yBjT/f4fBhj76l+hOrvU/3fqn8A+QSZQO/wfHiK6PYq34/M
Bw7UdzsgrD0PZV5PLtH571KbO2PzpSE6fnBinrCDnvlM0W+gj2h/I7X/GLmw
4Tn7tN7DE6Iv5DuqnJ55zbxe9FkqN6hbjp/cMO+5TuXruueTVHeP7vkwtR+t
Nj1Uf6+2UYxJlR11bHtdt4PK39Tvbm1P6tgdKp8K83ei7vc8bU/DC9TnQfil
yoN0/mvQa9R3R+2fh9yt8oDUfCJTubGeZ4L69lb5e9P1j6j9r6J3UdtH9NyD
RJ+v+j9U9lNdi84zTX0P0f5jKh9Xm/1Fj1Ob79Gzdb5T1OYIbVfpXP1VP1P1
1+bWvd4SfQeylI53VHkna6fozioP0Xs4RnQh+lZkctZftR+obSzyhcoddKxQ
m9t17clqMwiZTfX38K6ZuypvVv0Bqn9B9dtrv6n6qallQmTFFeqWgZlHy2k7
MLNueKPajND7LhLrqGP1XnZBB9L5jleboapLdb5XdN69VX8lcp/ovuhiondW
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

          "]], Polygon3DBox[CompressedData["
1:eJw1nXfgV+P7xs97nPM+60NpoqGUlBEZJRmFSELZQlSSFL5mZGTPrEIZKSIj
M1RmIjMiWQmRimTPjPpdr67z++P0ee7zjPO8z3me+7nHdd+1GnhKv5PLQRDc
EAVBVX8PTYOgrW6sFHFhHgTz4yC4W/eHqn626Jd1v6XqDywFwa9hEJyu9nuI
nqP6U1S/axYEYypBMFl9mqju3loQvCB6vcDtW6i+j+glGmeU2i/T303Vf5jG
21v1X4huLfo/td9D9Lt6/j0qj9T4L6v9JP39QnRTtblP5Z/UvoPKw9V/f7Vv
o3sXq7y97v2lurt0LxB9oJ55tObymcZ7XLeuVrvXNV5r/b1I9dup/Z9qf5jm
vJnK36k8WvVfqM9a9d1bfRbr3jGqH6H2fZmb6ndR/5tEH6M+f6u+rehLRO8g
erXo3xPNX/QBun+q2o9R/yNVt0p1F4neUPfPU31H3ftd9y5VfV+VW2r861X/
vN7Xibp/oO4dpPIDul9T+/6i31PfbXRdI/oo0X/QX7+vh+a6p9odpf7viZ4i
+jXRt4n+Rr8nVLtDdW+F/n6j+d2s/j00zgjVrxR9q+g9RZ8s+me12UJjR/wG
jbG95nCB3kdH9a+n8qca7z/RbdSupGf9T/dW8r1VPlT9T1b9MaJXqP3l6t9P
v2+5yh9q/M9V/7HaX6m+B6v9ITxf7SPRt+nqp3vX6Oql9vuo7zGq/0ztx6lu
P90/UvS1+ruv6nupfoDo8Zr/vpprV9GHid5O9SPUvsb60z8P6X6i+uP0m2qi
HxQdiz5W9L9qN0/3fq14zM9En6LnLRf9nugRKp+ma5XoIzTu4Rr/79h1k/V7
3hF9oX7ffhqrqca9VvRA1T+scR7RNUjlM9T/B/V/Rc85QvUXq/0Bar+x2o/h
fal+mepD3btCdbNEH6S+s/WMmbx73eutugZqf7XaP6bndhI9Wr+hpcqPR17L
rOlWKt+jdhWVD9GYg/TM7dT/M9EXsm7U/z7Vh6IPV/1Q1c/WM4bzPTTGwSoP
UPtTVd9P7d5T+230G4ap/m/dm6X2T2mcLsxV9JYqv6p7P2qsPTTfj9TuTPXf
S/WvqO5/6v+h+j+ouotpK3pvXW+I3lb3m9UFwVL1L6nfAbr3pf5+yYfT3/0D
84yn1W8njXeVnre1ys01x94V781zNVZL0QdU3Pc8+Iv6l1Uezx7SM15U/Ums
LY3xgsrHa35naaxD9fsWqn2dxjxd9Oaqf4hvqv5/aLw/4Y0qH6L2bVS3XGOc
r/aDRJ+h9ger/wLRC9TmL7Vvpfq1Kr+sZ7RT3y6qb6nfN0RzeEx1j+s6QeXB
6n8m30f176v/ErW/hd+ruv6id9DfU+FL8DSVh6t+qcZ/V2NmKrfSdXDFe/kC
td9H17Fqu6PaTlY55r2Lbqc5P6jycboeUN/XdW8470/Pn6PyiQV/v1pzvlrj
XROYZ8EH4Ad1uh7XHJdn3puHw0NVnql7N6j8jOoHq+0Juve5+m8vei+N/Zbm
MU/l/6lujsafELvvgep3rOhX9fcx0QvU5gy1OUb931T/bXTvNN6V5rNA9AzR
/wvNp+BXua5HRfdkPqpfKvoVPW97XZur/Lbq5mr8SzLzp880znp6/wNT7xf2
zSDVN9LfkWq/le5NU/kG1R+t8gLeFfwfPgiv1RiPaoxhGu/Litf/ZWo7Xc+5
SnN7nDNAbfdS/XjVtxZ9kXjRFZn52XfqW0/P7y76Jr6f6p9W/8nsoWK/c54N
Vf0XFe+JISr30HWz6E/Ufqbad8/97Tvp3TTXeBvp3mzVDVHfF1XXVu2PVPth
Gneg6BPVbjpnrPo8B28T/abK49V+nuqXZt4bfXXvKpW76bpK/W8TnWjsOl0z
i7XyvNqvD08SPUj0C4yfej+yL4eyXtV/tPrvqP4NVM5VP0PtB6j+OdVfpzk8
w17WvetVXs5+U/+P1Ocp0Vuo/QeqO6c474em5i/wmRNEj9Lfj1X/su41V/t2
esZR6jtc5SGq/0D0xfo9O+i7HCT6Rn2D3dgPog8u9iv8ET45WPQAtX9b/Ttr
Tufo3XwregrnNmeO+n6t6zrOc7U/Ue3/Vf3tovcV/ZTo/9RnA7V9mnes73GT
xh+g8d9X/fG8D9FfqP0lBb87Wv1n63kHcGar/ISuS0QPYX9xFup3XCH6lMD8
/CTd+6rib3aiyr8mxfml3/N07vNrlOom6l5v9o/mc5/msqXo91TXS/fOVf0d
xZwHc2bDL5iT5vYJz9B8W8GzOZNU/5zK+6n+ttRyEPLQKYyv8XZX/Q2qf1X0
dM460ZMr3nPsvZ8yn3XIIJdz1lXNS+Gp+6n/YM3vUd3rHvg83Edt7lT/6aK/
EH2srmmqH6JrK5U/0fW1+jbV3F7jvFD7O9R+ue49p+f1Ej1R9Gair9K7OVz3
TlM50e+az3mjfn+rfndkDo15fWpZabjoT9T+XdX/qfrdRH/AN1T9m+p/ivq/
pP5Him6v9j+q7hLR/VPLm8idl4r+CrlO9EKN8YTGWqIxL+P80P3LVf+p6AtF
N0cuzT0O452ke32Q0VLLV8hZl+WWu5G/T+R7qX6N+k9T+Qj1P031gdo/gvzH
vhE9UvQ+nId69hmiv1T7y1XfQfVXIJ/q/Vyjud2lrvXV9iO1+wf+JfpwlfdV
/STR36vPPGSDxPLzUXr28NzP4XmNdT2ve9PV5wO1f0H9zxQ9Qn120fOfVbth
aj9F9bNULzJYqfqTVb+r6p9jnal+lu7dCC/SeMfr3tNqv0jt5+neuar7VPeG
q/27uveI6obq+z+hd7JP4PPycM33WdX1UP/D4HW6nhfdR/R6Kv+W+WxFZrxS
5c+QazXepmqzl8a7Tr9vJ7XdVs86QPO5WfReyP+i+yKPq82z6vuV7m3E2lH9
fZxtqp+p+oP5jqqfypmt8mWZ5Yvlaru+9v8A5BvRA9FLVP5X/TN+q/rPUv89
1f5WzWWaxvhY9ceJ/pCzRfSnrH/R74u+X/RC0bcl3ot/6ln91P8TPedf1fek
vZ6xB/KC6E/VZobe9Vq1f1jlI9X+GbW/SfTuon8TfaDopvADZCe9k9+Qp9S/
n/7+pnsL1X8jPXMj1qbuNVN5Z7W/UfRuar+G/QFfVXkLeLTKV+i6TvQZmsOF
Ncu9yL/N2UMqb6Rrf9FjVX+qyqP1jIWqO0vjfpBb7kX+bVXy+f6lLvTRQ/XP
26xxjbm7+m6JPKByrPluI/o19mvq/Xy++h6kfh9pvFz126m+C/xGddfoOlxj
Xaq+H+aWm5GfN+RMQxdQ+23V/nW+R2q9C/2rbcnr+yr0MNGd9NszvY8PRX8o
uqH6dNeY89VngeiOKn+r8b9O3f4vzX2V6L/U/hvRE3SVkSVFr1B5HDqu2izI
rJseqOe/p/KWavNe2TI4Z/xCtX9H9KGiN4ktj/ZQ+13VfnfVvaXnzed76P43
el5n/V0mekjZOtZitflM5cbsGdXtqGup6MHwrMj8YG/2hsbrEVp/PZ2xkY9V
3k/1nVWvpR38ovqRok8SPTiwvn2W6BPRrQOfD6N1Xaa+3fT+liLjqb6f6g8J
LDNzLnI+jlX9rqwtzf9s9rLafgw/RV8JPMYvqv86tF3iCtG/iv5BtF5TcC36
Lrp76Dp+E7/tHF3DNcDxgfXVM0WfIPrgwPaFy0L35R3xrlIN1kn189E3Ust9
yH/XwiMi2zWwb4xHno3M5+B31yNTqNwQnqO+/TTWuNx8Dn53g+q7IDNF3jvs
oa4qr6/2m6l9Z83jN+wpyNiqvw37R2R7whmq7657L6o8V1dPle9FB4usR6FP
TcGmgWyv5+6i+bdVn1NV3l9XV9GrRPdRub6e9zPvQuWxyNvqs7f6PwqPj7xe
l6N/qs0DKv+BPCm6mdr/DD8XfZXoS0Lzjx9Er+b7qv5L9CX9fVj0ExovU5t6
oqdzHoheH3uPrsWaz1nwCJUbIP+xv3RvA2wSmsMnyIOin1Fdons3MRe1ydCf
9Lw3VG6DrAi/qHl+m6t9E7X9WfVrRO+i+1+h/+nvXNEJZzr6vuonit5BYz4i
XthE954X3U71jUPz+xdEV9lTNdsM3kRmCWxLQMe/Qe2+D6z7Y4P4ptB/sE1s
h0ys37qT+v6QW2ebrfJ3lUKX0/MHlX1mrNB4T+g6vmQZ+fHENoCbNP4PgW0D
2Gy+KuRxbDnT1Oa4km0uDyW2qYxR+5WBbS0Xsv5Ud0/V8ioy71x4RWBZGJvK
NWr/bWBbCzLwq6pvFVg2fib0u/5N186adzW07nef6BTdJHT5F11dRa9K/b3X
Q8/HfiB6TNk2HWw7rAvWBzLRl/q2bUW/VbbOjY7Pd+J7IfMvU/27Gv91noWM
Bg9LLY9+HPl9Xq6/pYq/EefxdaKjir/xJswh9Xqrr/JPan+36CvhB5pPX5Vf
0zWP9aL6FbmfwbNe1b35evZ3Gm+0yh+o/eai/8NugD2nbPsQ9iLKkzhP1Pb+
1Ocd5x7n8c/Y+0R/pj4dde/fyLy9i8app99bwU6juntYk9g2aj4L+mu8v+F1
om8Tfb7mdDlnu+79iryuexG2uprLr3DmYUdS/d2iH8BmoWd9Dw+E16tPe9U9
GfpZP5a9Jn9EXlF5seq3Vl1J1yWBx4j5nuE6kTK4WvTvkfc5+31LPSvS/C8N
Xbe3nve9ymNT2yuPUPmT3HwP/jdX85vKuk+9ll5Qm0mp58zc4UnwvPtqbnu4
6l+vej39ofZNRJ+k9Xi/6l9H/9X1lupXp97LP6r+XZW/0RiniT5Mfd6JPB72
lV2L5yODIIsMqNjeuDL12n1K/e+EF6hP/YrP1PZq2yizfHEwZ7N+zwaZ+Wlf
0b+L/hadRm3rIcNpfr0Tz+8B1VfqbK/Yk/mwd0Tfqb+PVPzOf9Cz+qr9W8h7
fEvVL9N4q8p+Z3sn1nnRfZEBnyzWP99uup53e+p3wLvopmtn/Z671OYxlb9g
zYnun9m+jp29zPi6N0P0seiQunePrpkV37tb5VE1r9VHRU9U+fPQZcZk7IXI
lBXbvJAvOGxbF/aA17QeSqLbVGzff0f0FbHPV87Zv3Pbpzl7OYPP5Xuo/niV
z4AvqP4i0fuJPhK9K7fejv4+Tr93d2xNkWXLLXRvH9YTMprGO1r0iJrtGtg3
xiCzR7ZfHoO8yJlfs70f2+H+oo+q2f6Jrfsg0QNFX6nn91X5GJX/Qp/XO25a
sYw8PvWZwtlymt7vyaHPCM6K/4kegWyq39+hYh1hLrxA95qovFPF5y06BrrG
02q/gcprkSkr9hngO1gEn65YB0PeGhuaV+9c8RnN+8Y2d5J+2y+aXzXzu+Cd
7JRaR0dXf0zjr1/zGcpZego8NvT3wZZ2uvr/mltGRVaFR6yKLAMiC8KzfhId
InOKnqNHv63xv9f1p+pexh6R2sa+F9+5ats7+gr6H3pgXGf9DVsCNoWZKt+s
696KdYS3NP62mffrBfA2jfUO/En0r+pzo+oXZrZNH6bnv5/ZPjShYpveDSpf
G1m3v0v0TTXLO8dVzCPZo+gHA1mvgffweF33I2/q+fOwFbJGKp7TLawP7J8V
t5kg+kA98yGex7vX7/kgND1N1+01+y/gJcics/UObqx5LujMY1W+U+PVq1hm
34rfn9r/czS6rH7vuNT+mSNFL8otD6zzFyEX5d4X7I8+gf1dvK/TRTcUvQ22
Qo0/peJ3Nk5tz+cdqMzWnIkNGZml4j2AT2mc2tdVfKa25uxIrU+jV3+h543V
37ziM3kz1mpm2/8A9V+kjXZXansnds8lan9pZFsm3wR73bWcwcgiyHiaxAmR
eQE+v2tU9y4+FGQv5CneZc38j3vUYW/rpfIRuh/pfb9Xte0NG9zD7Ek9P1a5
nZ55TWIbALYAeNCeNdtgscXCg3rWrC9jH8ZOXNN4v6eW5ZZxvhTybEh77LUa
b0VsewNrNamzzQbbDTr345xlal+p2Ob0rMq/6iqL3hR7mfrPq9o2jY36QbXv
q+c/rPIdnO0aryZ6a9Evo89haxQ9kvNA9f/l/gt9q97fWs5b0efAK3VdpvL8
yLI799BZ0b/217PPZg/X3Ia27AHkfWQGZAf2APrxp6HnwxnEWcQaZi0j46yM
LC/9g7wPj9DveS0yb8fmiw3pJ9X/y9mq+idVbs45D39HZgutr+HrREd8V/0f
1TWoZBmb8+wBXcdwdoneU+XnsNEgb6rvxno/S1gzoofq2jq2PyFX+UfOcdX/
VDN9Avqm/t6h+R2BvI3tIbYOjC48lW8GL1H9UaL7YzdT3fd8V5WPVf/vsV3G
lo2OUbldbHs39avUbjM9b3PdGyD6Y833I43XXvRH2CYL+82i0OXB+EFFfxx6
LPrQ91+N07SQp5Grb9T4GxZr5AaV51Tt++Yboj9zXvB9G+r+c1Xro8jO+5Ss
zyJvLRPds2R5LNAzWldtv8SfVKd3ui37RfcaFOc99u1mZZ/vZbVvW7W/Gn/s
gtDv7jBdrUXvHts+fgnvNPZ34fssYo2F9kdjG+2q8WZE9i+P4HwSPVPlv5CZ
qv4NrNXmGmN/fovqG6nuH84X0W1U/7fKWWJd6g3d20jzfUzvpGfVMtujKtfF
tm9djtxRvN/tRF/NbxD9kNrspnJLtb9LYzVGh+BbiG6EL0PXnSq/pH7jtb8W
qf0Y7H+8Bz1vgcpdVH++/u6mez1j+5s5z/ZUeW1oX++NonvHXpOszS/hgap7
o2Zf5vW6t6/qbsH/IPqziv2fW+re54HXNPZq1ghrZZH6f6L+9UV3Fb2zrg1i
6wToBk2qfj+r1aZb1TpAVfTGsW1vvFPeLe+Ttr/oGatVXl/3dmSdYaNQ31+Q
AarW767GVqL69qJHFPId73sv0TuFfv/T8ClVbRNgf/I8bJH7Ffa+kN9Qtc1l
hv7ZUHTvqn2CT4e2tyxV3S4l22PwX+yj+otV31nlWVX72vco2f6L/IZ9tTk6
CzZxjXcQ61v3z8n9nfheHXRvTs3rFd9Fqez9fnZkeyE+8Jax1whrBX38enRV
1X+r+u90jVF5k9C26fexMarcR+1vrnrPgBkYHdn//bmui1T+PDOeoJPqL1Z5
MWcu34s1E9tvg//mS84PlSt6Zxuq7gXWuN5ns9C+yTdUf1po+QZfyB8ln9dt
sNEFlpGwbz8X2186SOUr9fu7iD6t4BecLdiXsTcP1O8PCn0O+8JdJeuP6H/Y
kwcV+hv6c3vRf5V83qOvo6tMLll/R79vqPKDJdtTsCdupXKl0H9e0vMn6lFD
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
cmzl8CR4Ez6hAYnXwxT8miXHdnKebxA5ZpNYnM9y49jBs99arKcwsg5HrDk2
nkmBY0Ampo5JnxwY4wI+cU3svtgAsAUgYyNr418Dq4MOgS6BDRhb8OXwJJXf
U/vNRV+c2Pf9NjpI6nilh+ElZeNHkKGQpeARxAJdmrhuvtq3S43pAtsFRhW8
yiapbRfTRD+W2qaMbfmEsuOxsLFia+WdglcblrgtNo9QdDUx9h+bAbaDMHFf
bALYBoi5Ji6ANhPUfhFrMPBveq6QhxpExuQTm7QodWwEmKK/C38HWEwwLmBd
8HcQOwSGDCwZ/g18t2DqwdZvU7MdB3sOsRv4K/CNEnNB7EVL0a+UjAnHPoyM
iqyKjR5b/crcuIx1+AyehT2zYp8L+Jr3dX2gcqbrx9gY4NMiY1zAugznTCsZ
0wa27QzRzUrGuIB14TweEdl/S2z17Yl5RZeK44nAwF8ZGUMElgj7MLGbYJjB
nl+dGKsEJvnP1Osd7BaYQrCFS1PHFoA5/UflF7DxlYxxAuu0bRqsC3iYVXb8
DusDrBIYJLBIUeK5rIvByLzewCKBif4ltf+L2FcwiWATwQzODo2XArQGBvCV
0HgpsIHMl9hJ/IVbq+/XueMoufd8ah8avjQw98TTHqX2pZIxnndklifxsb+o
4bfNHZ9+cNU+HHw56E/4yrDZ/ZdYX8JXhk0M/R95/Sq9z29KznWAfoMvC53k
t8RzYm6vlI3/2i+xrEbMS4fM8jg+95m6t43KxyTmNWA6t8osT12g8ReXHFvP
mcjZiM0BeXO3xLLFuOJ8P1L02sCY1C35LaL/DWyTHC+6X2LZkhiZLUQfmjg3
xX66Rqv/4aLXBMbwTcisf4GtIuaZ2GfwT2CT7tf1rMr7q351YMzw2Mz6F74c
bH7oV/i88H0RHzex2N9go+eWzA+QCZENNyhZv9w5sa8NHRb98cDEsX34ZMcV
+4+YpU6q3wP+ndrXTMwl8ZLI/9XINityfxDT8WJomzixHierzRNl+0gz0XNj
21MfLRsfivy/UeQYrDHFfqMOH2tc7LenyvZRNU5tY+e8YEziR9Fn6keOgSfW
8sXU2PzfRS9V2wvQwUW/JrqV6pblxu3TZjb7P7YuTxvio5fmxiHBk2fxW1Pz
jjr2u9rOi60vMyfwbfh4OB9mlh2P/Wbm2F8w4W9lPp+I/T9Bz5+WWt8D8w7e
vFtufRDcLvjdnVV+PbMsDYb8DXztifc2PA5eh08W3yz2yX0LfRaMyDz16ZQ7
huXl0D4o+Av619TQ+TeI9T8r8VzxoW6YWl+rRLbJkZsA/TWKnLOBXCZbJ/ZV
3IJOnngNsBbgmcT7tU2NDSAmkXj1jvC4wDF7F6WO0cPPj46BrtE+dawiMX7k
uiCmDgxj28Cxdh8n1p3JccJ6wAaJLZKYW2L1sGeiOxJjhf+5U2pdiRhA9mvr
1LGPxOjBj69KHQv4VWB8BzIEsgSYYvCxp6aOVQNTS3wN9jtkH2Kk8D9iL7wi
cIzVGantdchqxHThfyRHwDocUMnxy8hcyF5gfnZMna9iVmDMELkz8JHgK+GM
56xn/vCauYW+11X084FjCOFv2GCwxRCjAt4S+wm6Ri98zqntg8iKxHidJXoE
frWybcTg3bCvoAsQs3V2wb/QTdChz0u9/7EdEQOMv/0f/ANlYzbQj9Fx0HXA
bGB/x16IbYAYNvAEzRLrbuREAB/wcGxbKzZV/J34C5D1iWnDP4uOgK5ADD34
BHQKdAtsGNgy0PHQ9dAR0RW/zJzPYieNcWnm9YjsTk4J/GfDUmMNwUjjj++a
2Lb5mK4y/CVzPo2FhT93j8hrGfsI+UbaqP3IwDkIuqrtpoltJeQMAI9wd2zb
OTZ08M3oROhG6CDg8d9KbLsmJhv+czv+rLJzQixQ3fzEtiNitJGH3k5seyEG
HPkT+/SZgWMawUegA6ILolOgW2Afx7ZOjqODU+uE6IboIOgi+Ac4S8h5dJDo
OYltMcTcs3+xt6P7kXOE/Y1/oX/gGHH4NTIfsh8xWcTPoBOgG4CJ65baRoit
EH2G2HBsVtiukLfB6j6l6/uyZXD4Gz4FfAvEBBIbiM6L7gtGAqwEOjq6Ohhg
sMBvcd5i69N4e8M/Re8N/9Xzlmsuy3StLhmjM7eQh8BWNtH1V2x/GrzvP7XZ
J7UMjSyNTxK8NTYrbFdvq803av9F6tiXRrr+jO3zwffDvSWp4/3QXYixIdYG
+RUs5vrw09g8F967WPTi1JgdsDvE8BJfBGYH7A4xtcTDY385MzKeEH73huhO
NY+JPPxp6rEa6Pojtj+X2B1ihogdwieBb+IH0StSx7Sti8sqO9YH/zO5FFYX
5y0xdcMix0QRG7U8dd8d+T4a/2tdf5aMmXoptU0S2yQYsS9j6xToFsRIgnfH
poptFYzZlqkxh/g+LgpsW4ef89uI6SD+HJ8Gvg1szOQyIF/W7MAYTOxLyK/I
ZlupfZSZXyM7g8EnXn2Bro9KxqSNSswPkfXA3IO9x54zJ7SNGvmI8wbs8U+6
dle5Yc0xopzp7xf2NHDJtNkmdc4i/AYPBubHyPzI/sRsEMvxtup3qHmNIW+v
xPBWtoxK/qTvRJfLxiS9kdofDO/+WeN3Ty1zIHuQ06J35u/L2ltb8npZpfpq
2Rgv4mX45nx7MPfEAqyOnZuMGHTy8yBzIHsQM068OmuWtQtG67PUa5K1CYaL
+HP2BHsDjBjxyNi4sXUv0hx+U90zkX0rnKHEP4HfIoYKHtQqN4YILBF4k1P1
/C7ozJyV6jM5NmYLX9tlFfNL5BOwOeQQIJfAGmxPZe9/+AD5CsiFQE4bctsQ
P9VTzxpayNurI2ORiVnB5v+P5nCv/g4T3RF+n7lMfNYNsWP2OL+JYcHehX0Y
XzBz3CkzfgOsFBiS5aH1bWy35Pwg9wfyILZZcuKQG4f8HuA9kak/UHl65L3C
nmHfkY+OWERiVnZT+b/MvjBsKthWyKewb8UyPviDhomxUcT4EuuL/EuuAHKe
kPuEfHDkm0JH+LxmeYxcB+T0IbfPGbGxxMfFxks1Uv2RgTFXYK84r3j3vURP
z+wj4b3x/oj9wf49umZMErEj4Gmx3YKRAe+4b27ZHtwl+BswnOApwTyBfSKG
ApwJeJNvwEdmxoKeUfj/e+TWpchlRfwieQvgfcREERsF5hbfOD5ysFbESIBD
AY+yTPS32P7Kjrkg9uLrzHXgU26MnR8OWRibK/HK6yV+H2CsiR/7JDP2jZgF
4o93zBy7RQ4c8OPQYMnBgDZGX8qN928YG79HngN4MzFXxF4xPlh+MHRg6cBz
kVtnZPH+xsfG34DJJb6M/ETI7mCKib8mRuDlmuUTYgc21r311fYItWmTGXMH
LyQmhXxXYAD6oVpHxgaQP2avinXU+TXro+wN1gj2r9aJZRViHK/NLCPCb+Bp
8LZ7Yj8LvOWnhb47qOKY74cTzwfbOzGP12TWV4dUvObBOo+MnWtpcKGf/i92
br5Bhb6M/kodMefTVX4/8f4Hwzktd0zm7aHzSRCr+XdmXy4+TXybj+he/4rx
oZwHm2eOxVwWGJ9MvjpyxZEjj1x5xFljyyLmjtg7fDpgP4nVwdezfmLeBKYK
bNV7iWUtbK7YXolRAT98b9X5i+onxtoRI8D3IV/QqpJz/pD7Z4PEWDLWyIOZ
8SkDSo5xINahc+5YJmxC2Ia65M4dhE0H287kzL4ucqjdnTkePC8bI0S81Hq5
bQ3oCOgKl8WOB9lLczua9xOZt8K/4GP4+sAKYNPAX45PaDu1n1v4ioh5vSN0
viFiYbkoDynsD/hIif2vRfad/pMZC4DNGNsxMbalyPk6iL0Fvwzef1Hk+L4G
idcnOQTIJQCeBV8BOTexh96V2dZOjrxJhT1jl8Axv01Fv5EYiwMG+cHcMbKT
QvN8eP8ribE4cTE/YqZvCY3xJ5YaHyi+UDDbxIa9lhhLUlfsFzDeYL3R4dHl
/8qs6+AjwVcCHgVfAjGyG2f2cXVFVijwlKNi79XjY+NjwVSBZyGXClgr1gv1
6BzkXyBe47KqMVxguch/ybfGZrSi5pxf8MeWVdt7sMmPFt0/9PvGHk3+xLtD
+86w92xS9Z7fsPCfjQv9jVnPYKjZK/Wq3u/IM+dFxsCChW1QYOCJEbux4A+0
ZY9tltknvs43rjHapLYXbVS0vynzHmWvMgfsTfew56qOt7419npuV3WOllv4
XlmRS6/Ad+ETxDdIDEb/xPlZ0C2w8Q2o2X96f+gxp2T2OWBvGhj6vAQ/CvYO
jODUYjzyq04M7Xskfxyx9sQMPZnZn1iLjRek/ZrM7xcZFFmUGA5iOe4tZAdy
/jFffjP2sYZFDBcxGmA5wf+dXDXGFawrGNffa/bHQoOJJW8O+XPAyoLJANt9
eGh+hn8DXwt4yUcy4+daBI7ReiAzJhZ8I88AX4h9+dXAOZLIlYT+QWwDMYnP
ZM7vCPaWmBLi2XjfYOnAhBL/t4p7gWPsvs8cA9kmtk0Q22C/zLoSOV7J9UqM
FnEuxLsQu3V2bP9Qs8Keh32yZfE+bs1s76OO/UasBD5C9FMwW/gOwWSh34Lp
AttFvDC2GfwpQ2rOYUguQzDG5MPExoStiTUEPwRzTN4O8neARcbniH4KRg1f
5MOZ3yUY1FGZ8wuSy4UcieSrw2fDszarmt+Q3xPeg831q5rjTVqV7SMj3oP4
K3yTYKiJ1wBTPD50vAhYY2JIbgsdI0RsybaJfX1gjMAarcgs+3Dmc/aTn29i
1RhNsJr44MHCdQrtm98xse8MzBDYIfYIe6VzbGwk+Tc2C6xTko+DfC1gmDug
VuSOZwJLzh5gP2E/PLfq+AByszydFP6/2L7XPXLbksm9Rj4IYsiIQyLmp3fu
fKfwamzKS2qW2ZDdusbGcpJjkBgIYp765Oa58F6eib0SjCNYx5FV2x+xR1Im
ZubszDIjsiMYYbDc+KTxTRMTSr4Y4v33K2TK/XKfcUurPlM4+2i/icrbF/wa
jCj+YWIXwY4SM4Isgwx1TSF/gj0Fg018FTlPyH2ya9Xxm/D3XoFjHn4tzifW
CjmlrlfdVbF9x2CKJ2b2R2xatczeLPMZyFnIPfwTYD6IvYKHwcvwR98Zer0h
LxFz1j0wZh/sPhhc/N3k5rqr0J+er1lm/aPYv1ORb7VGD0id32f/QkbeM3cO
E3KZkKOVHK/kAwXbfCXrI3RMy9Gx4xfxjxDvBnabMwX/5srMsg4yz7exY+D2
CRzzQOzDxbF96WC4b88sT/QIHJPxY2aZGNmYnJXEuuBjwNcwteA35Csl1y05
JMkluWNu/Bs2BmwN5EsjFpCcsuSWxV7RpeaYB7CV5NRAd0OHg0djjwFrhQ8I
XxA5AsgVgD2a2B584tgzTwjtKycf05zAMhv5ejjzW9UcT4ksgA8GXwwYO7AX
6Ne037rmfGpTYvvm1yvkka8j5+bAv4dMt3tu21Hb0PH3yCPrcrmoT6/E+F/y
RJAvomdhH8MfNC+0L5391yO2jICsAD6QXBrYX3hH2Atewt5Xc3415CFyh3Be
Hp04xwlnL+cla65xYlsbNjdid8AQoE82LORb5D9yn7C/j1DblyL71tHfyX9C
fnNywS4RvU1of0bjmnVw8gXyTtDZsEGsKnTMgcWaRvc8J7UtGJsw+MLWoW0b
2KiJH/wmci4u/JnIwPhXt63ZJ0v8GPFh5EADQ7yxylcmzr8B5oD3hf4Hdn6h
6s8vMNfb1+zzBYuNP7FFzd+bfJ68M3Q2bC68S3IwoSNgE8Q2SD4N3i82S/J7
4P8gRxQ+2jMTx2vgCyOGlXgx8lmCBSRGjHgn/FXknMLHO0L0zqltn8QFk9+9
u+7dGzimj9g+coiRSwwbGra0Ualt8djkwVuyX4lFY09+l9kHB3ZgcWTfHHlV
wCaCxyK/If5WcrVgIziFdxXaVoTN8rzifaNv4BMg/xmYGeztYHzB0vBNpwX2
WfGt8c9/FBlDRz6tFZFzUSAjkH+B/CbkG+f7k7+EfIHkA+b9kn8EPMQHkTGQ
5L8aU3PuYHws5F8k3pK9Rw7elwp/x0Mqvxkae4J+QS4fMOHPJs7vim8EH0jv
4jwm1gd7ywGJ5S9ijYjBGVOcz8R6Yh85RPVb58a6YbPDdodNDl84eZiw1SHz
nV1zDkRkwT6pfRfECpFPnX3N/saGOCq0vkrOFHywhyXG3GDvB+MNFof4N3yv
+GfI14O8RY4DdO6euW3S/5ScWwhbNfbrCZFjtLGvcb4eVsgMyA5b5v7W+MDw
haFjkUsFfyi619rM/B5MKdjSX4s1gk3o7MQ5/sjJR34gcv+BaZ2MPhga68oc
mAs5fiqZczKTBw8ZClmKd8C7IH6KXPO8M94dPLtr7pzCxKjzffBVPRqb/zQu
9PtSbl8xGNpbirUKdo1vQv5LcpKTYxwZFlkWTBv4nGMjY93aqU1Sts2H/Y79
mxwzxJvvpHLP1LZ/5jyv4M/o22BKyJ/EHmQvzg5sS8aeybvG54nvEwwfe+/k
yNg+ZCJkI3zYxPtir2c/bVez7/TSQj8m5yr5hbFP9Y2dw5rcHuTjxVcMPyD/
HDGCxP0R/4c9a1RxvpITHH8UvBjfPwkPlhQ+JnxNxLRhT2NNYHvFx8Fawb52
UOwc6OQu6V9zrily1iPPkl+Z/6uBnIfHZ86Zhu7J+dI9No8lVhdMC7yXHMzk
Bniy4v/fgfgMYsPIEUquUPQD6lizrF3+TwDOB2IAyc8/NjF28JmK8+GCZyL2
jpxfh6CbJa4jJ++hBQ22kxy65NIlRyeyMev9UPWdFTnXB/yf/JdnFGcLPjjy
I+DzAAvEGmAtkI8DWW5KYaMjJyK5Ecl5Tv5dYjaJU6sV8syTnMkV54wg3zX5
Ad8IzI/JR0T8HNh7MBHkF2LNs/b5PxH4/xewTxP/Qr7EG0NjecFSkMMZ+9v7
xbcj5zP2YPJRvRn4vCH/EzIKZ8nnkWUX7C3HBs4JQ/5z7IHkpMCmdHrm/Pbs
H3TgWuizH6wJOU3RlxcXa4v/IwR7MPkzOlSN0SIejphQ4kwrhbyJvRx8/MrA
+TuwmWI7JacB+V85m8DekKOJXE3k02evkROe3PDk5ycWAMwH+TgmwiMqzjEG
nhL8JrmFyDlL7lnwD68FziHVJzO++Y3Q+Y7InTQ6cX4nMIfwf85s/EVggjjL
Ryb2HYPJh1+dm9i3A2Yf7D7nC7l9sW9g5wBziH+ZGBOwiGAg8R8TgwI2kvg+
cg3js+ql8i+xc6nwfwaQ754zmbNp05rPauLHwYYjI+CvAaOLf58YEbC72LCx
ZYPRIL4em9CQYo+z18F73xo6XxO5+vCXgbUGQwSWaLfc8hFyEvm/wCwjOw2M
jGUmJpjY4BcrztfOeUwuJHJCXaFyLTE2lpzu5HYHjz4hdD4rcl2Rv41cVORQ
GpgZTz6jZnkAfxj49LdC5/8jtxp4PXKxkoOdXOzkd1yvbMwG+dve1XVE2T4a
1j/588EiIi+RTxMZmDMTnxX+KH4Tvw0bBv4xbLDYYsmfdEBmfC+5achBQy6a
/TPX4TPDd3ZqYuw1MRvEboDH/y30byb3IPg0sMLk4CYX9+zIuWvB45LfFxmP
XHntapb9jqs5Fx//Bw32t8GFfkEOM+wRvE/eNTkNGZ98O9gnyBHbIfT/U0Tu
OGJEWT/IOEsDY0CRfYgPJraDnCnkd9iK/Vu2Dw18P/kF4aWcQeSvBmMNHoSY
KrDX/wdkG7x9
          "]], Polygon3DBox[CompressedData["
1:eJwt13ucT3Uex/Efxsz8ZoYh1ymJXHKp5K6hNGFcSpSQmDa3otrIboaKaB+5
7FasWgqVxCKXSh5ySWqRXKttJUKbpajH2hZdbLbd5+dx+uPzOOfz+r4/n8/3
fM/5Xk7dIaNuub9sKpX6iJVnjXLcl0ml1mSlUruAqelU6ovsVKp3RipV23Vi
Zip1RV4qNSQ3lTpQLpW6mKYrbTn+i2KPaG/PPyvpN/zt7DL+tSyD/jv+B+xK
fkeWxs7xB7BGYk6pky/HTnXbY793X6DGan3rwN/AaoqbipcVe4bfh10q9nOx
KXy92Gqsu7gj2A3wk/p+K109uuNYWbpNNBfpdzd5DmJlsI1YFdZZ7H6sk9jH
xVbFumGHsR7YE9hWLEvMUewWbBt/qRo/YN/SXogt4deNcTCmr+v3DvxRugrq
tlV3MjYpxseYTsVOuh8h9+tynuW3wStiFdizUUNbJrZQniFYHzleoGutxmPq
VsOX07XhF+BdtO+Taz4+QN0jeEtxDfl76Q7z57ODYgvx08bna35TNg6rRLeI
7nJ+hrov8AfR3STvPPkn4zeJuRCfQH8V/yF1tvMrs8ViH+Z/xKpqP6kvt2N/
5dcS30Oez7AFtCXYdWrMl/8zfmtj1k2+KfGO1aiHPSdHV3512t78E2IHyDfX
uHQUO1fsPry52KLoGzZI20BWSPeKmqfFLtDeU66VtGmaA/J8ynaI/7c+FeEN
6Aa4vhljo/498r0mz6tshZga8W26notxLp/ER57xWIrdjZVnmWw6v6x8Ld3/
Wo0SNRqJy8MKsTw5W4pdiuVgbbBRdHfSNY73iw3D+qq5RN/P8QtYH2xljLv+
3al/h+TZrPxY/EG8qbq12MXuX2XN6RbSXK69KZuLnZdvovsm8g1yrY+NkWMt
XVOsBHsbu07saDVuZO3EfB7vSB8L5R+uj4f0tXaMFzaUv0/8OnnGxDOLb0LX
RWwrsQewFnRXY3XU6B9znKaNGnfRVMHT/JE0A+R9Wa5ReEftm/B67JC45fgr
7AP3pfJ+6HpK7cHYXuPZUv1/8WexAv61+LNq9aJb4v7PbJf7B8Xudl3GX8r2
uB+L7Y1vhf8i+9T9hOi764/ytZJnq5wd2XL+G/hw7Sv1+Tltffh1PEcjfV3D
2ur7Snl+ph2qPYvN0L+NWD9svefMdp/FusQ7E38rzbK8pJ/R398ag87ybJGv
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
          "]], 
         Polygon3DBox[{{2335, 1366, 1554, 3095, 2218, 2219}, {2328, 1362, 
          1542, 3090, 2207, 2208}, {2503, 1547, 1251, 1252, 1548, 2504}, {
          2327, 1361, 1540, 3088, 2204, 2205}, {3069, 1378, 1286, 1285, 1596, 
          2534}, {2416, 1473, 1293, 1294, 1474, 2417}, {2334, 1365, 1553, 
          3094, 2216, 2217}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0l9oz2EUx/GzH/vNfvZHkkLb7GbsL8oVW3EjRmkuGWoXk5XNJa3kzlJu
SbI7trnCjJnSZnNLDftjjElNsuXG1VJez9Tv6fP+nHOec57n+X0r27pOdOZF
xIj1dE1E4k66D3Ssi9jAb89EXMAV+ODaiLNyf3MRZeoaxJbkhwojzok38VfV
HqOjYqn5KTyFu/Ebe3rlO8Sa9bouNshf5u/iYdyDX9JbabY5r8Wr7LvPB90j
Nic2g4eEDvC/+Ql8HOecZ1HuHf+AFvI78iPe80V4J/6AS3A1nsJV5p12nmlc
jdvwDK6Rn6W1tM76iDfaV4/n8CbcgD/hzXgX/oy7C7yZ2fO4Tr92/b7g3fJf
aV82Yqv6H2oW+Md0C7+idpLP4r1iS/w4X4CX3TG73mz8RGyan5S/hyfoTZpx
/4fi1/Avb34bv1V/iR+094hz9Ig9Un8+nc2cO/gkvkGP0kqxK7gR/0mz9Gm3
pxzXi/2Ub00e98q14DG50jSDVsiPm1PCv6LF6d50zCrCZ9SMYseJZe9x2P5c
Oi8+hLWMAe9Tpo9jxAu1I5YnjedUKi7qMYzz039En1l+8V2gKW/1M4lveD/W
Jvpt2pb5/43/AzXtWh4=
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzjkvw3Ecx/Fv66qjEptJIgxGR4wMpJMIbeJmYSPhcZAocVXrSBxteRg8
CCYmo93S4tXhnc/1+//+v/7NvdxuIiK2sJ2KyLdHzHVF1Pj9jogp+a0zYlY3
kI6o6490d7Z7ZPFhK9AF537tx/YHuSw/0nn7ie6Sr+HPmQM6bB9BzT6BU2eW
5GUEv0gz+l7/rfIVnOlfaYK+0D7bIc3jBz3yjvvP7VnfJumQfpq+0xndoDNN
8gXK3lFBDp+2Im3WF1DlnxqbviSX+BV3tPBFPMtf+LaP40rXbV9FK5+mk/o6
xvhRXOvX6Qba+DWa9J6bxn18it7iHyiJNCY=
       "]], 
      Line3DBox[{2157, 2463, 2987, 3064, 3229, 2156, 3029, 3155, 2313, 3033, 
       2449, 3156, 2314, 2857, 1180, 3157, 3032, 1186, 2464, 1077, 3158, 2929,
        1079, 2465, 3230, 660, 2466, 616, 2699, 3286, 889, 2467, 826, 3316, 
       2831, 891, 2468, 1136, 3359, 3011, 2991, 2992, 3354, 2315, 2158, 2456, 
       3159, 2316, 2984, 1184, 3160, 2930, 1142, 2700, 3074, 3161, 2932, 1081,
        2469, 3231, 665, 2471, 617, 2470, 3232, 666, 2472, 618, 746}], 
      Line3DBox[CompressedData["
1:eJwVzksug3EYhfG3oUIvpqbaYbsLZnUvEqNKLIC4tKi2abECmjA3E5ImDTaB
DRDCAkh0A34dPDnveU7y/77c1k55OxERG2iNRzynI54mIqbko7zJRDT5d72F
NprIZCMa/MD9h6J+op+7v3CGSe5b1vlXmdfXvXnlXpPX8ti2Kcdsq1wfZRS5
I9us7ydtK1wPy+jaDm0l27StrjeGbyGt12xv7trwDVSR4qv8r/sHBf1AP3V/
oIMs9yn3+ReZ05d878K9KC/lnq0iR20L3D3mUeB2bTP+acQ2x92ihLtUxIP8
B5zILa4=
       "]], 
      Line3DBox[{2176, 2390, 2840, 2391, 3321, 2175, 2969, 2392, 2841, 2393, 
       3319, 2177, 2860, 2394, 2842, 3192, 3075, 2178, 2971, 3076, 3349, 2970,
        2395, 3023, 2179, 3057, 3343, 2949, 3056, 2950, 2180, 3164, 2323, 
       2181, 3165, 3065, 3193, 2182, 2490, 2843, 2491, 3322, 2183, 2972, 2396,
        2844, 2397, 3320, 2184, 2861, 2398, 2845, 3194, 3077, 2185, 2974, 
       3078, 3350, 2973, 2399, 3024, 2186, 3061, 3344, 2951, 3060, 2952, 2187,
        3166, 2324, 2188, 3167, 2325, 2189}], 
      Line3DBox[{2203, 2514, 2513, 3243, 2202, 2326, 3168, 2201, 2954, 3046, 
       3367, 3048, 3047, 2200, 3027, 3028, 2850, 3351, 2980, 2979, 2199, 3080,
        3198, 2849, 2978, 2977, 2198, 3087, 3197, 2645, 2494, 2197, 3237, 
       2493, 2644, 2492, 2196, 3239, 2504, 2503, 3240, 2195, 2501, 2500, 3238,
        2194, 2953, 3043, 3366, 3045, 3044, 2193, 3025, 3026, 2848, 3323, 
       2863, 2862, 2192, 3079, 3196, 2847, 2976, 2975, 2191, 3089, 3195, 2846,
        2497, 2190, 3236, 2489, 2643, 2488, 2496}], Line3DBox[CompressedData["

1:eJwVzjtOQlEUBdBjh0qJQURAPsIcGAMVA0BAvo0ORBM/vYaGGGND4hBojQEk
QSejrlfs7H3Xu7l55f51+2ovIlrynIr4PYj4k46s0hHZ/YgnvtQXbM2O7Rn7
0Xdsx3J2187bPbm3T1hPF5z7cn4YcSN5XtMZdpl8c+eUzb155DxInG10gb/w
Dz1gX6xov7JPPWRbVrLf2Eo/sG92Zo/skj2UR7vMxkk7j6ThP26lwuu6ysYy
cafKFt7MJWeZsqY7Nf6u/wEqsSUm
       "]], 
      Line3DBox[{2225, 2516, 2653, 2515, 3244, 2223, 2529, 3207, 3106, 2222, 
       2528, 3206, 3104, 2221, 2527, 2702, 3309, 2791, 2790, 2220, 3096, 3205,
        2652, 2511, 2218, 3095, 3204, 2651, 2509, 2216, 3094, 3203, 2650, 
       2507, 2214, 3241, 2506, 2649, 2505, 3242, 2212, 2502, 2648, 3279, 3091,
        2211, 2523, 3202, 3100, 2210, 2522, 2851, 3326, 2873, 2872, 2209, 
       3098, 3201, 2701, 2520, 2207, 3090, 3200, 2647, 2498, 2204, 3088, 3199,
        2646, 2495, 2518}], 
      Line3DBox[{2227, 2517, 3066, 3245, 2226, 2519, 2707, 3289, 2341, 2666, 
       2531, 2708, 3290, 2342, 2667, 3109, 3177, 2532, 2343, 2668, 3110, 3178,
        2669, 2344, 2875, 3102, 3179, 2670, 2345, 2228, 3247, 2524, 2671, 
       3067, 3246, 2229, 2525, 3180, 2346, 2230, 2526, 2709, 3291, 2347, 2672,
        2535, 2710, 3292, 2348, 2673, 3112, 3181, 2536, 2349, 2674, 3113, 
       3182, 2538, 2350, 2537, 3108, 3183, 2675, 2351, 2231, 3248, 2530, 2676,
        2352, 2540}], 
      Line3DBox[{2232, 2542, 3068, 3253, 2543, 2400, 2545, 1376, 2544, 2401, 
       2547, 3254, 2353, 2546, 3081, 3184, 2549, 2354, 2548, 3111, 3185, 2677,
        2355, 2233, 3249, 2533, 2678, 2356, 2234, 3251, 2534, 3069, 3250, 
       2235, 3070, 3208, 2236, 2552, 2554, 3256, 2357, 2553, 2402, 2556, 3257,
        2358, 2555, 3082, 3186, 2558, 2359, 2557, 3083, 3187, 2560, 2360, 
       2559, 3258, 2539, 2679, 2361, 2237, 3252, 2541, 2362, 2562}], 
      Line3DBox[CompressedData["
1:eJwVzskuQ3EUx/FzQ0qva0EIYeUZ2GldfYU+QmvcsDFF+gIeQC2ML6A2Egvi
mt6DpSGxrGV9uvjmN5zzH+Ya2/WtJCLqeByOaJYjBtOI3kjEcRYxwF9jRT9E
53W/+ORPUUIHX1i1k9J38zP6jXOUUXHfLTKzHRzoFu1n9EHu8of9PVr4x53u
j6/iSd6VA0d4ltf04/YTuY0xvur+df0kv6A7wQU/gRtsmE3TD/0l/cEVprDk
bI5Rsz3M9jv7M7SQN/kWn9MX79/rEnlZfpX35Rr/xv8DQ04plA==
       "]], 
      Line3DBox[CompressedData["
1:eJwVzkkuA2AYxvG3C0mpKWkikSCkdqzZcgWb7i2rg6Koxj1wClPtiCHmsb0B
a7T0An4W/zzTmy/fxGJpoZiIiCyayYhad8QW9nojGvJ0T8QUruQ3eYzfxijO
da+6qvsReZPu6l50iVREh9/QDdvW6bzuhH+21+kPPtxUbEP8Gm3TYzy5mbW1
0ZJXbWm6Qh9tl/oyv4wd/kE3ac/gQr6XB/kaBnCmu9P181X04VR3qwv/+uVL
3krpi3ROd8Tf2A/pN97dFGxJPk+/6AGu3cz8/xOf8pKti+boPh3HH6JfMu8=

       "]], Line3DBox[CompressedData["
1:eJwVzEcuxGEYB+BXi+4OlhYyQyRKgomFRAnJOIHBljMoW+U2WIg2o4zuBNoM
oywtZsXzXzx52+/7OnMr2eWaiJjnpynioSWisTXiUR3lnip3VNoivmVu9A0y
t+oI10yar9QPmS+ZS32RYf7sZt1n+HTbU/fZpatdPtlTceuR3WEi+cuc0m+z
YR7i3a7ZmwX5JRZZt59TD8hSlil6U6fPUc+gzAW/nCf/uJfkCvpa9zN1gDzj
5lO1LPMmc6w/oZ+S3ZF6yKvblOw0feaCWwcv9ml1izH7Z3O3fpM1cy9Pdnlz
Wr9Kigz/+Bg9Pw==
       "]], Line3DBox[CompressedData["
1:eJwV0DkyhFEUxfEr0q3bChDYgZKRoIxlbMoKBLSpexWGgIDFCFBIlSExz1Nm
nqdO/AT/Oveec9736nuVA/m+XFFEZFFIRHSXREyjC9vpiF/eeCoijxym+P10
DRWlEQ06Pzop+xjS6NSp5W+hYL7Bt84VLZFf0w7cyS/pIu+Cfumc0XPMy9rp
KU7wKevVK3JnvayNN5uM+OBX2+eQ4b3bN8yt5km0YNP+xh92fhQjmOCv0FWU
+2arzqvOoD2LITTr1PDX/9/BfIwXnUOalB/RJtzKD/7fjLdPn3X2aMJeVRzR
aN7Fgn2HPskz5nBvnbMNvBn/8shvsZfxl+VLeMA9enT+AIm2QWs=
       "]], 
      Line3DBox[CompressedData["
1:eJwVzr0ug2EYBuDH5q+0X0tiNDQxGIuBsbRNxGASNgfQNjEYOjgEpNjZ+qOi
cQh+6wwkEovBAejWxGW48tzv/bzfl3fxsLZbHYuIPR4mIu6nIvqssco8Ff1w
OmJOfmfACWX9j7mUitixb8uJ7sjM6z7MjPOXeWBfpD4ekdbl7K/0lzzzwo19
hf7/O1jRZdnQXZCT7/QlvicjOvTkBf/q2d3SYEv3634iv/HKMZv6xN1TeVau
m8vOQ3PG+dPc9902Ne9M6bL25/ozHnni2r5M175DQZdmXdckI7f0Rbpy2ztH
/AGS9S5Y
       "]], Line3DBox[CompressedData["
1:eJwV0EkuRHEUxeFroopiZi4loShUIkIkjArB1AIEC2ADlL4tO2AbojfEXN8P
2IAmGPre4Jdzzzk3N//3spPTo1MVETGGjuqIPfRnImaqIurNs3SXr0tFXKYj
9mVFviTPmudoqjZiXHalb5CVsFkTkce1rEDL6JTf8GfmLnM3bvltft6dRn6B
Dro1gDvdm+5A/olFXRNdol/0EOf6e3tH5m8s63J0hf7QD30PHuwc80Puruqa
zWs07e0Tskd9S/I92LLfiidZW/INyfvkeTzLLvhecx9e+B1+3a12foOOuDeM
V9277kT+m/wTXYGW6R89RaW9fzQLNiY=
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzj0vQ3EUx/Ej0TLoVoOwWMpaSd+Bh6UNEXeRSmgiqUQwSCwST0OjnYiZ
iQmjxmAUE4mmCa/AYBSbBJ87fPM953fuOf87Wtuc3+iJiATt3ohMf8RhJiLL
Rzw3EPGdjfhQ7/ZFfKGpTsxbqc0X1NOYxBQWZWWu4NX3uVxElzv4Q8gHZef2
q/oLXuId/Ni91K+qr7jODfzKh/3HLUawou9wEfeYwJqsxNf2KnzDW7JZddON
O/2Qt9u8LT+WPZkt40G/nt5F3ryl31Pv4wCP+mf5ifqFz+yepu/zp9mbbNzt
d57hMRTwD+dCLf8=
       "]], Line3DBox[CompressedData["
1:eJwVz71OAlEUReFj4l+hUllqgoWJYKVGWp7ADBa0xMFGCg0PoAXGTjvfg9YA
UhkDDdpKraCJ2ptY8E2xss7eZ+bOnXx6cXw+FxEJHuYjLpcipgsRo8WIT76S
/1civsx/ulvOLUfccVW/Zu57pocz8+5qxKN55KwTuSCnXMcp3u1yugl/INFV
sK37ln/xk+H9lvM3fLONTaRyw27f3MEBGrouH+IIJTR1T5yghp5c4UF2Bvpy
ndf9Q4uf5Wu+QT67l/xiVza/8hbf2w31e+Y3XdGdx1zL/hE7mAG69i2d
       "]], 
      Line3DBox[{1209, 1514, 1956, 2056, 2055, 3352, 2057, 1786, 1787, 1526, 
       1789, 3230, 1788, 2064, 2042, 2043, 2041, 3346, 1428, 1991, 1989, 3338,
        1990, 1239, 1348, 3164, 1250, 1543, 3238, 1544, 1706, 3279, 1545, 
       1897, 1546, 3171, 1712, 1567, 1928, 1568, 3179, 1724, 1592, 3249, 1593,
        1733, 1618, 3255, 1619, 1292, 1646, 3265, 1647, 1648, 1482, 3227, 
       1668, 1935, 1934, 1936, 1827, 3302, 1828, 1683, 1830, 1829, 2097, 3356,
        2095, 2096, 1977, 1686, 1322}], 
      Line3DBox[{1210, 2035, 2099, 3358, 2037, 2038, 2039, 2040, 1743, 1924, 
       3286, 1923, 1925, 1904, 1905, 1873, 3317, 1429, 1994, 1992, 3339, 2122,
        1993, 1240, 1349, 3165, 1251, 1547, 3240, 1549, 1707, 1550, 3242, 
       1552, 3172, 1713, 1569, 3247, 1571, 1725, 1594, 3251, 1596, 1285, 1383,
        3189, 1293, 1473, 3224, 2074, 2076, 2075, 2077, 1813, 3299, 1814, 
       1670, 1818, 1817, 1854, 1831, 3303, 1832, 1685, 1942, 1941, 1739, 1688,
        3276, 1978, 1690, 1323}], Line3DBox[CompressedData["
1:eJwVzr8rxHEcx/H3ucMNd0ZGnSuyG0wUO3XL3RHDSSandJ1isDFQrEoUCxNl
POVrYLjtyELnH5CyWT0Mz56v9+vzs1DbKNVTEVFGkomo90fs9Ubs8j6XchG/
fRE/cj4bMYsjeYGPuWK9Kj/a/4AEi7o53TzezQP5iC5/IKXrwaDuwvma7pJX
OK0f0l+Zt83X3PH2pPztzlH5DmNYNb/yFBJMY103wzfOlfmWN///J+fc0TIf
8j039QfymrUn84m5IT/LbX4zN3kLw/61hHF/W+aOPSP8wkU+tWfCXV/OdHXn
8idnrJ3JO/gDhSAvLw==
       "]], Line3DBox[CompressedData["
1:eJwNzjsvRFEYheElcYtLotVRCBOXTk+iUUlGM6IRiWMkMgr/QVyioNH5D0Tr
MigoJJLR07okjEqFp3jzrm99Z++zB5c3yrWWJHOotyZdncl2W9LNO/zTnnz0
JE35Vz7gRz7kBf1tR3KNWd8P9SY3csM9K+ZRc8GrqOLVrk/3zm8o6+YxrPs0
N/GFb+e33D3iP2cooTCv203JdUyjppvhE2+p8Clv6hblc7ngS/OFfC9XcWVe
437dLt+Z93gfR+7/MzfsBrzriUu6Y7sH/aT8rJuwe+ElHscY/gF6KS8k
       "]], 
      Line3DBox[{1218, 1522, 1868, 1921, 1920, 3325, 1922, 1791, 1792, 1528, 
       1794, 3231, 1793, 1530, 2069, 2070, 2068, 3368, 2140, 2139, 1997, 1995,
        3340, 1996, 1245, 1352, 3166, 1256, 1360, 3168, 1267, 3207, 1578, 
       1899, 1579, 3175, 1717, 1580, 1603, 1581, 3183, 1730, 1605, 1626, 3258,
        1606, 1734, 1628, 3259, 1629, 1296, 1656, 3267, 1657, 1658, 1484, 
       3228, 1676, 1938, 1937, 1939, 1834, 3304, 1835, 1693, 1837, 1836, 2098,
        3357, 1952, 1953, 1702, 1696, 1328}], 
      Line3DBox[{1219, 1523, 1957, 3330, 1524, 2065, 2066, 2067, 1529, 1796, 
       3232, 1795, 1926, 1906, 1907, 1876, 3318, 1430, 1877, 1534, 3235, 2123,
        1535, 1246, 1353, 3167, 1257, 1556, 3243, 1557, 1708, 1558, 3244, 
       1559, 3176, 1718, 1582, 3248, 1583, 1731, 1607, 3252, 1608, 1290, 1386,
        3191, 1297, 1479, 3226, 1480, 1659, 1821, 3300, 1822, 1678, 1824, 
       1823, 1855, 1838, 3305, 1839, 1695, 1945, 1944, 1740, 1697, 3278, 1979,
        1698, 1703}], 
      Line3DBox[{1319, 1405, 1769, 1699, 2085, 2084, 3355, 1313, 1399, 3268, 
       1661, 1306, 1392, 1933, 1660, 1812, 1811, 1298, 1387, 1760, 1642, 3311,
        1806, 1805, 1291, 1382, 3221, 1630, 1459, 1282, 1375, 3253, 1610, 
       1609, 1275, 1368, 3245, 1560, 1268, 3280, 1361, 1540, 3199, 1258, 1354,
        3236, 1536, 1247, 1347, 1908, 3321, 1435, 1236, 1344, 1998, 1878, 
       3331, 1961, 1960, 1227, 1339, 1872, 3219, 1871, 1427, 1220, 1332, 3229,
        1525, 1205, 3151, 1329, 1741, 1505, 1704}], Line3DBox[CompressedData["

1:eJwNzz9LQgEUhvET/isonCMQsqUvUBY0BC2Bm4laU/QBipYQBPELNAfl0upU
ETU2NQhBNQi1eW1LaAiiIYd+w8N53+ece7l38eCocjgVEVUsZyLG2YhPXOQi
Bvq5GXMRRbmJwnRE2/50NmJBP8aVm5ybvnwt32DkJsGGnLh9sMvLW3jn3/DF
r+u3djNmytxH2a5nTtJu3ezK99w8frhXrsJl9Y485sr6iXdkuBY35BJ9iD38
cl03A/5Ff0Ydad99xvfkJ7s1/1fCpftV88/ukd/RV+RtbhMN3PFLnq/LNXzY
d/DtG0bmP4W2MMo=
       "]], Line3DBox[CompressedData["
1:eJwVzS1IQ3EYhfFXmE5E05pYFteWFkQEYWVqcksuKTKDHwOTYWXVoMYVi9pE
28Rospmmd6AM8attxYFJwZ/h4fyfc+7Lza7XV3ZHIqKM3GjEYCyij4V0RMLz
cgmLKOHYdoTDyYgZ+x52+AHPeG9ji3/xW++imys86150T3KWt20TMiWv9Wty
2XYh0/rflG/1q/xGn8e3rqsr6y75NJq8r990U8MGzu0N/av+nb+hihP9vj7R
J/wRHWSnIlq2+fGIe1uGz/Ef2x2vuCnwOv+Up/Ls/97/e7YHWeBN29D7Q/4B
aLIyBw==
       "]], 
      Line3DBox[{1324, 1406, 3275, 1689, 1315, 1401, 1687, 1864, 3274, 1863, 
       1309, 1395, 1767, 1671, 1816, 3271, 1815, 1302, 1389, 1763, 1649, 3266,
        1474, 1294, 1384, 3209, 1286, 1378, 3250, 1595, 1278, 1371, 3246, 
       1570, 1271, 3282, 1364, 3241, 1551, 1262, 1356, 3239, 1548, 1252, 1350,
        3193, 1241, 1345, 2045, 3360, 2109, 2108, 1231, 1341, 3353, 2071, 
       1532, 1798, 1797, 1223, 1335, 3316, 1870, 1869, 1422, 1212, 1330, 3345,
        2036, 1211}], Line3DBox[CompressedData["
1:eJwVzrErxHEcxvHn5Bx14iYDkbrVhDIZLKYbnJTBhEVxV2KxGCy3KvkLcImZ
W+xGZVBmShm4iSy8DO8+n+f9fPr9vpPrzXqjkKSGqWJyiPO+5AzH5aQqH+Cm
lHQwMJjcmuPcHt7ctdB1O8aPYoRv4IXfxaeuwg9jiN/CKbep69hL2ECL++1N
ts01uar/lh/lFbkiH9k/uNr/O+093Ku8KO/7/g9X4J65Be6JW0XRu6/NKzzo
5nXL9hP3dbONC9zr5nQT7mf7kxl8yXf8kttp+467d/PSf/4AoWcouA==
       "]], 
      Line3DBox[CompressedData["
1:eJwVzj0ohXEYhvH7hOMdWEyySDmr/ZCBsipCGXwkVialZDuLyShFyW5CsZzF
JJMy0GFRzuRrUQzK7wxXz31fz9P/fQdWNqbXS0mmMNSRfJaTDxx1Jg390Cx1
JxV5G7t2e11Jv7yJM/vC/lY+ly/QdPOKUfnF7bVdjzyBZ/4J+/yaeWVX4FJf
NWe5GURucAtmXa/gtz255+Za7+k1+Yub1Le83cbtcE1uWV/CIn6449Z7/KP+
gHmU/fcBfyrf2Y0UyTBO3FfNP7sbvs9dVe7l6vqgPi6P4Z2v4du338x/ZzEu
uw==
       "]], Line3DBox[CompressedData["
1:eJwVzyFIQ2EUhuEzmLrhTBqM24LVYBhMZGCwigbXBAWrC6LgGGtrC7KoaWlN
wabFYjIanOFyZ5tJHYLBID4LH99533N//vuXDhu7x5mI2JHVmYjJbMSXbM5F
JLhXiFgzr5hbUspFXNlf8EV8Jqe4i5fNDTnB3/jRvOXsjYy4Ny7V6/jebl7n
9R1/pPfsrnWOz+iE39cP/Ib8ZiNeuTp3ixelgyf8Nnfu3EC3uTH3jsdyIH2+
ySf8CKfT90l5IeLSruZdz3ZLuIb/7J5w3ZkqLth/Tv+FG7o35V90xXcd/sf8
of8B124wsQ==
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
neHH0yrg1/1jr/dO4WOsiv3ckVOboIPsxY2g7cWlzWMiNY9Jy8eRysdZZG/z
HLK3eRfZ20zjlwLFL6XxUeH8/807BYp3St/bbEr2NtPuO1D3PXnBjaDRd1hw
5FpbzoAMIb4eexnfHKqk+x+g/M+Qqawcu0vVUKwV62N3iY/FS8Nmv5Su/8/+
ZDWyP3kvsYcSuwax0/hFSPGLPhK7IrE/I3YaPwooftSucVXcTIcGvMA9Faa/
URI/tuya/v7zf3jySPHkNevsRrg61sL7mMD10zzqsXlJq11NIw/W095nMHmf
NH4pWBN+KW0uGKi5YFrdBqi6jYi2V/kLOT9BxN8mk/zRi/hbmv9Eyn/eJfuT
bcj+5J9kf7I/zf6b2Gm/D9TvU/uTHcn+ZDeyP3n3ubT1e0qLoVMjPCdc4j+L
L+y2zB5RBg6bnY+tvFaMM5cMe6d0Qox//i71Lq1k0vn8QPH5afx/oPj/NB4a
UDy0ICXL33EZdXhKb7bahQdtIF6weaOCbhOdn48UP5/G50eKz0/jsyHFZ9tr
PE9jvE4drPkSZlyn3oau3QmM22PYkDTGO+7mbhb6P3YMvX1WCHHTbR7EtlRB
3KC8l0M7SzFUo+nn3hAx7KvzZTIdGDBFc6BUS6vkvhsvCw1zF2Po71cvfA3L
4OPqrvZeHSY6PrudO8xbBG2c/MQ9eSwITCzbu8a+DJOu51/8eFcIMpM9HgXG
1kDc7SkTvBcw4cnlD9E34kQ45oNju0ZhOdyZFN7+16QCfZ95DN3nJYT25IaH
up8r4fkjo8EH1SogccHht242QnQ00ZIbl1wFMgl9OuMyVf/WGa8keuJziJ74
E6InTultzaXpbXVuXr6lhFuNAet3Gm9+wIeyZpmrazbUQevbrsS6cTXo8TJn
0ZlMPqi/rjJedq0WUml72t3InvadxN9mEX87n/hbV6JLzia65KZEl7yd6I/n
Ef3xhUR/nNLnOkf0uS4Sfa4nrpMG8nyqQVxuUDl5HR8Hztb5VvO6HjJ6VteK
JPdj/BbboN1lfPx5Tw0+LqsFGdp++ANkP3yS6p49cx5XwmHnDP05j9vwgsZe
3RxVDlwKL/vOWMUChQljTq51bcShtsHWm5APA0ez92uG1sFBjxKRQSsXdzo/
MTe60QyZV9UCYlw8YNIWvsAr2ADCXd4pZ0re/6LTk1kTU8rRK1g3XbCpEfSj
Xpab8vgwddlwp3iXOkyvy13ZsLEFpEZbTho7oRkaT1hv70xvQE7Ig4ub0lpB
/pfJXpUTTXDyzuTUl2MbUdlzWJB6m8Q+NbLCVk4SB7W73AJS63Fm8qwWw48t
sD7qedjWcRy4a/DjYWpeFR6MsbANPsCB5F/NJ8KGtsFH5d6IuroMvNWkdDTf
Kh9OipKPrRraAVsXTkqVriwGjR+ipETfSpwmHDRMM00Ex7f0jB5bVwMm4+Yk
Sk/k4s1TFcPSBFwQTDJYsnB2A7RPMBAbH2hFOYtQmROSe8RZG/5irWEjWERX
HontbsWeVUXTecxGSZy/nKJwsgEiHlcllVm34vzxB5KqdNnQeiLVhrO8EWJD
ffTe7mhAmXW/dpw43AYra8vdhQZlsPp76pkvLxk4c/Hlrzp2Yrj39orKwYz3
qOvomRCxMB2umdwO+hPUATHc/TbqjjW4oTTI5WRIDZi7ReiKOvgwaXJO+yB9
Nh4ZZuuopciG4vw1+uIuLvi8KJbyPsbBdfVBiY16HIhp/n2VVcGB+uzlRt+3
cfDRhoph+t/Y8CL0xuaZWs3g18ZpupbWhBW5ftdtLJtAaLA1oquuBa4dFmyq
+VmJKcfqg/x9K6Ej6PPfBDMh8ANmfB677RGyQ9euNegIgMvNzJnVvzpgxP4T
e/y8WSDtMtbleDMLA4u7xoUNE8H1y6XYZt4E7uPVT/cua8K3MooWYdAKR9ZP
WXJ5JgfCOL+tCjrZOO90xbvaxc1w2qL6kbILB948yHWx28zBDlX7+NlPOJLf
zfe/NqoZPBfzTmlzynB8kmGNdH0bRLvYnYkNoXjar1MVT9i/UnKV5NPT3Jce
uNQK0v/PHpeqeqFmcLTk3N3mT9rWNbwW5PFL6IGgAvyw81JF0RwRuI4Rl6me
aSC/E56qqHRhm+p4Cd6/Hn/+Q1gCeNwe9O7k76c4XLMwNI/TAUkDJp3Su1qO
Y2qlNmizssH36MXbWbVi+PRRLSUtmo0nZXX22MQyQDhLa+XcKXz4pb3kVUUi
Fy03N+V9kuQPIJ3WVqDbCm+53xka3i3Y95yv5+/+yjcziGqDoIdOHis3tWDC
S02/ibosqDGvD1ff1/LP/mHq/6fmji0PPgjvVeFii6afcRmLCS07ZX85NbRC
Evl98n7m7yG//2dv9tuVTY1Ya/ypfY9DCQRH5i05/FAAQ8oHvI+9wib/f+R8
BbHxcvUcAYw8OP3L4p4C5ETnyzfMToGDA6Vs6rQ7wHPZhxEsUT7s2v/DfVFs
Crpc3j0kbFIHdH/3GR/9phF8LpksOlZSgm8fr9SLCBXAhR5WTYYiF879aJ+h
1sXEe9oa717WtEIs7TsqkO8YtGDjhtb1LWBnkJl5bwYLB1pbj4+wawEZch7c
+s4DTCDnIfxSh/6OcS3w4bqqUcffcpDOPLCrJKTln/e/vO/9ozl5/9R7jup7
z1hL3vNa8j7r+94nUu/zInn+433PD/fJ82sG2cXe/80G1uWjgewqNtTbxuxd
fK35n3vq3HdPkUHu6TVyTy377inG0u7pg757itQ99Sf3lNl3T5G6p8fIPXrS
d49gAblHcsSfH+jz57CL+HMO8cNNfX4YhxI/fJr4YaU+P4wKxA+7Ej88o88P
I+WHhcRPivr8JMgTP8klfnJln5+E38RPziV+8nmfnwTKT0rn9cV36fb/F9+B
iu/lJL6b9MV3DCfxvfXfepqYQOL7FxLfb/fFd2TR4rt7X3xHDRLfkcT3Y0TP
y5XEd1saf3sOie9+JL5/64vvaEziezOJ7yl98R0Wk/g+hcT3M33xHS6T+P6U
xHdhX3wHORLfM0l8H9cX3+EXie+eo6TrlkRXw7vLLrsD5vNhmtyk4ABGPaSQ
+H6kL76DO4nvzfGWHZFKTJwyw8vp4+c2fFr+JMS2mwPhd+7rtoazkGHJv24p
L0TDuDuLSzxr/sFj1/vwGFJ4rHfOgkvXdSvQIVP7i/RWIc7xuxuUz6iCzG0B
vuobWLhPuli30V+AiXIBkbnBdWDM2T905xEGSu12h4jQFvx5bKeHEa8FWKUh
AwznuoD+ASvt3K+PYUXuleHsng4ou+XufaquFAZurzmYZ9UCBU49OQutWmHf
ST/AySx4mzDqmv1pAaT5VXzHkfUQ8W98CPsJPlSbI2cjY1YBljccmX8vCuH9
HFfB6J5KyDK78SA5jQX2Bll/o7SFoCmX5MHXr4F3LwNu7T3JhIElJzsum/Bg
tu4bgb83B3L+jW+RR/Bt4xvv/ceWM7H8Q/Few1oRDlybsrpWkhfELXIcU/6l
DK19F/7w2CbC9Mwj6ZnVFbDY4GyS2SYGTphutHRLFR+H5TfNHpjVBDLNMv4a
Bun4YV5t9LAxLAxqLHHd0i2GSU8t19Q9zIZzFU92Svc2gsvdlIBGSZx9nuYw
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
LurYc4Gt9LzICT5HyD1HsfS8VL/897mAJHouCineRvHPFH9Az4Uvey5Ahp4L
7jnyo7gUxbWE/IWGEQ+Ni0+l+GCKa2R/29n8OxckYgZOaP5dC4omuMt49t/j
KpQ/A1n+xB2UPxVtzzUf00jDWNujJmsuVqFXiPoKvmz3eZflopdxLRN/+B1p
tg+qQ+ffrs67pUqh6PsQDUOdLFS7ZTbfz56HLTLOMx8mF8IzysOHWR5GScrD
i24s0Q3JyMDKeKkI96ha9D+4Jv7WizKYF9vTPt44AcvynhZprCtFi1/6PJlQ
Huy+0r7KfM9HFHtceGvGqFycszrOfN2chu76muVtBZa3wZTy9sAvzR1bWxKg
MHTJzHsVpaDcbJqWup4Hh90XlznszoAqi4b5SxbVgtroSLFlFuUw9ZDBQq+L
mVAyN3aKxuM66Do2vihPuRSiT6wsix2VBVO/vAlbs5wHL5Z12fYIKwKjq2Lv
z6Rmwkc3vcBFXXWwjGdzfGprMShOHatqLZEGezO+vFLsxh1tpfYWkabVYOZR
8uvWwGQYPtP7mHtkOXz6Pn1Xr9RaiKfzbgk777DzKjvvTgued3CXzrvYc15r
2itTcah2+t7ISw3QZ3/Tks1tabCC6l8eq39hKtW/Q6n+DWH1L7yi+jdqt/Hp
QNUMbMUDhwuDus/ZxQNle0ZlQpq7noXMGi+UVlylwY+PAKmveoN3vm6CTfId
l1VfJUKh83SzIStqcVuwqNt9zwp4btb3/mLTVLiy5kvypdD/8XjdpZW+Z8Oa
4vpkg9pUeHt+wqTwaw34bpXX9/4JabCa6t92Vv+iHtW/Z6j+5bH6F4Op/tVy
MhD5OCsD1PJVBkyJ4+PQqQX35NZkglwmq4s3Hfq3LgauLo4xaq0I0Y6AhrJ9
GpVZ+QjqQaDanT/1rsofdrOPwYSE05vNxSrASqTDX21yHeSNrjbwEEtFE2uH
79ek+DAsLFTl0Lp8iCF/Hjvy9Q0nfx6hOho0qY7W26Q6ePvFdDz3dN8ch9h6
UFl/vWteVh7Mpb6NAuvbwBDq2+SXs77NE9a3gX+ob9O2907zP09dweet9ZGn
+e9w+qMVy7RSm2DJjd3Sn2akgH91cnDbzRoUFXEdnjelEnQW6G/b8DAdgr1t
38/h1eN6g2tB1yfkwQrqt+Syfgt6Ur/Fl/ot+1m/BUKo3/JNswCNv78GzSXL
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
+9pBPKtkxrNCWeJZfSB+HZ/x68CA+HVC/jnQm/xzNm9TufJ7XjY0blyVcjy6
Hidr3PRpfJsN7wV9meA0+TKJkM9hGfkcHiCfw02lN+1i9bLxikrvxJaEeoCt
RpqLb2f/FZ9UC92vV3S/VAT5D9iD+A9/wy2cf6MV3d/zdH85Pkkc45OAI/FJ
XksO61CdW4QzYtqDu//CRd5y1USTWgiiuDbFbSh+hPjYUoyPjb7Exw4K+/bt
jkkePBgmEdz9F612SpT+tuRBGMU9KW5J8ZpRr0Z+M8+Ci1+Nmis/87A80Hea
84MCSM3SrauUzABH8QPDc5z4kC3mNNEtKOs/8RyKKwyp6mXfmIpNY0YutnzY
gL+/h6xZvC4NTr5cFlLPT8WbuYbTQu834OdFGjyP/WkwnXgs0ozHAlbEY5ku
yG/5nx7n37g78WGA8WHgLvFhDvrEhbwuKsTstd4+I72rYPxz3m6Hh+Wwg3gv
AYz3gklCvF8unkxxjj8zkPFnsJD4M1FXa1tDLAvgZ9k/SYEelTgrZ6qKwuxK
uFwn5WGoko3f84a2m3nXQ2uIqtTFDTnC/EPcSPxDIf4qrCf+6s3mfdPWfi3G
vSlO8iLd+SfQWLrwzKLS7vO7veByNz7zuvXdefbUDJg0eqWoxsUa+Ea6pDVM
l4RlpEu6Iqgjg3jSkT0i3VMp0z3hZdI9aY29OveITBm+vO0YEWRdik/NCv37
n64CY9Lvn2f6fbhD+v1JPc/xbb8W4TMltxJeeRXuL88beaiuDHobMD2aKtOj
oSfp0UJfbrrS0CcNkoef+WfdtjosvbzBysSpDO52bMqaV56AUXYmevo/M2Ff
Rv9by043wLpbodJfWnNRxcjwy7uQcnged6IjPKIaxr2Pe/lQMxTanPt7XjgW
jd7Svfs+PtYEwwJvbrC4nwW73s9XmapRilZz4gyPGtVBxEXmB1Lc718/EOD8
QCoUmF+HAvPrgL3k17H3+tDRFQ4J2NsiY7Xq93g8f3hBroh7I9z8MOOa541A
ODFIzmWrfgC8i5qjI5bRBLdiXpzxup8Hbb/u9h9smAdL40sr9x7jwXr6/krs
+6MPfX/ue+5k3xOs6XsO1xuwwu5uOga5yKFMdz7xzj+5oyQsDxTJb+Q18xuB
H+Q30kr7wY/tB+T2g9jxl+nGstmgkNClkyiWhbZpax17K/BhFvnGDGO+Mcj5
xvwYevn8wDnlmN0RYjyvRzpMn7PzU1xgLchQ/7nXv7joxZ/+s4D/5Pn/89Xx
I3+YucwfBjh/GD3yh7Fk/jBwlPxhigT9YWA++cP8zddxNPnbiDN/G+T8bVYJ
8DAv6KoTv/FtieiR6p45uP7J+2GPIRY6VT+PddnYAAoC/Ewv3YXEk/xF65DK
1gG5dZAUuN5MdwldP0xOpZ9ybgqoRZbXXpf9gLGZ8ocLPzbCBSH/Io5v+eDU
m+gd90u764FLfRPXp+ISnxFPVUfywF7IB0mS+vZudH0dux6467ULWq8bT78H
gb4jbetO34I9206YyXbv5/f0e1ex34vc770RfvDKQJMilM+bfnySShEm2e10
19hbC7vsFEHiejR2jMs5XXYzGN+L3nw637wJxtHvUmK/C2Lodw0j36pQ5luF
i8i3ivOhes18qOAe+VAVxBypUFfNhlqPd36DX9VDovvdHAu1HGF/LeT8tXrf
jNoXoJWN9w4ah3e9q8fFmyu0a79kg4ygvxaIk78W58dVyvy48Af5cU0T9N0C
zndLyH8MOP+xdT+X93Nu+Qh754jGDhycBM3LWwzSoxphlYdV8bVu3DN8wHn9
c/m5WOnWv+TzQj5sp/f/nqf3to+k9//aJLH5iE2zIO/oFs1HWoV4RG/pvas9
nrP3U/8ewN67OpbewxhK7ymeQO9h3ET/9zS9d3gM/d+n9B5YF3oP7HZ6D+xH
+nwJ9vn4jT5/PH1+GL3ncSx9/vPf9bW/DidjasutOsfnPBgS8bIYm0ugWees
nPz2VEzsL6aS+JCP0Z1BXxytc0CrY3LB8YepYGw++dXD/g1w0rdp0PbOTPCi
z/nMPgcV6HPcw9n6jKkQnB9dovVppPnRDFqfPMH9g3G0f/QvaXw1b07prhtm
da7/VY/Lezz5dbobN54Xel/GMXpfxhK6/jm7HjbQ9UK+FtBMvhZq5BdRyvwi
sIP8Inb85b0JQuuAVrQOIoL7GRbRfv4quJ4QT+t5WDG5R5FnFnh+6fjkL1aP
12xWvNG5mf9XH79S8nMYQ34OfUgf8TefvVTSKUgynQLOIp3C3/zu9qvnBkaP
z8Cr42+G+jzjw6JdjUd4w7L+4HbSxcA6wu16yh2dEeYp+MGi37gzx2pAe7Sb
b8iqSjCEQRfm6mbAzZxZBu8T+ahvrVd8Ubu7jqJ+rDL1Y19SP/bQyGfindmp
MHvL7furB9Shs5v5p5Gi5WBAuP0y4fa5hNuFcbgI4fBpSq3Zy0eXoNpKj1r5
b9VQEVertf9nCfySO5c2YUAJPjtw58rb4u7z6aPl4sWjS2HIfPFVmFQMiph/
2+t9NSa3VSi/Mi2FacPTO8O68fsixYGlB9qqMUvH1v95XAlkkN+dBPndPSO/
O2UhXm4d8WwF35/rpcu9PzfAYrfO6rjyP/5y2+1WbjatrQP/Lc+UpT783zm7
/GBIiPfpGtggxOPlPv8ZvW+XO3di6H27Lq9Nr/7vPUKcv5zc74xhqVO6663+
kbM/NXK+c6/CV2T3nTBpei2k0DzamnTHujSPvnNX7XrqqgJc888x8xdKiWjv
M78scCwfdH48Hqb3uhyrPMznf7iYjpZBrdd2L6z9j1/cFsIDEmcZz/lbsaDu
OEEtUmSyfhZ8l5ZwDlWOAe34+AmhQQ2wtrHt+91ZZWCzY+az45JpsNGi17fT
d+rg9w82f99NOtyVNH8fOefXe1WjYpyiOVHEaWkxzistApkPNfCC5u9XSN9q
TPN31QVmr3r3KoDd3r6VMd/z4b7eAoOXr+rAkfqNZsTPF6d+Y5bXUNsvNcUo
ra/lNTyoGlPqLZ1ndu+TFdRX3EQ6xBXUV4y7LzleXaIEpvqEzbbKqYbsdv8J
Od35xIlw71vCvcaEe0+Tf/I08rFfSf7J38IZ7k0m3OtLuFea8J4S4T0bwntT
x050Ujr2HDSVFl7NO+COoi/ftT//2gQahCc/EJ78Qnjy3rqID7OTY1G5sNzE
JDAa1pdJiq3q1wS/CWf6E85UJJyZ7913bqRfMRgMvvlatzIJnfUj3jvJ1sPw
3H/4k1M+w/EUf1/7yWH4+Kwdz6CzEVJ6qprdCMnHgNIj835YJ8C0MNV5Zqv5
f/bJPMKNm2mfWDT3GDhxaRnGZO+paP6eCn5rzlbsca6DaQ9LzLf5ZuH7piVP
7n6NBr30op7BXg2wsW3g8olPMuGF4TBHzcPROP6BH396QQMYjtignyFXBuEy
Iu71vFQcIz2+ycK/Dk4MsVgmWl2KsUt2B1oaleJDl2kvb/pWgTWt/1Tyr15F
6z9UCP8sJvwzZejIMP952eh2If21Skw9fi4dPt4/OPs/uOgh4SIu38oS/llB
+daY8q0jy7e4kPKtkL8oSBL+2S6YV4HLq3/DOX/jNz4h/OBM+GEH4QcOn/Qk
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
cCDHz5xE/MxQwmP/D3CYHvE=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-3, 3}, {-2, 2}, {-0.9999998001849767, 0.9999412949754951}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7640146807218657`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"500d8d75-4ac6-4458-a214-8e4abeaba979"],

Cell[CellGroupData[{

Cell["Using Mathematica for calculus", "Section",
 CellChangeTimes->{{3.7636870607062683`*^9, 3.763687067820345*^9}}],

Cell["\<\
Mathematica is what Wolfram Alpha is based on\[LineSeparator](You may be \
familiar from Math 1A...)\
\>", "Text",
 CellChangeTimes->{{3.763687069090103*^9, 3.763687081377654*^9}}],

Cell["\<\
There is very powerful built-in differentiation and integration of \
expressions:\
\>", "Text",
 CellChangeTimes->{{3.7636870908377647`*^9, 3.7636871031492863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sqrt", "[", "x", "]"}], 
    RowBox[{"Tanh", "[", 
     RowBox[{"Sin", "[", "x", "]"}], "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7636871050724497`*^9, 3.763687157795088*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SqrtBox["x"], " ", 
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sech", "[", 
     RowBox[{"Sin", "[", "x", "]"}], "]"}], "2"]}], "+", 
  FractionBox[
   RowBox[{"Tanh", "[", 
    RowBox[{"Sin", "[", "x", "]"}], "]"}], 
   RowBox[{"2", " ", 
    SqrtBox["x"]}]]}]], "Output",
 CellChangeTimes->{3.764014680827613*^9}]
}, Open  ]],

Cell[TextData[{
 "Integrate can be used to compute ",
 StyleBox["indefinite",
  FontWeight->"Bold"],
 " integrals"
}], "Text",
 CellChangeTimes->{{3.763687197250024*^9, 3.763687207040799*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", "x", "]"}], 
     RowBox[{"Cos", "[", "x", "]"}], 
     RowBox[{
      RowBox[{"Sech", "[", 
       RowBox[{"Sin", "[", "x", "]"}], "]"}], "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"Tanh", "[", 
       RowBox[{"Sin", "[", "x", "]"}], "]"}], "/", "2"}], "/", 
     RowBox[{"Sqrt", "[", "x", "]"}]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.763687167226264*^9, 3.763687186951662*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox["x"], " ", 
  RowBox[{"Tanh", "[", 
   RowBox[{"Sin", "[", "x", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.764014680921224*^9}]
}, Open  ]],

Cell[TextData[{
 "Providing bounds of integration in the form of a list (just like in \
plotting) can be used to compute ",
 StyleBox["definite",
  FontWeight->"Bold"],
 " integrals"
}], "Text",
 CellChangeTimes->{{3.763687208839704*^9, 3.763687225226815*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", "x", "]"}], 
     RowBox[{"Cos", "[", "x", "]"}], 
     RowBox[{
      RowBox[{"Sech", "[", 
       RowBox[{"Sin", "[", "x", "]"}], "]"}], "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"Tanh", "[", 
       RowBox[{"Sin", "[", "x", "]"}], "]"}], "/", "2"}], "/", 
     RowBox[{"Sqrt", "[", "x", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7636872297033587`*^9, 3.763687233443351*^9}, 
   3.7636872713056307`*^9, {3.763687315596389*^9, 3.763687323281501*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   FractionBox["\[Pi]", "2"]], " ", 
  RowBox[{"Tanh", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{3.764014691444748*^9}]
}, Open  ]],

Cell["\<\
Numerical (approximate results) can be obtained using the N function\
\>", "Text",
 CellChangeTimes->{{3.763687431669496*^9, 3.763687447238323*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"Pi", "/", "2"}], "]"}], " ", 
   RowBox[{"Tanh", "[", "1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76368744953872*^9, 3.7636874502850513`*^9}, {
  3.763687517270216*^9, 3.76368751972438*^9}}],

Cell[BoxData["0.9545167225562259`"], "Output",
 CellChangeTimes->{3.764014691578163*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"Pi", "/", "2"}], "]"}], " ", 
    RowBox[{"Tanh", "[", "1", "]"}]}], ",", "30"}], "]"}]], "Input",
 CellChangeTimes->{{3.763687454027564*^9, 3.763687456131715*^9}, {
  3.7636875231453743`*^9, 3.763687526248393*^9}}],

Cell[BoxData["0.9545167225562260284508395830496930995031521848836534226705`30.\
"], "Output",
 CellChangeTimes->{3.764014691613456*^9}]
}, Open  ]],

Cell["\<\
If we want to be fancy, we can use mathematical notation in our code:\
\>", "Text",
 CellChangeTimes->{{3.763687529532035*^9, 3.763687542739997*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    SqrtBox[
     FractionBox["\[Pi]", "2"]], 
    RowBox[{"Tanh", "[", "1", "]"}]}], ",", "30"}], "]"}]], "Input",
 CellChangeTimes->{{3.763687543875201*^9, 3.763687561291902*^9}}],

Cell[BoxData["0.9545167225562260284508395830496930995031521848836534226705`30.\
"], "Output",
 CellChangeTimes->{3.764014691659712*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", "x", "]"}], 
     RowBox[{"Cos", "[", "x", "]"}], 
     RowBox[{
      RowBox[{"Sech", "[", 
       RowBox[{"Sin", "[", "x", "]"}], "]"}], "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"Tanh", "[", 
       RowBox[{"Sin", "[", "x", "]"}], "]"}], "/", "2"}], "/", 
     RowBox[{"Sqrt", "[", "x", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"4", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7636872472349854`*^9, 3.7636872563710747`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
aEVBFe6prfstnuOD/wGqMt13
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 4 Pi}, {-3.07571297993502, 3.5449076294656265`}}, {{
     0, 12.566370614359172`}, {-3.07571297993502, 3.5449076294656265`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.76401469171636*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"52a22516-ba2c-4c91-9df5-dc8c7cb43d93"],

Cell[CellGroupData[{

Cell["Creating and assigning variables", "Section",
 CellChangeTimes->{{3.763687658009058*^9, 3.763687667625568*^9}}],

Cell["Variables are assigned using the equal sign = (Set)", "Text",
 CellChangeTimes->{{3.763687672766881*^9, 3.7636876810467052`*^9}}],

Cell["lhs = rhs", "Text",
 CellChangeTimes->{{3.763687688982225*^9, 3.763687692421929*^9}}],

Cell["\<\
will evaluate the expression \[OpenCurlyQuote]rhs\[CloseCurlyQuote] and \
assign the result to \[OpenCurlyQuote]lhs\[CloseCurlyQuote]. The right-hand \
side can be any Mathematica expression\
\>", "Text",
 CellChangeTimes->{{3.763687694725833*^9, 3.763687718568514*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  SuperscriptBox["Pi", "2"]}]], "Input",
 CellChangeTimes->{{3.7636877288041067`*^9, 3.763687733560224*^9}}],

Cell[BoxData[
 SuperscriptBox["\[Pi]", "2"]], "Output",
 CellChangeTimes->{3.764014691758329*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.7636877369441233`*^9, 3.763687738653685*^9}}],

Cell[BoxData["9.869604401089358`"], "Output",
 CellChangeTimes->{3.764014691810946*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", 
   SuperscriptBox["x", "2"]}], "+", "x"}]], "Input",
 CellChangeTimes->{{3.7636877631012383`*^9, 3.763687766493487*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Pi]", "2"], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[Pi]", "4"]}]}]], "Output",
 CellChangeTimes->{3.764014691860126*^9}]
}, Open  ]],

Cell["Variables can be unset using Clear", "Text",
 CellChangeTimes->{{3.763687744341936*^9, 3.7636877772445917`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.763687750888564*^9, 3.763687752027295*^9}}],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.7636877531461554`*^9}],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.76401469192789*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"a1c3f9c1-6da9-4786-8134-1a4f2b99ab7e"],

Cell[CellGroupData[{

Cell["Lists", "Section",
 CellChangeTimes->{{3.7636878000914993`*^9, 3.763687802187805*^9}}],

Cell["As we saw, lists can be created using braces", "Text",
 CellChangeTimes->{{3.763687802928526*^9, 3.763687810938527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mylist", "=", 
  RowBox[{"{", 
   RowBox[{"3", ",", "8", ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7636878117795677`*^9, 3.763687816337175*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "8", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.764014691961401*^9}]
}, Open  ]],

Cell["We can perform arithmetic operations on lists", "Text",
 CellChangeTimes->{{3.7636878215780573`*^9, 3.7636878346159163`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mylist", "+", "1"}]], "Input",
 CellChangeTimes->{{3.763687835474052*^9, 3.763687837712288*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "9", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.7640146920105753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mylist", "*", "2"}]], "Input",
 CellChangeTimes->{{3.763687838966379*^9, 3.763687840208212*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "16", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{3.7640146920613737`*^9}]
}, Open  ]],

Cell["\<\
The entries of a list are accessed using double-brackets (or the special \
notation \[LeftDoubleBracket] \[RightDoubleBracket])
The entries are indexed starting with one\
\>", "Text",
 CellChangeTimes->{{3.76368784383992*^9, 3.763687877986783*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mylist", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7636878790592127`*^9, 3.763687881025838*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.764014692111397*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mylist", "\[LeftDoubleBracket]", "3", 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.7636878818819027`*^9, 3.7636878867282667`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.764014692160512*^9}]
}, Open  ]],

Cell["We can also index a list using a list", "Text",
 CellChangeTimes->{{3.763687915856165*^9, 3.763687922175529*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mylist", "\[LeftDoubleBracket]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.763687922905768*^9, 3.763687929159608*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{3.764014692210682*^9}]
}, Open  ]],

Cell["Lists can be mutated this way", "Text",
 CellChangeTimes->{{3.7636879418307*^9, 3.76368794718143*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mylist", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
  "=", "Pi"}]], "Input",
 CellChangeTimes->{{3.763687947920041*^9, 3.763687955733488*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.764014692260253*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["mylist"], "Input",
 CellChangeTimes->{{3.763687957808866*^9, 3.7636879585413113`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "8", ",", "\[Pi]"}], "}"}]], "Output",
 CellChangeTimes->{3.7640146923108883`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"39e9f716-d79c-48b0-971c-727c6bdb84c3"],

Cell[CellGroupData[{

Cell["Recall", "Section",
 CellChangeTimes->{{3.7636879788678303`*^9, 3.763687979557673*^9}}],

Cell["There are four kinds of bracketing in Mathematica:", "Text",
 CellChangeTimes->{{3.763687982708169*^9, 3.76368798913977*^9}}],

Cell["(Parentheses) for grouping mathematical expressions", "Item",
 CellChangeTimes->{{3.763687996604785*^9, 3.763688020834447*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"3", "*", "4"}]}]], "Input",
 CellChangeTimes->{{3.7636880218774147`*^9, 3.7636880230104628`*^9}}],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.764014692360465*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", "+", "3"}], ")"}], "*", "4"}]], "Input",
 CellChangeTimes->{{3.7636880238366737`*^9, 3.76368802530587*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.764014692411762*^9}]
}, Open  ]],

Cell["[Square brackets] for functions calls", "Item",
 CellChangeTimes->{{3.763687996604785*^9, 3.763688031435545*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.763688049349113*^9, 3.7636880518376417`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.764014692461618*^9}]
}, Open  ]],

Cell["{Braces} for lists", "Item",
 CellChangeTimes->{{3.763687996604785*^9, 3.7636880396078587`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Input",
 CellChangeTimes->{{3.7636880458607597`*^9, 3.7636880469568977`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.764014692543635*^9}]
}, Open  ]],

Cell["[[Double brackets]] for indexing", "Item",
 CellChangeTimes->{{3.763687996604785*^9, 3.763688044660081*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"7", ",", "8", ",", "9"}], "}"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.763688056275256*^9, 3.763688070104344*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.76401469257697*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d41389a1-17c0-47a3-8b5d-61fa93015997"],

Cell[CellGroupData[{

Cell["Creating Lists", "Section",
 CellChangeTimes->{{3.763773557074389*^9, 3.7637735604019957`*^9}}],

Cell["Simple ranges can be constructed using Range", "Text",
 CellChangeTimes->{{3.763773562346076*^9, 3.7637735805591297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.763773581085474*^9, 3.763773583292604*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.7640146926292973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"4", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.7637735842133636`*^9, 3.763773603027109*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.764014692678591*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"4", ",", "10", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.763773595950935*^9, 3.7637736060498943`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "6", ",", "8", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.76401469272827*^9}]
}, Open  ]],

Cell["\<\
Much more flexible is Table, which allows for the creation of lists using \
expressions\
\>", "Text",
 CellChangeTimes->{{3.763773609539225*^9, 3.7637736354627953`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763773636196192*^9, 3.763773648858474*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.764014692778804*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   SuperscriptBox["i", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763773653385907*^9, 3.76377365357714*^9}, {
  3.7637737160004597`*^9, 3.763773716179748*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.764014692828289*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["i", "2"], "/", 
    RowBox[{"i", "!"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7637736548209143`*^9, 3.763773667025546*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", 
   FractionBox["3", "2"], ",", 
   FractionBox["2", "3"], ",", 
   FractionBox["5", "24"], ",", 
   FractionBox["1", "20"], ",", 
   FractionBox["7", "720"], ",", 
   FractionBox["1", "630"], ",", 
   FractionBox["1", "4480"], ",", 
   FractionBox["1", "36288"]}], "}"}]], "Output",
 CellChangeTimes->{3.764014692877293*^9}]
}, Open  ]],

Cell["\<\
Table can also be used to create matrices (which are represnted as lists of \
lists)\
\>", "Text",
 CellChangeTimes->{{3.763773688753869*^9, 3.763773701906691*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "+", "j"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763773702820479*^9, 3.76377372609804*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9",
      ",", "10", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", 
     "10", ",", "11", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", 
     "11", ",", "12", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", 
     "12", ",", "13", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", 
     "13", ",", "14", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", 
     "14", ",", "15", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",",
      "15", ",", "16", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", 
     ",", "16", ",", "17", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", 
     ",", "17", ",", "18", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", 
     ",", "18", ",", "19", ",", "20"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.764014692929509*^9}]
}, Open  ]],

Cell["Matrices can be displayed nicely using MatrixForm", "Text",
 CellChangeTimes->{{3.763773722854257*^9, 3.763773736222362*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.763773736889821*^9, 3.763773739472142*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "4", "5", "6", "7", "8", "9", "10", "11"},
     {"3", "4", "5", "6", "7", "8", "9", "10", "11", "12"},
     {"4", "5", "6", "7", "8", "9", "10", "11", "12", "13"},
     {"5", "6", "7", "8", "9", "10", "11", "12", "13", "14"},
     {"6", "7", "8", "9", "10", "11", "12", "13", "14", "15"},
     {"7", "8", "9", "10", "11", "12", "13", "14", "15", "16"},
     {"8", "9", "10", "11", "12", "13", "14", "15", "16", "17"},
     {"9", "10", "11", "12", "13", "14", "15", "16", "17", "18"},
     {"10", "11", "12", "13", "14", "15", "16", "17", "18", "19"},
     {"11", "12", "13", "14", "15", "16", "17", "18", "19", "20"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764014692977975*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Note:",
  FontWeight->"Bold"],
 " functions can also be evaluated using ",
 StyleBox["postfix notation",
  FontWeight->"Bold"],
 " with the // operator"
}], "Text",
 CellChangeTimes->{{3.7637737443106613`*^9, 3.763773756742976*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.763773761966029*^9, 3.76377376409655*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "4", "5", "6", "7", "8", "9", "10", "11"},
     {"3", "4", "5", "6", "7", "8", "9", "10", "11", "12"},
     {"4", "5", "6", "7", "8", "9", "10", "11", "12", "13"},
     {"5", "6", "7", "8", "9", "10", "11", "12", "13", "14"},
     {"6", "7", "8", "9", "10", "11", "12", "13", "14", "15"},
     {"7", "8", "9", "10", "11", "12", "13", "14", "15", "16"},
     {"8", "9", "10", "11", "12", "13", "14", "15", "16", "17"},
     {"9", "10", "11", "12", "13", "14", "15", "16", "17", "18"},
     {"10", "11", "12", "13", "14", "15", "16", "17", "18", "19"},
     {"11", "12", "13", "14", "15", "16", "17", "18", "19", "20"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.76401469302986*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"65be6ce6-0e7a-432f-9ccc-61e52c315edb"],

Cell[CellGroupData[{

Cell["Interactivity", "Section",
 CellChangeTimes->{{3.763814292797578*^9, 3.763814295198184*^9}}],

Cell["\<\
One of Mathematica\[CloseCurlyQuote]s most powerful features is its \
interactivity\
\>", "Text",
 CellChangeTimes->{{3.763814297154804*^9, 3.763814306837081*^9}}],

Cell["Consider plotting a set of parabolas", "Text",
 CellChangeTimes->{{3.763814322882764*^9, 3.7638143364015207`*^9}, {
  3.763814382656959*^9, 3.763814391167801*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"y", "=", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a"}], ")"}], "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], TraditionalForm]]]], "Text",
 CellChangeTimes->{{3.763814394943383*^9, 3.763814404092842*^9}}],

Cell[TextData[{
 "parameterized by the value ",
 StyleBox["a",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.763814408741707*^9, 3.763814413738847*^9}}],

Cell["We begin by choosing a \[OpenCurlyDoubleQuote]representative\
\[CloseCurlyDoubleQuote] set", "Text",
 CellChangeTimes->{{3.763814417422736*^9, 3.763814436486714*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parabolas", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "a"}], ")"}], "2"], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"-", "2"}], ",", "2", ",", 
      RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763814437400729*^9, 3.763814485490898*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "+", "x"}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox["3", "2"], "+", "x"}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "2"], "+", "x"}], ")"}], "2"], ",", 
   SuperscriptBox["x", "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "+", "x"}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], "+", "x"}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.764014693078395*^9}]
}, Open  ]],

Cell["Plotting these functions gives us some insight", "Text",
 CellChangeTimes->{{3.763814512294384*^9, 3.763814525255438*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"parabolas", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "60"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7638144578746634`*^9, 3.7638145049435997`*^9}, {
  3.7638145697100143`*^9, 3.763814577700861*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
hSxcxQ==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
6lUK8hC33ZrqT0X//zfQgpLWwEYIFf0P89J8nQ==
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwt2Hc4Ffz7B/BjJiT7oB5EiCQ7WfdHjsdKJKMhFClFIiKriEIqu5TISEQk
4qH4nKyUbNnjmMce2fvb77p+f93X65/39f7zfd0HLruYXqElEAjMNATC/127
3IjZnR0i+dJgXfMOaCLuDQFxtU0i+UI9R3iqkiaq/Pet1Z1VInnB4zeL/mFN
JN5X/GNqjkjetdptHc+riSZYh1I7B4jk3O8jpsbTGujWdaWz+RVE8nrMlBv7
Kw3kL9ZFdnhEJMdSq6OoK+ro5SvRqDo2IvmXU87p8UI1lNQf4nJ6Ny/ZSoyT
/jTxOOJtPGMsycNDNvqjxW9droxqTM6QasW4ydt100mXYxWRnqSYu6gIF5lX
rPZI61l5pJpjld5wlJN8Jk3usIytLFoPc+CSl+QgT7ahSeMv0mhpJS3WWoKd
3J9v+jOcWRJVikQpljmzkTOlE13rWsSQGsO9/MP2rOQ97AmCPs9FUAw6dkzL
j5msF0gZ0k0QQnYJZ0cmkpjIZ/Ttn++OE0AN7wR307xkJHe+cM84+YYHCbJ+
lMOF9GQl2ZXMtx4ciFl4tGH8PS05+935Co9hZuRkFvwiI4NAPjdz537vLnqU
vF2iIJVMII+W51kfmaNDbRlz9VnxBLK5AvXfxx10CG1dYMgNI5B7qVpKrpl0
iDtd3u2zE4EclVQYOmJIh0pX+g3LZf9a/zXHrWhatF/ZY7vIdQd3PbJ5zXqE
BtlW9NcKRm1h5Qsu+t+5t0BXY/VKb8AWlvLMPU43vgkyReyEBNctrFr/Ws62
dBM232sp8p/ewnlHglX8HDbhRVRqAhf7Fl7O80/RLtmAxktXnZmebuLhhv1U
mmvroEWYZfsTuoENLjEokHpWQERj+3RVwBpW63r0u19iARo5NKTj3dZwSpib
QQnjAviP+jA6263hGy59wXkjf6Dr2VoJt84aPtB23GQ59Q9EDy6K2jP9Nd+O
fOeBP0AfMrlE+2wVO9yskKUXnYfR5o54lLCC99U4CPR5zEDMO6I795MVrK8V
mlapOgMnfC1OjfmtYFXRnC/DO9OQKNZKG2Gzgu0P7EQ0hU2DpVfDjX6RFUxh
LGu/mDoFNf9Ua/hnLmP7O7m/Uf8EZF7LH/hSuIRTqLbRsoFUaL2cJGSYvoSF
f0i0L+pTgXDx8cWu2CW8NuT4YZODChan7TpX3ZdwbpUNR3vKKNCqcjUpKSxh
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
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
70P+B5yYdGQ=
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
xTaHDRz6/z8D4Ytme/b3ceh/HVAyCw==
      "]]}, 
    {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
89AOKKH/AfYyLdc=
      "]]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
yWQq4v8A90D3KQ==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5.999999755102041, 5.999999755102041}, {0, 60}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7640146933831987`*^9}]
}, Open  ]],

Cell[TextData[{
 "More useful is ",
 StyleBox["manipulating",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " the parameter interactively"
}], "Text",
 CellChangeTimes->{{3.763814527413126*^9, 3.763814537798245*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "a"}], ")"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "60"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763814539905506*^9, 3.763814583295388*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -2, 2}}, Typeset`size$$ = {360., {120., 125.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$26862$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$26862$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[($CellContext`x - $CellContext`a$$)^2, {$CellContext`x, -6, 6}, 
        PlotRange -> {0, 60}], 
      "Specifications" :> {{$CellContext`a$$, -2, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {165., 171.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7640146935465384`*^9},ExpressionUUID->"1d295418-8708-4b64-9f37-\
766c3eafec42"]
}, Open  ]],

Cell["\<\
We can use manipulate to understand e.g. frequency and amplitude of waves\
\>", "Text",
 CellChangeTimes->{{3.763814601389079*^9, 3.763814623434329*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"a", "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]", "*", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", "1", ",", "10"}], "}"}]}], "\[IndentingNewLine]",
   "]"}]], "Input",
 CellChangeTimes->{{3.763814625349971*^9, 3.7638146886223707`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1, $CellContext`\[Omega]$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1, 3}, {
      Hold[$CellContext`\[Omega]$$], 1, 10}}, Typeset`size$$ = {
    360., {113., 118.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$26947$$ = 
    0, $CellContext`\[Omega]$26948$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1, $CellContext`\[Omega]$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$26947$$, 0], 
        Hold[$CellContext`\[Omega]$$, $CellContext`\[Omega]$26948$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`a$$ 
        Sin[$CellContext`\[Omega]$$ $CellContext`x], {$CellContext`x, 0, 2 
         Pi}, PlotRange -> {-3, 3}], 
      "Specifications" :> {{$CellContext`a$$, 1, 3}, {$CellContext`\[Omega]$$,
          1, 10}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {172., 178.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.764014693795882*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"603120ae-f6a9-4b78-a9fc-f038cef0d985"],

Cell[CellGroupData[{

Cell["Algebraic manipulation and simplification", "Section",
 CellChangeTimes->{{3.763688421924539*^9, 3.7636884289814796`*^9}}],

Cell["This is one of the most powerful features of Mathematica", "Text",
 CellChangeTimes->{{3.763688430531611*^9, 3.763688439938669*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"1", "+", 
   RowBox[{"2", "x"}], "+", 
   SuperscriptBox["x", "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7636884441195507`*^9, 3.763688458058709*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], "2"]], "Output",
 CellChangeTimes->{3.764014693895891*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "x", "+", 
     RowBox[{"3", "y"}]}], ")"}], "4"], "]"}]], "Input",
 CellChangeTimes->{{3.763688440533437*^9, 3.7636884606674347`*^9}, {
  3.7636885113819933`*^9, 3.7636885161967793`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"4", " ", "x"}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  SuperscriptBox["x", "4"], "+", 
  RowBox[{"12", " ", "y"}], "+", 
  RowBox[{"36", " ", "x", " ", "y"}], "+", 
  RowBox[{"36", " ", 
   SuperscriptBox["x", "2"], " ", "y"}], "+", 
  RowBox[{"12", " ", 
   SuperscriptBox["x", "3"], " ", "y"}], "+", 
  RowBox[{"54", " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"108", " ", "x", " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"54", " ", 
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"108", " ", 
   SuperscriptBox["y", "3"]}], "+", 
  RowBox[{"108", " ", "x", " ", 
   SuperscriptBox["y", "3"]}], "+", 
  RowBox[{"81", " ", 
   SuperscriptBox["y", "4"]}]}]], "Output",
 CellChangeTimes->{3.7640146939454412`*^9}]
}, Open  ]],

Cell[TextData[{
 "In particular, ",
 StyleBox["Simplify",
  FontWeight->"Bold"],
 " is one of the most useful single functions"
}], "Text",
 CellChangeTimes->{{3.763688531012356*^9, 3.763688542171783*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "x", "]"}], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.763688523398801*^9, 3.763688549106968*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.764014693995637*^9}]
}, Open  ]],

Cell[TextData[{
 "Sometimes ",
 StyleBox["FullSimplify",
  FontWeight->"Bold"],
 " can simplify more complicated expressions (using an expanded set of \
rules)"
}], "Text",
 CellChangeTimes->{{3.7636885728582077`*^9, 3.763688590015534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Gamma", "[", "x", "]"}], 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763688590652259*^9, 3.763688605551639*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "-", "x"}], "]"}], " ", 
  RowBox[{"Gamma", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.7640146940449753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Gamma", "[", "x", "]"}], 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763688600087845*^9, 3.763688608296687*^9}}],

Cell[BoxData[
 RowBox[{"\[Pi]", " ", 
  RowBox[{"Csc", "[", 
   RowBox[{"\[Pi]", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.764014694128152*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myexpr", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "1"}], ")"}], "^", "2"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "+", "x"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "x"}], ")"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "3"}], ")"}], "^", "2"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.763688651574595*^9, 3.763688655312717*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", "x"}], ")"}]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", "x"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.7640146942122183`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apart", "[", "myexpr", "]"}]], "Input",
 CellChangeTimes->{{3.7636886583602047`*^9, 3.763688660600424*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox["5", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", "x"}], ")"}], "2"]], "+", 
  FractionBox["19", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", "x"}], ")"}]}]], "+", 
  FractionBox["1", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.764014694265086*^9}]
}, Open  ]],

Cell["\<\
The percent symbol can be used as a shortcut for the output of the last \
expression\
\>", "Text",
 CellChangeTimes->{{3.76368866860131*^9, 3.763688682469163*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Together", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.763688662016971*^9, 3.763688664371009*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", "-", 
   RowBox[{"3", " ", "x"}], "+", 
   SuperscriptBox["x", "3"]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", "x"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.764014694313381*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.763688687879105*^9, 3.763688691913768*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", "x"}], ")"}]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", "x"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.7640146943634167`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpandAll", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.763688698711505*^9, 3.763688706527759*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["2", 
   RowBox[{"9", "+", 
    RowBox[{"3", " ", "x"}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}]], "-", 
  FractionBox[
   RowBox[{"3", " ", "x"}], 
   RowBox[{"9", "+", 
    RowBox[{"3", " ", "x"}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}]], "+", 
  FractionBox[
   SuperscriptBox["x", "3"], 
   RowBox[{"9", "+", 
    RowBox[{"3", " ", "x"}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}]]}]], "Output",
 CellChangeTimes->{3.764014694412073*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"30471479-9947-41b8-89ee-654a0b1a498a"],

Cell[CellGroupData[{

Cell["Substitution rules", "Section",
 CellChangeTimes->{{3.763688209445881*^9, 3.763688212161539*^9}}],

Cell["Given an expression such as:", "Text",
 CellChangeTimes->{{3.7636882165241137`*^9, 3.763688220659792*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myexpr", "=", 
  RowBox[{
   RowBox[{"a", "*", 
    RowBox[{"x", "^", "2"}]}], "+", 
   RowBox[{"b", "*", "x"}], "+", "c"}]}]], "Input",
 CellChangeTimes->{{3.763688221983749*^9, 3.763688232987933*^9}}],

Cell[BoxData[
 RowBox[{"c", "+", 
  RowBox[{"b", " ", "x"}], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{3.764014694462841*^9}]
}, Open  ]],

Cell[TextData[{
 "We can evaluate this expression with the variables replaced by numbers (or ",
 StyleBox["any",
  FontWeight->"Bold"],
 " other expressions) using ",
 StyleBox["substitution rules",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.7636882378750477`*^9, 3.763688264227903*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["replacement operator",
  FontWeight->"Bold"],
 " is typed slash-dot, and rules are typed ->"
}], "Text",
 CellChangeTimes->{{3.763688283105905*^9, 3.7636883100327883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myexpr", "/.", 
  RowBox[{"x", "\[Rule]", "3"}]}]], "Input",
 CellChangeTimes->{{3.76368826556962*^9, 3.763688321984583*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"9", " ", "a"}], "+", 
  RowBox[{"3", " ", "b"}], "+", "c"}]], "Output",
 CellChangeTimes->{3.7640146945132523`*^9}]
}, Open  ]],

Cell["\<\
Multiple substitutions can be made at once using lists of rules\
\>", "Text",
 CellChangeTimes->{{3.763688325856024*^9, 3.7636883555260897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myexpr", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "3"}], ",", 
    RowBox[{"a", "\[Rule]", "1"}], ",", 
    RowBox[{"b", "\[Rule]", "2"}], ",", 
    RowBox[{"c", "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.763688334322158*^9, 3.763688348185611*^9}}],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{3.7640146945799294`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e9b83262-873d-4204-8447-17e3d69be960"],

Cell[CellGroupData[{

Cell["More algebraic manipulations", "Section",
 CellChangeTimes->{{3.76368890549765*^9, 3.763688909569536*^9}}],

Cell["Simplify tends not to make assumptions about the variables", "Text",
 CellChangeTimes->{{3.7636888274715347`*^9, 3.763688836508603*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Sqrt", "[", 
   SuperscriptBox["x", "2"], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7636888390246067`*^9, 3.763688847388297*^9}}],

Cell[BoxData[
 SqrtBox[
  SuperscriptBox["x", "2"]]], "Output",
 CellChangeTimes->{3.7640146946451263`*^9}]
}, Open  ]],

Cell["\<\
Assumptions can be provided as a second argument to Simplify:\
\>", "Text",
 CellChangeTimes->{{3.763688848857582*^9, 3.7636888670990763`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    SuperscriptBox["x", "2"], "]"}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7636888680478287`*^9, 3.763688876067137*^9}}],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.764014694743431*^9}]
}, Open  ]],

Cell["Algebraic expressions can be analyzed programmatically:", "Text",
 CellChangeTimes->{{3.7636889318883533`*^9, 3.763688944387331*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myexpr", "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"3", "x"}], "+", 
      RowBox[{"4", 
       RowBox[{"y", "^", "2"}]}]}], ")"}], "^", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763688949578018*^9, 3.7636889529568243`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"6", " ", "x"}], "+", 
  RowBox[{"9", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"24", " ", "x", " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"16", " ", 
   SuperscriptBox["y", "4"]}]}]], "Output",
 CellChangeTimes->{3.7640146947948103`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Coefficient", "[", 
  RowBox[{"myexpr", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7636889558108873`*^9, 3.7636889608236313`*^9}}],

Cell[BoxData[
 RowBox[{"6", "+", 
  RowBox[{"24", " ", 
   SuperscriptBox["y", "2"]}]}]], "Output",
 CellChangeTimes->{3.764014694838868*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exponent", "[", 
  RowBox[{"myexpr", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.763688969968183*^9, 3.763688974808403*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.7640146948968153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myexpr", "\[LeftDoubleBracket]", "3", 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.763688982825521*^9, 3.76368899159731*^9}}],

Cell[BoxData[
 RowBox[{"9", " ", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.76401469496344*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"2", "-", "y"}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7636890040568857`*^9, 3.763689004815939*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "x"}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"2", "-", "y"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.7640146950282097`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Numerator", "[", "r", "]"}]], "Input",
 CellChangeTimes->{{3.763689006681219*^9, 3.763689009437047*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", "x"}]], "Output",
 CellChangeTimes->{3.764014695096643*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Denominator", "[", "r", "]"}]], "Input",
 CellChangeTimes->{{3.763689010023864*^9, 3.7636890120150833`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{"2", "-", "y"}], ")"}]}]], "Output",
 CellChangeTimes->{3.764014695162283*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"r", "=."}]], "Input",
 CellChangeTimes->{{3.763745638380589*^9, 3.763745639778096*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6de0b42f-3f3b-4749-9db3-ff112ed13f12"],

Cell[CellGroupData[{

Cell["Example: binomial theorem", "Section",
 CellChangeTimes->{{3.7637439839319277`*^9, 3.763743990508306*^9}}],

Cell["Recall the binomial theorem:", "Text",
 CellChangeTimes->{{3.763743991942067*^9, 3.763743995869424*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}], "n"], "=", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", "0"}], "n"], 
       RowBox[{
        RowBox[{"(", GridBox[{
           {"n"},
           {"k"}
          }], ")"}], 
        SuperscriptBox["x", "k"], 
        SuperscriptBox["y", 
         RowBox[{"n", "-", "k"}]]}]}]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], TraditionalForm]]]], "Text",
 CellChangeTimes->{{3.763744026132553*^9, 3.763744091071773*^9}, {
  3.763744177602972*^9, 3.763744179235067*^9}}],

Cell["Mathematica immediately simplifies using this identity:", "Text",
 CellChangeTimes->{{3.7637441050637197`*^9, 3.763744108605989*^9}, {
  3.76374419623394*^9, 3.763744214000658*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"binom", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Binomial", "[", 
      RowBox[{"n", ",", "k"}], "]"}], 
     SuperscriptBox["x", "k"], 
     SuperscriptBox["y", 
      RowBox[{"n", "-", "k"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763744109958043*^9, 3.763744153005787*^9}, {
  3.763744186156732*^9, 3.763744187355068*^9}, {3.76374423023318*^9, 
  3.763744238483879*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"x", "+", "y"}], ")"}], "n"]], "Output",
 CellChangeTimes->{3.764014695255807*^9}]
}, Open  ]],

Cell["We can evaluate for a specific n using a replacement rule", "Text",
 CellChangeTimes->{{3.763744273640464*^9, 3.7637442844562263`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"binom", "/.", 
  RowBox[{"n", "\[Rule]", "10"}]}]], "Input",
 CellChangeTimes->{{3.763744285535562*^9, 3.7637442881075773`*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"x", "+", "y"}], ")"}], "10"]], "Output",
 CellChangeTimes->{3.764014695346266*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.763744292365375*^9, 3.7637442943992157`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "10"], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["x", "9"], " ", "y"}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "8"], " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "7"], " ", 
   SuperscriptBox["y", "3"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "6"], " ", 
   SuperscriptBox["y", "4"]}], "+", 
  RowBox[{"252", " ", 
   SuperscriptBox["x", "5"], " ", 
   SuperscriptBox["y", "5"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "4"], " ", 
   SuperscriptBox["y", "6"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "3"], " ", 
   SuperscriptBox["y", "7"]}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "8"]}], "+", 
  RowBox[{"10", " ", "x", " ", 
   SuperscriptBox["y", "9"]}], "+", 
  SuperscriptBox["y", "10"]}]], "Output",
 CellChangeTimes->{3.764014695597389*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ca17759f-e485-4f99-a78e-84617ac0950d"],

Cell[CellGroupData[{

Cell["More calculus and series", "Section",
 CellChangeTimes->{{3.763689190003096*^9, 3.7636891927597713`*^9}, {
  3.763689417812998*^9, 3.763689419943865*^9}}],

Cell["\<\
Mathematica can easily compute partial and repeated derivatives\
\>", "Text",
 CellChangeTimes->{{3.7636891940011*^9, 3.76368924132701*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   SuperscriptBox["x", "n"], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7636892435650787`*^9, 3.763689257102701*^9}}],

Cell[BoxData[
 RowBox[{"n", " ", 
  SuperscriptBox["x", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]]}]], "Output",
 CellChangeTimes->{3.7640146957813177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   SuperscriptBox["x", "n"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7636892608979197`*^9, 3.763689262449831*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
  SuperscriptBox["x", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "n"}]]}]], "Output",
 CellChangeTimes->{3.764014695928351*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   SuperscriptBox["x", "n"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7636892662176*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "4"}], "+", "n"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "3"}], "+", "n"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
  SuperscriptBox["x", 
   RowBox[{
    RowBox[{"-", "5"}], "+", "n"}]]}]], "Output",
 CellChangeTimes->{3.7640146959686832`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], 
    RowBox[{"Cos", "[", "y", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763689370833992*^9, 3.7636893795170717`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], " ", 
    RowBox[{"Cos", "[", "y", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", "x", "]"}]}], " ", 
    RowBox[{"Sin", "[", "y", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.764014696065412*^9}]
}, Open  ]],

Cell["Finite and infinite sums can be computed using Sum", "Text",
 CellChangeTimes->{{3.7636894255957947`*^9, 3.763689433947659*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "i"], "/", "i"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763689434964734*^9, 3.76368945841684*^9}}],

Cell[BoxData[
 RowBox[{"x", "+", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "3"], "3"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "4"], "+", 
  FractionBox[
   SuperscriptBox["x", "5"], "5"], "+", 
  FractionBox[
   SuperscriptBox["x", "6"], "6"], "+", 
  FractionBox[
   SuperscriptBox["x", "7"], "7"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "8"], "+", 
  FractionBox[
   SuperscriptBox["x", "9"], "9"], "+", 
  FractionBox[
   SuperscriptBox["x", "10"], "10"]}]], "Output",
 CellChangeTimes->{3.7640146961451473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    SuperscriptBox["i", "4"]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7636894768836393`*^9, 3.763689485391013*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[Pi]", "4"], "90"]], "Output",
 CellChangeTimes->{3.764014696249641*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    SuperscriptBox["2", "i"]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763689489376277*^9, 3.763689498845277*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.764014696354735*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Product", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "+", "i"}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763689514936439*^9, 3.763689526202512*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"3", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"4", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"5", "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.764014696412863*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"047d58ae-582d-4389-b30b-4690f68fd979"],

Cell[CellGroupData[{

Cell["Equations", "Section",
 CellChangeTimes->{{3.763689603898056*^9, 3.763689604919263*^9}}],

Cell["Just like in Julia, equality is tested with ==", "Text",
 CellChangeTimes->{{3.763689606776226*^9, 3.7636896128571453`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "3"}]], "Input",
 CellChangeTimes->{{3.763689618758421*^9, 3.7636896212001333`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.764014696462634*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "\[Equal]", "4"}]], "Input",
 CellChangeTimes->{{3.763689622563446*^9, 3.763689623120414*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.764014696511355*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "\[Equal]", "3"}]], "Input",
 CellChangeTimes->{{3.763689624685038*^9, 3.763689625247993*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.764014696561586*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.76368962852695*^9, 3.763689629252795*^9}}],

Cell["Equations are themselves Mathematica expressions", "Text",
 CellChangeTimes->{{3.7636896445127983`*^9, 3.7636896569663877`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myeqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"b", " ", "x"}], "+", "c"}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.763689631823587*^9, 3.763689667232646*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "+", 
   RowBox[{"b", " ", "x"}], "+", 
   RowBox[{"a", " ", 
    SuperscriptBox["x", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.76401469662854*^9}]
}, Open  ]],

Cell["Equations can be solved using Solve", "Text",
 CellChangeTimes->{{3.763689670823894*^9, 3.763689675449177*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"myeqn", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7636896761021338`*^9, 3.763689681598262*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.764014696668068*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", 
     RowBox[{"2", "x"}], "-", "7"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.763689707933107*^9, 3.763689714938555*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.764014696729684*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.763689746037079*^9, 3.763689746798501*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3.8284271247461903`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.8284271247461903`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.764014696778208*^9}]
}, Open  ]],

Cell["\<\
NSolve (for \[OpenCurlyDoubleQuote]numeric solve\[CloseCurlyDoubleQuote]) \
will look for numeric rather than symbolic solutions\
\>", "Text",
 CellChangeTimes->{{3.763689729229301*^9, 3.763689742181305*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", 
     RowBox[{"2", "x"}], "-", "7"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.763689725869689*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3.8284271247461903`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.82842712474619`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7640146968300133`*^9}]
}, Open  ]],

Cell["\<\
For linear, quadratic, cubic, and quartic polynomials, Mathematica will \
always give a closed-form solution\
\>", "Text",
 CellChangeTimes->{{3.763689781250182*^9, 3.763689803900586*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "4"}], "-", 
     RowBox[{"5", 
      RowBox[{"x", "^", "2"}]}], "-", "3"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.763689827806238*^9, 3.763689827817223*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SqrtBox[
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "5"}], "+", 
          SqrtBox["37"]}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox[
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "5"}], "+", 
          SqrtBox["37"]}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          SqrtBox["37"]}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SqrtBox[
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         SqrtBox["37"]}], ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.764014696916916*^9}]
}, Open  ]],

Cell["Some equations do not admit closed-form solutions", "Text",
 CellChangeTimes->{{3.763689777716525*^9, 3.763689814057385*^9}, 
   3.7637321060939283`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "-", 
     RowBox[{"4", "x"}], "+", 
     RowBox[{"x", "^", "5"}]}], "\[Equal]", "0"}], ",", "x"}], "]"}]], "Input",\

 CellChangeTimes->{{3.7636898144406233`*^9, 3.763689814451469*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "-", 
         RowBox[{"4", " ", "#1"}], "+", 
         SuperscriptBox["#1", "5"]}], "&"}], ",", "1"}], "]"}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "-", 
         RowBox[{"4", " ", "#1"}], "+", 
         SuperscriptBox["#1", "5"]}], "&"}], ",", "2"}], "]"}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "-", 
         RowBox[{"4", " ", "#1"}], "+", 
         SuperscriptBox["#1", "5"]}], "&"}], ",", "3"}], "]"}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "-", 
         RowBox[{"4", " ", "#1"}], "+", 
         SuperscriptBox["#1", "5"]}], "&"}], ",", "4"}], "]"}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "-", 
         RowBox[{"4", " ", "#1"}], "+", 
         SuperscriptBox["#1", "5"]}], "&"}], ",", "5"}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7640146969987297`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "-", 
     RowBox[{"4", "x"}], "+", 
     RowBox[{"x", "^", "5"}]}], "\[Equal]", "0"}], ",", "x"}], "]"}]], "Input",\

 CellChangeTimes->{{3.763689817188044*^9, 3.763689817901091*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.518512152784912`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "0.11679186122298205`"}], "-", 
      RowBox[{"1.438447695329177`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "0.11679186122298205`"}], "+", 
      RowBox[{"1.438447695329177`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.5084994846573327`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.2435963905735432`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.76401469718302*^9}]
}, Open  ]],

Cell["You can also solve for simultaneous systems of equations", "Text",
 CellChangeTimes->{{3.763689868378916*^9, 3.763689880603891*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"a", " ", "x"}], "+", "y"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "a"}], ")"}], " ", "y"}]}], "\[Equal]", "1"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763689881204224*^9, 3.763689881214938*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "a", "-", 
        SuperscriptBox["a", "2"]}]]}]}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["a", 
       RowBox[{"2", "-", "a", "+", 
        SuperscriptBox["a", "2"]}]]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.76401469727564*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0bad8f49-59a1-447b-ae96-70dcd0040354"],

Cell[CellGroupData[{

Cell["Differential equations", "Section",
 CellChangeTimes->{{3.763689940148323*^9, 3.763689942376521*^9}}],

Cell["\<\
Mathematica can find analytical solutions to many differential equations, \
both initial value problems and boundary value problems\
\>", "Text",
 CellChangeTimes->{{3.7636899455803328`*^9, 3.763689948027747*^9}, {
  3.763689982875456*^9, 3.763690009873829*^9}}],

Cell["\<\
The function DSolve looks for solutions to differential equations\
\>", "Text",
 CellChangeTimes->{{3.763690018205332*^9, 3.763690026151046*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "'"}], "[", "x", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"y", "[", "x", "]"}]}], "+", "1"}]}], ",", "y", ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.763690011887875*^9, 3.763690037461255*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "a"]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"a", " ", "x"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7640146973298388`*^9}]
}, Open  ]],

Cell["\<\
We did not specify an initial condition, so the solution has a constant. \
Specifying the initial condition eliminates the constant\
\>", "Text",
 CellChangeTimes->{{3.763690048812179*^9, 3.763690100265936*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"y", "[", "x", "]"}]}], "+", "1"}]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", "y", 
    ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763690071212726*^9, 3.763690083827714*^9}, {
  3.763690132436343*^9, 3.763690133603607*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"a", " ", "x"}]], "+", 
        RowBox[{"a", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"a", " ", "x"}]]}]}], "a"]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.764014697377736*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "x", "]"}], "/.", "soln"}]], "Input",
 CellChangeTimes->{{3.76369013562076*^9, 3.763690157043373*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"a", " ", "x"}]], "+", 
    RowBox[{"a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"a", " ", "x"}]]}]}], "a"], "}"}]], "Output",
 CellChangeTimes->{3.764014697428567*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], "/.", "soln"}], "/.", 
  RowBox[{"a", "\[Rule]", "1"}]}]], "Input",
 CellChangeTimes->{{3.76369015982521*^9, 3.7636901648498163`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", "x"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.764014697511488*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", "soln"}], "/.", 
    RowBox[{"a", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763690168241503*^9, 3.76369017957798*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVxX0803kcAPBthhlmXy1eU4ioIemE6+Hq8y2V8lSRpBQnKkpKqtNLp7Wt
Eo6Ll6uFFk7FsWTq5KlXnOukPK1IntKOZbPfdEZUdnd/vF9vm4i4gCgKiUTy
+8//e0fJO558CFofMzRJJ5HUQPW0ODHIdgM13yWIR1HDylvXcyvZm8COrerQ
01WDz4vuB3nsXTCm0jvIoKshOHK67ho7EkSnzWTWLDX0u1z2TGcngMp2aZQv
Rw2i+dsvXWXzwU6r/vH5DjVwaZVLU9jZ0O63fiKiQA17Qm6L1RNF0CLuJ5nu
ngBDLTfUy0oMK/LMLgeRP4L9TpW8MVUCQg+GUdZvH+Hsy9VwfbIalgTpVi2O
+QfMJWiATG4AW8J/q8RqEh4Oe7a2ffcUbLnjiviRSXgak7cgRNkEZ+pjYxvK
NaBZss6kLPZPECm/2R0dOwWUmVLmAvsWOLQuOu8ongYPbfjDwPJWuCJ93Hve
4BO08t1eNju2gRUrwYHX+QmsMxUz91Tt8KyQtG5+xQwopgcHXq3ohPiVJlya
YBaKxmpaGD91wXJTS++UuM/AsLxDyGRSYB3uX1Wy9wukRVcdEtm9BvmjUcfY
NV9hCpfKjiR3A6cs6/sFrnOQ4NokMWvsgQELzzimlRYGy5tSO2x6QVgcmHwZ
kfDnGOlNh3NvAYPTvahsEnbaoD93qKYPspSxbl+ZZOxVYHO4wnwAnJ/bp/cJ
yfisZZjtu9BBqEy59cdGKwpepgwy7PYbgs191oqC2xQ8z0RNa5odAjnnYypr
pQ6mNtwUL859Bxt4Pl+EdTr4qFvNGwOfYdDmJr7o3U3FpdsiRPVTw6BeJOwX
qKlYo7BgjuS8h9BHJZpnF3VxVaCXTvYmGeQ8kC4vsdPDyVsFtyQjMqhwBs1o
vR626ffuKRT8DYW9xmYWIfp4zbf8bLbrCPS8Tmx/rUPDoVZtM+SuEWAUblZE
F9OwpiV9+AR3FNxYRsm+ew3wdeqBhAA7OWSmU8oadel43kBVAaVJDkkneXoe
FXSse567a/XJDzB7lOKuPW6ISfcOiIdNx4DRWBX8bLERjheK002fjgHHX5Pa
qDDCdU5XaOi4AuI3NZv6S4wx8o5fdpGhBMfR0HH3Uwzc59zelVirhDNxC4Xn
tpjg+/lgJzswDpVEVsaoPhPvF3sgy7lx8DLroqcdY+ILgtvcvhIV1EJ12Mxb
Ji6TW95k+BJALQ5ZZr4F4St5gvABfwKm3iU0arwQjgwYty/fSUBcZz5fug3h
hbW19/2CCRi64Sy45ofw1Yx9zWkRBKQG5iczgxA+4nFjgp5IwDkD+n5WJMK2
fNZW/WICzPfQpGsvIjy3Ksm4+y4BNJGDxJqP8Jvx953FpQQgXnu9ziWEM4Mr
92+pIMDZuD6wNQVhrWPAKUEtAfNHLySF/YxwX0dGvk4XAafjla3pIoR/vzR9
sOsVAeFpnOCEAoSz14Y5FPYQcMF1idG+IoR9fl0u2ThAgIvT6SnOXYQf//Di
L+4HApLMn7c2ixHOcXbP2KkkgHiTVFZegfDJ4dxdNgQBLzGjOqcSYY7vscEn
kwS4MwZ3HH6EMJUsLcqcJqBpzr5/ezXCQ1VrY8JnCWi5sy97VQ3CtTGFLiu+
EmDdxjtjU4fwL9aGGq2WANWaAh69AeF/AQaxRMM=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.0000000408163268`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {1.0000000408163268`, 4.436563545967813}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.764014697677952*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
z+tKuBvjs1/u0y+3rQ7/BxmvU14=\
\>"]]
}, Open  ]],

Cell["We can solve a boundary value problem:", "Text",
 CellChangeTimes->{{3.763690193249488*^9, 3.763690198800119*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "\[Equal]", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", "y", ",",
    "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.763690200624785*^9, 3.763690239183359*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "x"}], " ", 
        RowBox[{"Sin", "[", "1", "]"}]}], "+", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.76401469770796*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", "%"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7636902193028593`*^9, 3.763690226215192*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.05999375355506931}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.764014697757957*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXHl8V9WV/wk/EMGxtdpp60yrY512Wme0o2Btbattp2oX29qObXU6KqII
yCaLyKKyQ8Cw77LJJjsIBBJIIjGBIAkEspMAIYSQkJUshCzAnfM975yX9wvv
vWDg85l/fJ+PMdx377nnnnPuOd9z7n15pvuQXq/16z6kd4/u9zw1qPvAXr17
DL7nyQGDqKn9TYHATb0CgUDuPQH8buhX+cFPb/yQf7j8/mf+X3tTV1dn5Ak8
fo1tHaTtwoUL5tKlS/yvH/r0Q9uVK1c86bWzWHqW/9fZlJaWmlmzZpnBgweb
MWPGmPPnz3O/QYMGmZycHBMVFWV69uzZ3rzxxhtE6eDBgzalh/hnp9ZItBcm
3nnnHXP69Gn+V1f++Q+tzt7Y2Ghmz55thg8fbt58800TFxcX6CZjMzMzzdix
Y3nsggULzOXLl0PG1tbWmrlz5zJdzB0fHy+C62KmTZtmjhw5wv0LCwvN66+/
zr+78BMqsFvNkiVLzObNm7k7/r9s2TL+vaqqivVz8eJF895775kNGzaApUd4
2C2tDktISKCZsL72PPuWLVugNpHUba2Oj46ONuHh4SyFM2fOmN69e5uGhgYd
/vbbb5v09HQW6NSpU82+fftChkdERJjly5fbQujfv7+pqal5xCGvlJQUfo0Z
VE8uXKm8/lHUTsZjW8yjYqmQz4kTJ7jx+PHjUGMgyO+CbOdYyMyZMyGAbj5D
LMvqaEaOHMma3rlzJ1vJmjVroP2urQ1tB/6tiXmL9OnTByt7WMhWV1dzkz4g
v27dOp1106ZNtt1B4uhKsz4i63aITBh15+QaxDVs2DDdOaagoMC89dZbst2D
rLylS5eaCRMmmKampq4+Q5SL3Nxc3lDYIKNGjTL5+fmBbtcwbv78+bxImN6k
SZPMokWLxDw7mpKSEjNgwABbVjExMWbx4sU6FGY2YsQI3ptYYWxsrO3E3ATl
xsY1CCosLIytHE9GRoYZP368bSTl5eX2lofKiKRJTU3t6jNUTXLbtm1mzpw5
Kqxurc7WAXZi1q9fzzNC05WVlbasSE2mV69e2J48FludvIUOzcrKYg9QVFRk
duzYYSZOnCjqCcKHmcjISN7CRDrow8k1iAsTz5s3j3czvOzGjRttcRHDpl+/
fswFlIvfyTF09Rmq4oJ0p0yZwlM6xOU3W3Z2NtsGZoUtwDwpiOlskydP5t13
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\
\>"]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f0f807d0-97e6-4ba6-9c9e-efadec6f32d6"],

Cell[CellGroupData[{

Cell["Set and SetDelayed", "Section",
 CellChangeTimes->{{3.763744894950493*^9, 3.763744898000825*^9}}],

Cell["\<\
Up until now, we have assigned expressions to variables using =, which is \
called Set\
\>", "Text",
 CellChangeTimes->{{3.763744899501994*^9, 3.7637449155673857`*^9}}],

Cell["\<\
Whenever we write lhs = rhs, the rhs is evaluated immediately\
\>", "Text",
 CellChangeTimes->{{3.7637449415396557`*^9, 3.763744955511052*^9}}],

Cell[TextData[{
 "Sometimes we don\[CloseCurlyQuote]t want to evaluate the rhs immediately. \
Instead, we want to wait until we encounter lhs somewhere else in our \
program. When we encounter lhs, it is replaced by rhs and ",
 StyleBox["only then",
  FontWeight->"Bold"],
 " evaluated"
}], "Text",
 CellChangeTimes->{{3.76374495704321*^9, 3.763745014465681*^9}}],

Cell["This is denoted SetDelayed, and is written :=", "Text",
 CellChangeTimes->{{3.7637450158705053`*^9, 3.76374502337392*^9}}],

Cell[TextData[{
 StyleBox["For example, ",
  FontWeight->"Bold"],
 "we will use ",
 StyleBox["Set",
  FontWeight->"Bold"],
 " for x, and ",
 StyleBox["SetDelayed",
  FontWeight->"Bold"],
 " for y"
}], "Text",
 CellChangeTimes->{{3.763745062088191*^9, 3.763745085086185*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x", "=", 
  RowBox[{"Random", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"y", ":=", 
  RowBox[{"Random", "[", "]"}]}]}], "Input",
 CellChangeTimes->{{3.763745065497921*^9, 3.763745089283218*^9}}],

Cell[BoxData["0.7148239848919988`"], "Output",
 CellChangeTimes->{3.764014697786359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.7637450967128696`*^9}],

Cell[BoxData["0.7148239848919988`"], "Output",
 CellChangeTimes->{3.76401469784643*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.76374509760927*^9}],

Cell[BoxData["0.7148239848919988`"], "Output",
 CellChangeTimes->{3.76401469791755*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.763745098313662*^9}],

Cell[BoxData["0.7148239848919988`"], "Output",
 CellChangeTimes->{3.7640146979588623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["y"], "Input",
 CellChangeTimes->{3.763745099410491*^9}],

Cell[BoxData["0.8946225808138553`"], "Output",
 CellChangeTimes->{3.7640146980115147`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["y"], "Input",
 CellChangeTimes->{3.763745100084568*^9}],

Cell[BoxData["0.9024392700824266`"], "Output",
 CellChangeTimes->{3.764014698062654*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["y"], "Input",
 CellChangeTimes->{3.763745100875613*^9}],

Cell[BoxData["0.07645279608008289`"], "Output",
 CellChangeTimes->{3.7640146981115513`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6514e295-bb8a-441d-b7bd-40aeae0ba4cf"],

Cell[CellGroupData[{

Cell["Defining functions", "Section",
 CellChangeTimes->{{3.763744366798648*^9, 3.763744382224386*^9}}],

Cell["Functions are just another type of expression in Mathematica", "Text",
 CellChangeTimes->{{3.7637444727309*^9, 3.7637444845854597`*^9}}],

Cell[TextData[{
 "Their argument lists take the form of ",
 StyleBox["patterns. ",
  FontWeight->"Bold"],
 "We will discuss patterns in more depth in the next lecture"
}], "Text",
 CellChangeTimes->{{3.763744487777025*^9, 3.763744499387391*^9}, {
  3.76374454157275*^9, 3.763744553767276*^9}}],

Cell[TextData[{
 "For now, we will make use of one kind of pattern: ",
 StyleBox["x_\n",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "which matches any expression and calls it ",
 StyleBox["x.\n",
  FontSlant->"Italic"],
 StyleBox["For example:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.763744555155366*^9, 3.763744607160864*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"addOne", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.763744596665874*^9, 3.763744601993044*^9}, 
   3.763745123769409*^9}],

Cell[TextData[{
 "This function can be called with any kind of argument. That argument will \
be called ",
 StyleBox["x",
  FontSlant->"Italic"],
 " in the body of the function, which gives a result by adding one"
}], "Text",
 CellChangeTimes->{{3.763744615304699*^9, 3.763744640707953*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"addOne", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.763744642023451*^9, 3.763744644916704*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.764014698200026*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"addOne", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "4", ",", "5"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7637446458222017`*^9, 3.7637446492798643`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.764014698284931*^9}]
}, Open  ]],

Cell["\<\
There are much more sophisticated patterns than just \
\[OpenCurlyDoubleQuote]match any expression.\[CloseCurlyDoubleQuote] We will \
cover these later.\
\>", "Text",
 CellChangeTimes->{{3.763744651607274*^9, 3.763744681249196*^9}}],

Cell["\<\
Suppose we want to recursively compute the factorial
Base case: fac(0) = 1
Recursive definition: fac(n) = n*fac(n-1)\
\>", "Text",
 CellChangeTimes->{{3.7637443837940083`*^9, 3.763744428726118*^9}, {
  3.7637446855586357`*^9, 3.763744687984498*^9}}],

Cell["\<\
This is simple to define in Mathematica.
We begin with the base case\
\>", "Text",
 CellChangeTimes->{{3.763744693191021*^9, 3.763744718756913*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fac", "[", "0", "]"}], ":=", "1"}]], "Input",
 CellChangeTimes->{{3.763744702415689*^9, 3.763744704581748*^9}, 
   3.763745128927702*^9}],

Cell["Now, fac[0] will evaluate to 1", "Text",
 CellChangeTimes->{{3.763744721300274*^9, 3.763744728050556*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fac", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.763744707663625*^9, 3.763744708408098*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7640146985845823`*^9}]
}, Open  ]],

Cell["\<\
We don\[CloseCurlyQuote]t have a rule for the general case, so fac[n] will \
remain unevaluated:\
\>", "Text",
 CellChangeTimes->{{3.763744733932872*^9, 3.7637447580607777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fac", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.763744709936459*^9, 3.763744710729124*^9}}],

Cell[BoxData[
 RowBox[{"fac", "[", "1", "]"}]], "Output",
 CellChangeTimes->{3.764014698635775*^9}]
}, Open  ]],

Cell["Defining the general case:", "Text",
 CellChangeTimes->{{3.76374476124261*^9, 3.763744767426716*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fac", "[", "n_", "]"}], ":=", 
  RowBox[{"n", "*", 
   RowBox[{"fac", "[", 
    RowBox[{"n", "-", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.763744768166182*^9, 3.763744773256482*^9}, 
   3.763744862831215*^9, 3.7637451404886017`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fac", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.7637447749265337`*^9, 3.763744775668865*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.764014698815551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fac", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.763744776552127*^9, 3.763744777390856*^9}}],

Cell[BoxData["3628800"], "Output",
 CellChangeTimes->{3.7640146988625193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "!"}]], "Input",
 CellChangeTimes->{{3.763744778999363*^9, 3.763744779488647*^9}}],

Cell[BoxData["3628800"], "Output",
 CellChangeTimes->{3.764014698913081*^9}]
}, Open  ]],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s do a similar exercise with the Fibonacci sequence:\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    SubscriptBox["F", "0"], "=", "0"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["F", "1"], "=", "1"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["F", "n"], "=", 
    RowBox[{
     SubscriptBox["F", 
      RowBox[{"n", "-", "1"}]], "+", 
     SubscriptBox["F", 
      RowBox[{"n", "-", "2"}]]}]}], TraditionalForm]}],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.7637447947215643`*^9, 3.7637448454068527`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fib", "[", "0", "]"}], ":=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fib", "[", "1", "]"}], ":=", "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fib", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"fib", "[", 
    RowBox[{"n", "-", "1"}], "]"}], "+", 
   RowBox[{"fib", "[", 
    RowBox[{"n", "-", "2"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.76374484932386*^9, 3.76374486055851*^9}, {
  3.7637451623737793`*^9, 3.763745168035763*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fib", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.7637451691287603`*^9, 3.76374516985737*^9}}],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.764014698988718*^9}]
}, Open  ]],

Cell["\<\
Of course, Mathematica also has this built in, so we can check our work...\
\>", "Text",
 CellChangeTimes->{{3.7637451804695683`*^9, 3.763745192676355*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.763745170970305*^9, 3.7637451761252327`*^9}}],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.764014699035171*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"cfc8d7fc-28f7-4b42-9864-fbbba30dec8a"],

Cell[CellGroupData[{

Cell["Solving recurrence relations", "Section",
 CellChangeTimes->{{3.763745256646412*^9, 3.763745260346157*^9}}],

Cell["Suppose we have the recurrence relation", "Text",
 CellChangeTimes->{{3.763745405011569*^9, 3.763745411414289*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["a", "0"], "=", "2"}], "\[IndentingNewLine]", 
         RowBox[{
          SubscriptBox["a", "1"], "=", "3"}], "\[IndentingNewLine]", 
         RowBox[{
          SubscriptBox["a", "n"], "=", 
          RowBox[{
           RowBox[{"7", 
            SubscriptBox["a", 
             RowBox[{"n", "-", "1"}]]}], "-", 
           RowBox[{"10", 
            SubscriptBox["a", 
             RowBox[{"n", "-", "2"}]]}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], TraditionalForm]]]], "Text",
 CellChangeTimes->{{3.763745472392723*^9, 3.763745490341186*^9}}],

Cell["\<\
We can easily create a function to recursively evaluate this sequence\
\>", "Text",
 CellChangeTimes->{{3.7637454972678432`*^9, 3.7637455111155*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "[", "0", "]"}], ":=", "2"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "[", "1", "]"}], ":=", "3"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"7", 
    RowBox[{"a", "[", 
     RowBox[{"n", "-", "1"}], "]"}]}], "-", 
   RowBox[{"10", 
    RowBox[{"a", "[", 
     RowBox[{"n", "-", "2"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.763745511934895*^9, 3.7637455318274517`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.763745532723859*^9, 3.763745533642973*^9}}],

Cell[BoxData[
 RowBox[{"-", "3252819"}]], "Output",
 CellChangeTimes->{3.7640146991012497`*^9}]
}, Open  ]],

Cell[TextData[{
 "What if we want to know a general (non-recursive formula)?\nFirst, \
concentrate on the recursive definition ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "n"], "=", 
    RowBox[{
     RowBox[{"7", 
      SubscriptBox["a", 
       RowBox[{"n", "-", "1"}]]}], "-", 
     RowBox[{"10", 
      SubscriptBox["a", 
       RowBox[{"n", "-", "2"}]]}]}]}], TraditionalForm]]],
 " (ignoring boundary conditions)\nWe can solve this recurrence by making the \
ansatz that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "is given by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["r", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for some ",
 StyleBox["r\n",
  FontSlant->"Italic"],
 "In that case,"
}], "Text",
 CellChangeTimes->{{3.7637455364103603`*^9, 3.763745578074292*^9}, {
  3.763745883480447*^9, 3.763745904136417*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SuperscriptBox["r", 
           RowBox[{"n", "-", "2"}]], "(", 
          RowBox[{
           SuperscriptBox["r", "2"], "-", 
           RowBox[{"7", "r"}], "+", "10"}], ")"}], "=", "0"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], TraditionalForm]]]], "Text",
 CellChangeTimes->{{3.763745584151515*^9, 3.763745608127069*^9}}],

Cell["So, we look for solutions to this equation.", "Text",
 CellChangeTimes->{{3.763745612036998*^9, 3.763745627910033*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   SuperscriptBox["r", "2"], "-", 
   RowBox[{"7", "r"}], "+", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.763745628568654*^9, 3.763745647452922*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "5"}], "+", "r"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "r"}], ")"}]}]], "Output",
 CellChangeTimes->{3.764014699136629*^9}]
}, Open  ]],

Cell[TextData[{
 "So, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", "5"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", "2"}], TraditionalForm]]],
 " satisfy this relationship.\nThe general solution will be given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "n"], "=", 
    RowBox[{
     RowBox[{"c", "*", 
      SuperscriptBox["5", "n"]}], "+", 
     RowBox[{"d", "*", 
      SuperscriptBox["2", "n"]}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.763745908230575*^9, 3.7637459620259953`*^9}}],

Cell[TextData[{
 "We can easily solve the system of equations to find the values of ",
 StyleBox["c",
  FontSlant->"Italic"],
 " and ",
 StyleBox["d",
  FontSlant->"Italic"],
 ".\nBut we can also let Mathematica help..."
}], "Text",
 CellChangeTimes->{{3.763771841765093*^9, 3.7637718441857862`*^9}, {
  3.763772704831451*^9, 3.7637727239901247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"expr", "=", 
  RowBox[{
   RowBox[{"c", "*", 
    SuperscriptBox["5", "n"]}], "+", 
   RowBox[{"d", "*", 
    SuperscriptBox["2", "n"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"case0", "=", 
  RowBox[{"expr", "/.", 
   RowBox[{"n", "\[Rule]", "0"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"case1", "=", 
  RowBox[{"expr", "/.", 
   RowBox[{"n", "\[Rule]", "1"}]}]}]}], "Input",
 CellChangeTimes->{{3.763772735493187*^9, 3.763772771324069*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["5", "n"], " ", "c"}], "+", 
  RowBox[{
   SuperscriptBox["2", "n"], " ", "d"}]}]], "Output",
 CellChangeTimes->{3.764014699197742*^9}],

Cell[BoxData[
 RowBox[{"c", "+", "d"}]], "Output",
 CellChangeTimes->{3.76401469920717*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"5", " ", "c"}], "+", 
  RowBox[{"2", " ", "d"}]}]], "Output",
 CellChangeTimes->{3.764014699214601*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"case0", "\[Equal]", "2"}], ",", 
      RowBox[{"case1", "\[Equal]", "3"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763772725546067*^9, 3.763772727840966*^9}, {
  3.763772774476364*^9, 3.76377278512421*^9}, {3.763772821376019*^9, 
  3.763772822175271*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", "3"]}]}], ",", 
    RowBox[{"d", "\[Rule]", 
     FractionBox["7", "3"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7640146993141127`*^9}]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s check our formula", "Text",
 CellChangeTimes->{{3.763772811399295*^9, 3.7637728146265574`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "/.", 
  RowBox[{
  "soln", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.7637728164272833`*^9, 3.763772826894628*^9}, {
  3.7637728720939827`*^9, 3.763772873813839*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"7", " ", 
    SuperscriptBox["2", "n"]}], "3"], "-", 
  FractionBox[
   SuperscriptBox["5", "n"], "3"]}]], "Output",
 CellChangeTimes->{3.764014699430681*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"expr", "/.", 
     RowBox[{"soln", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
     "/.", 
    RowBox[{"n", "\[Rule]", "10"}]}], " ", ")"}], "\[Equal]", 
  RowBox[{"a", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.763772830668364*^9, 3.76377286916431*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7640146994964533`*^9}]
}, Open  ]],

Cell["ClearAll deletes all the definitions we made for a", "Text",
 CellChangeTimes->{{3.763772949393573*^9, 3.763772958389118*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.76377290394742*^9, 3.763772904417536*^9}, {
  3.763772943538282*^9, 3.763772945270198*^9}}],

Cell["\<\
Mathematica can also solve the recurrence directly using RSolve\
\>", "Text",
 CellChangeTimes->{{3.763772964594274*^9, 3.763772971552928*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], "\[Equal]", "2"}], ",", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], "\[Equal]", "3"}], ",", 
     RowBox[{
      RowBox[{"a", "[", "n", "]"}], "==", 
      RowBox[{
       RowBox[{"7", 
        RowBox[{"a", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}], "-", 
       RowBox[{"10", 
        RowBox[{"a", "[", 
         RowBox[{"n", "-", "2"}], "]"}]}]}]}]}], "}"}], ",", "a", ",", "n"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.763772878184586*^9, 3.7637729233392344`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"a", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"7", " ", 
          SuperscriptBox["2", "n"]}], "-", 
         SuperscriptBox["5", "n"]}], ")"}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.764014699583458*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8da40911-864e-4cfc-a4ce-7485a984aca9"],

Cell[CellGroupData[{

Cell["More complicated functions and local variables", "Section",
 CellChangeTimes->{{3.763773811596167*^9, 3.76377381648637*^9}}],

Cell["\<\
Sometimes we want to introduce local variables in a function for intermediate \
values in long calculations\
\>", "Text",
 CellChangeTimes->{{3.763773818474226*^9, 3.7637738336082706`*^9}}],

Cell["This can be achieved using Module", "Text",
 CellChangeTimes->{{3.763773835801655*^9, 3.763773840034631*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", "z"}], "}"}]], "Input",
 CellChangeTimes->{
  3.763773849756057*^9, {3.763774011084751*^9, 3.763774012373877*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7148239848919988`", ",", "0.2556668132758889`", ",", "z"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7640146996311893`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "This", " ", "is", " ", "a", " ", "comment", " ", "by", " ", "the", 
        " ", "way"}], ")"}], "\[IndentingNewLine]", "x"}], ",", " ", "y", ",",
      " ", 
     RowBox[{
     "and", " ", "z", " ", "are", " ", "declared", " ", "as", " ", "local", 
      " ", "variables"}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"y", "=", 
     RowBox[{"x", "+", "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"z", "=", 
     RowBox[{"y", "*", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7637738430671253`*^9, 3.763773951341309*^9}, {
  3.7637740166843348`*^9, 3.7637740285706987`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "4"}], "}"}]], "Print",
 CellChangeTimes->{3.764014699696718*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.76377386752258*^9, 3.763773870456437*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7148239848919988`", ",", "0.08011859125563403`", ",", "z"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.7640146997638397`*^9}]
}, Open  ]],

Cell[TextData[{
 "Mathematica also has other ",
 StyleBox["scoping mechanisms",
  FontWeight->"Bold"],
 " (i.e. for creating variables with local scope)\nSee e.g. Block, With"
}], "Text",
 CellChangeTimes->{{3.76377396830901*^9, 3.763773996834138*^9}}],

Cell["For our uses, Module is sufficient", "Text",
 CellChangeTimes->{{3.7637739995242777`*^9, 3.7637740044121113`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ccf3fb7a-2a8a-437a-a313-05ab3abc830d"],

Cell[CellGroupData[{

Cell["Functional style programming", "Section",
 CellChangeTimes->{{3.7637740572825947`*^9, 3.763774061232439*^9}}],

Cell[TextData[{
 "Mathematica is a ",
 StyleBox["multi-paradigm",
  FontWeight->"Bold"],
 " programming language"
}], "Text",
 CellChangeTimes->{{3.763774062450678*^9, 3.763774070883967*^9}}],

Cell["\<\
It supports both functional and imperative programming, but functional \
constructs are often very natural\
\>", "Text",
 CellChangeTimes->{{3.763774072433456*^9, 3.76377409194269*^9}}],

Cell["\<\
For example, applying a function f to a list is known as mapping f over the \
list\
\>", "Text",
 CellChangeTimes->{{3.7637740963678923`*^9, 3.7637741087875433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mylist", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    SuperscriptBox["i", "2"], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763774110328848*^9, 3.763774131607683*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.76401469983004*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Sqrt", ",", "mylist"}], "]"}]], "Input",
 CellChangeTimes->{{3.763774134673296*^9, 3.763774140000662*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.7640146998969*^9}]
}, Open  ]],

Cell["\<\
Map is considered so important in Mathematica it has its own syntax\
\>", "Text",
 CellChangeTimes->{{3.7637741467598867`*^9, 3.763774155187275*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "/@", "mylist"}]], "Input",
 CellChangeTimes->{{3.763774156182971*^9, 3.763774161646604*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.764014699950629*^9}]
}, Open  ]],

Cell["We can define more complicated functions if we want", "Text",
 CellChangeTimes->{{3.7637741920797997`*^9, 3.763774203412602*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Sin", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", "x", "]"}], "+", 
    SuperscriptBox["x", 
     RowBox[{"2", "/", "3"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7637742042952147`*^9, 3.7637742900872593`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", "mylist"}], "]"}]], "Input",
 CellChangeTimes->{{3.763774218984551*^9, 3.763774223321907*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sin", "[", "2", "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["2", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["3", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["2", 
       RowBox[{"2", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"5", "+", 
     RowBox[{"5", " ", 
      SuperscriptBox["5", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"6", "+", 
     RowBox[{"6", " ", 
      SuperscriptBox["6", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"7", "+", 
     RowBox[{"7", " ", 
      SuperscriptBox["7", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", "24", "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"9", "+", 
     RowBox[{"9", " ", 
      SuperscriptBox["3", 
       RowBox[{"2", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"10", "+", 
     RowBox[{"10", " ", 
      SuperscriptBox["10", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.764014700054263*^9}]
}, Open  ]],

Cell[TextData[{
 "Sometimes we want to create an ",
 StyleBox["anonymous function ",
  FontWeight->"Bold"],
 "so that we don\[CloseCurlyQuote]t need to name it"
}], "Text",
 CellChangeTimes->{{3.763774298562167*^9, 3.763774320825018*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"Sqrt", "[", "#", "]"}], "+", 
      SuperscriptBox["#", 
       RowBox[{"2", "/", "3"}]]}], "]"}], "&"}], ",", "mylist"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.763774323131871*^9, 3.763774335281724*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sin", "[", "2", "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["2", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["3", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["2", 
       RowBox[{"2", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"5", "+", 
     RowBox[{"5", " ", 
      SuperscriptBox["5", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"6", "+", 
     RowBox[{"6", " ", 
      SuperscriptBox["6", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"7", "+", 
     RowBox[{"7", " ", 
      SuperscriptBox["7", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", "24", "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"9", "+", 
     RowBox[{"9", " ", 
      SuperscriptBox["3", 
       RowBox[{"2", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"10", "+", 
     RowBox[{"10", " ", 
      SuperscriptBox["10", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.764014700112076*^9}]
}, Open  ]],

Cell["\<\
Here # indicates the argument, and & tells Mathematica that the preceding \
expression is a function\
\>", "Text",
 CellChangeTimes->{{3.763774337498392*^9, 3.763774353098941*^9}}],

Cell["This notation can easily become hard to read, so be careful", "Text",
 CellChangeTimes->{{3.76377435530455*^9, 3.763774363365453*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", "#", "]"}], "+", 
     SuperscriptBox["#", 
      RowBox[{"2", "/", "3"}]]}], "]"}], "&"}], "/@", "mylist"}]], "Input",
 CellChangeTimes->{{3.763774368456224*^9, 3.763774376617384*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sin", "[", "2", "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["2", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["3", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["2", 
       RowBox[{"2", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"5", "+", 
     RowBox[{"5", " ", 
      SuperscriptBox["5", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"6", "+", 
     RowBox[{"6", " ", 
      SuperscriptBox["6", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"7", "+", 
     RowBox[{"7", " ", 
      SuperscriptBox["7", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", "24", "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"9", "+", 
     RowBox[{"9", " ", 
      SuperscriptBox["3", 
       RowBox[{"2", "/", "3"}]]}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"10", "+", 
     RowBox[{"10", " ", 
      SuperscriptBox["10", 
       RowBox[{"1", "/", "3"}]]}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7640147001694183`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"273c7627-1fb9-4f2b-9b6a-11d5fa701d1d"],

Cell[CellGroupData[{

Cell["More functional programming", "Section",
 CellChangeTimes->{{3.763774407520176*^9, 3.763774410577619*^9}}],

Cell["Recall our list", "Text",
 CellChangeTimes->{{3.763774412134416*^9, 3.7637744237580748`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["mylist"], "Input",
 CellChangeTimes->{{3.763774416560261*^9, 3.763774418721118*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.76401470022828*^9}]
}, Open  ]],

Cell["We can apply filters to the list using Select", "Text",
 CellChangeTimes->{{3.763774427045586*^9, 3.763774432851581*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"mylist", ",", "EvenQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.763774433447912*^9, 3.763774438820294*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "16", ",", "36", ",", "64", ",", "100"}], "}"}]], "Output",\

 CellChangeTimes->{3.76401470028616*^9}]
}, Open  ]],

Cell["We can combine this with anonymous functions", "Text",
 CellChangeTimes->{{3.763774454252036*^9, 3.763774459259923*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"mylist", ",", 
   RowBox[{
    RowBox[{"#", ">", "20"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763774442955428*^9, 3.7637744516049337`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "36", ",", "49", ",", "64", ",", "81", ",", "100"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7640147003458443`*^9}]
}, Open  ]],

Cell["\<\
Sometimes we want to apply a function to a list for its side-effect rather \
than its return-value\
\>", "Text",
 CellChangeTimes->{{3.763774655532866*^9, 3.763774670465958*^9}}],

Cell["For this we have Scan", "Text",
 CellChangeTimes->{{3.763774672972233*^9, 3.7637746756733637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Scan", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Sqrt", "[", "#", "]"}], "]"}], "&"}], ",", "mylist"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7637746796023893`*^9, 3.763774695893324*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.7640147004014063`*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.7640147004114237`*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.7640147004223146`*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.764014700432849*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.764014700443914*^9}],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.764014700455091*^9}],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.76401470046626*^9}],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.764014700476782*^9}],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.7640147004873743`*^9}],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.7640147004982243`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
There are a ton more functional programming facilities in Mathematica\
\>", "Text",
 CellChangeTimes->{{3.763774593488134*^9, 3.7637746019997807`*^9}}],

Cell["See e.g. Nest, Fold, Apply", "Text",
 CellChangeTimes->{{3.763774603269929*^9, 3.763774649949233*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mylist", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "50"}], "}"}], ",", "20"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.76398174306181*^9, 3.763981777852178*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "49", ",", "26", ",", "21", ",", "18", ",", "45", ",", "11", ",", "32", ",",
    "29", ",", "38", ",", "46", ",", "9", ",", "46", ",", "44", ",", "32", 
   ",", "5", ",", "50", ",", "45", ",", "43", ",", "30", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.764014700563179*^9}]
}, Open  ]],

Cell["Can we get the sum of all of these entries?", "Text",
 CellChangeTimes->{{3.76398181299617*^9, 3.7639818196517763`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "[", "mylist", "]"}]], "Input",
 CellChangeTimes->{{3.763981839527555*^9, 3.763981841568863*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "49", ",", "26", ",", "21", ",", "18", ",", "45", ",", "11", ",", "32", ",",
    "29", ",", "38", ",", "46", ",", "9", ",", "46", ",", "44", ",", "32", 
   ",", "5", ",", "50", ",", "45", ",", "43", ",", "30", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.764014700619763*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.763981830605875*^9, 3.763981833371257*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.764014700678767*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.763981834127087*^9, 3.763981837923234*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.764014700735854*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"Plus", ",", "mylist"}], "]"}]], "Input",
 CellChangeTimes->{{3.7639817810797443`*^9, 3.7639817888266563`*^9}}],

Cell[BoxData["620"], "Output",
 CellChangeTimes->{3.764014700783896*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", "mylist", "]"}]], "Input",
 CellChangeTimes->{{3.763981795944285*^9, 3.7639817975871363`*^9}}],

Cell[BoxData["620"], "Output",
 CellChangeTimes->{3.764014700845896*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"284e6635-d474-477e-908e-8e5a190b88ec"],

Cell[CellGroupData[{

Cell["Procedural control flow", "Section",
 CellChangeTimes->{{3.763774818457141*^9, 3.763774821338194*^9}}],

Cell["\<\
Mathematica also has procedural control flow (perhaps more familiar from e.g. \
Julia)\
\>", "Text",
 CellChangeTimes->{{3.7637748223274612`*^9, 3.7637748325287933`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x", "=", 
  RowBox[{"RandomInteger", "[", "200", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"EvenQ", "[", "x", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<x is even!\>\"", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<x is odd!\>\"", "]"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.763774840266121*^9, 3.763774889533504*^9}}],

Cell[BoxData["108"], "Output",
 CellChangeTimes->{3.764014700900854*^9}],

Cell[BoxData["\<\"x is even!\"\>"], "Print",
 CellChangeTimes->{3.76401470091075*^9}]
}, Open  ]],

Cell["Which can be used for many if-else clauses", "Text",
 CellChangeTimes->{{3.7637753114532223`*^9, 3.763775331818533*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Which", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{"x", ",", "2"}], "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"Print", "[", "\"\<x mod 2 == 0\>\"", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{"x", ",", "3"}], "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"Print", "[", "\"\<x mod 3 == 0\>\"", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{"x", ",", "4"}], "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"Print", "[", "\"\<x mod 4 == 0\>\"", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{"x", ",", "5"}], "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"Print", "[", "\"\<x mod 5 == 0\>\"", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{"x", ",", "6"}], "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"Print", "[", "\"\<x mod 6 == 0\>\"", "]"}], ",", 
   "\[IndentingNewLine]", "True", ",", 
   RowBox[{"Print", "[", "\"\<I give up...\>\"", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.763775351562882*^9, 3.7637754520452337`*^9}}],

Cell[BoxData["\<\"x mod 2 == 0\"\>"], "Print",
 CellChangeTimes->{3.764014700956023*^9}]
}, Open  ]],

Cell[TextData[{
 "The simplest loop is the Do loop, which repeats the contents ",
 StyleBox["n",
  FontSlant->"Italic"],
 " times"
}], "Text",
 CellChangeTimes->{{3.763774903695709*^9, 3.76377492895861*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"RandomInteger", "[", "200", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"EvenQ", "[", "x", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<x is even!\>\"", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<x is odd!\>\"", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", "10"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.763774912934265*^9, 3.7637749199882793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.764014701014048*^9}],

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.7640147010246058`*^9}],

Cell[BoxData["\<\"x is even!\"\>"], "Print",
 CellChangeTimes->{3.764014701035536*^9}],

Cell[BoxData["\<\"x is even!\"\>"], "Print",
 CellChangeTimes->{3.7640147010468483`*^9}],

Cell[BoxData["\<\"x is even!\"\>"], "Print",
 CellChangeTimes->{3.764014701058289*^9}],

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.764014701069128*^9}],

Cell[BoxData["\<\"x is even!\"\>"], "Print",
 CellChangeTimes->{3.764014701079632*^9}],

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.764014701090419*^9}],

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.764014701101791*^9}],

Cell[BoxData["\<\"x is even!\"\>"], "Print",
 CellChangeTimes->{3.76401470111285*^9}]
}, Open  ]]
}, Open  ]],

Cell["We also have traditional for loops", "Text",
 CellChangeTimes->{{3.763774936782413*^9, 3.763774940892807*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "0"}], ",", 
   RowBox[{"i", "<", "10"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Iteration \>\"", ",", "i"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"x", "=", 
     RowBox[{"RandomInteger", "[", "200", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"EvenQ", "[", "x", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<x is even!\>\"", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<x is odd!\>\"", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.7637749419064293`*^9, 3.763775002400324*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Iteration ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014701227663*^9}],

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.7640147012364273`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Iteration ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014701247328*^9}],

Cell[BoxData["\<\"x is even!\"\>"], "Print",
 CellChangeTimes->{3.7640147012581787`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Iteration ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014701268683*^9}],

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.76401470127971*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Iteration ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014701291514*^9}],

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.764014701303451*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Iteration ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147013152637`*^9}],

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.7640147013256493`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Iteration ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147013361673`*^9}],

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.7640147013477592`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["Iteration ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014701359261*^9}],

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.7640147013706284`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm["Iteration ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147013816*^9}],

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.764014701393105*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["Iteration ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014701403551*^9}],

Cell[BoxData["\<\"x is odd!\"\>"], "Print",
 CellChangeTimes->{3.764014701415413*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm["Iteration ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014701426668*^9}],

Cell[BoxData["\<\"x is even!\"\>"], "Print",
 CellChangeTimes->{3.764014701437337*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e67bfd9b-e8ff-479e-be26-9095a01b6aeb"],

Cell[CellGroupData[{

Cell["Application: merge sort", "Section",
 CellChangeTimes->{{3.763773251055151*^9, 3.763773252142147*^9}, {
  3.763773536564106*^9, 3.763773540160736*^9}}],

Cell["\<\
Merge sort is a recursive algorithm
Given a list, we:
1. find a midpoint
2. split the list at its midpoint into a left list and right list
3. sort the left and right lists using merge sort (recursion)
4. merge the two lists\
\>", "Text",
 CellChangeTimes->{{3.7637747094991093`*^9, 3.763774769784334*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mergeSort", "[", "theList_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"midpt", ",", "left", ",", "right"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "theList", "]"}], "\[GreaterEqual]", "2"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"midpt", "=", 
        RowBox[{"Ceiling", "[", 
         RowBox[{
          RowBox[{"Length", "[", "theList", "]"}], "/", "2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"left", "=", 
        RowBox[{"theList", "\[LeftDoubleBracket]", 
         RowBox[{"1", ";;", "midpt"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"right", "=", 
        RowBox[{"theList", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"midpt", "+", "1"}], ";;"}], "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"merge", "[", 
        RowBox[{
         RowBox[{"mergeSort", "[", "left", "]"}], ",", 
         RowBox[{"mergeSort", "[", "right", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "If", " ", "there", " ", "is", " ", "only", " ", "one", " ", "item"}],
         ",", " ", 
        RowBox[{"the", " ", "list", " ", "is", " ", "sorted"}]}], " ", "*)"}],
       "\[IndentingNewLine]", "theList"}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7637735439831944`*^9, 3.763773551386902*^9}, {
   3.7637740400603943`*^9, 3.7637740487549067`*^9}, {3.7637750617894707`*^9, 
   3.763775186896851*^9}, {3.7637755641148767`*^9, 3.763775577960082*^9}, {
   3.763775640826478*^9, 3.763775653043098*^9}, {3.7637757155884523`*^9, 
   3.763775715829507*^9}, {3.7637757494859867`*^9, 3.7637757518529882`*^9}, {
   3.7637757924667273`*^9, 3.763775848753921*^9}, 3.763775925592552*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"merge", "[", 
   RowBox[{"left_", ",", "right_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ileft", ",", "iright"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ileft", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"iright", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ileft", ">", 
          RowBox[{"Length", "[", "left", "]"}]}], ",", 
         RowBox[{"right", "\[LeftDoubleBracket]", 
          RowBox[{"iright", "++"}], "\[RightDoubleBracket]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"iright", ">", 
          RowBox[{"Length", "[", "right", "]"}]}], ",", 
         RowBox[{"left", "\[LeftDoubleBracket]", 
          RowBox[{"ileft", "++"}], "\[RightDoubleBracket]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "left", "\[LeftDoubleBracket]", "ileft", "\[RightDoubleBracket]"}], 
          "<", 
          RowBox[{
          "right", "\[LeftDoubleBracket]", "iright", 
           "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{"left", "\[LeftDoubleBracket]", 
          RowBox[{"ileft", "++"}], "\[RightDoubleBracket]"}], ",", 
         "\[IndentingNewLine]", "True", ",", 
         RowBox[{"right", "\[LeftDoubleBracket]", 
          RowBox[{"iright", "++"}], "\[RightDoubleBracket]"}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "left", "]"}], "+", 
         RowBox[{"Length", "[", "right", "]"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.763775191515986*^9, 3.7637752127781687`*^9}, {
   3.763775257899459*^9, 3.763775298862769*^9}, {3.763775463116583*^9, 
   3.763775536577462*^9}, {3.763775610445819*^9, 3.763775613437566*^9}, 
   3.76377570684525*^9, {3.763775890254548*^9, 3.763775894733838*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unsorted", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", "200", "]"}], ",", "20"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.763775858563076*^9, 3.763775871567891*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "143", ",", "73", ",", "105", ",", "97", ",", "63", ",", "46", ",", "41", 
   ",", "30", ",", "113", ",", "159", ",", "46", ",", "55", ",", "181", ",", 
   "29", ",", "173", ",", "170", ",", "126", ",", "136", ",", "103", ",", 
   "165"}], "}"}]], "Output",
 CellChangeTimes->{3.764014701619874*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unsorted", "//", "mergeSort"}]], "Input",
 CellChangeTimes->{{3.763775868763056*^9, 3.763775875135672*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "29", ",", "30", ",", "41", ",", "46", ",", "46", ",", "55", ",", "63", ",",
    "73", ",", "97", ",", "103", ",", "105", ",", "113", ",", "126", ",", 
   "136", ",", "143", ",", "159", ",", "165", ",", "170", ",", "173", ",", 
   "181"}], "}"}]], "Output",
 CellChangeTimes->{3.764014701679964*^9}]
}, Open  ]],

Cell[TextData[{
 "The runtime complexity of merge sort is given by the recurrence\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"t", "(", "n", ")"}], "=", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"t", "(", 
       RowBox[{"n", "/", "2"}], ")"}]}], "+", 
     RowBox[{"O", "(", "n"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")"
}], "Text",
 CellChangeTimes->{{3.763775902765167*^9, 3.76377595649629*^9}, {
  3.763775997868661*^9, 3.76377600068859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"t", "[", "n", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"t", "[", 
       RowBox[{"n", "/", "2"}], "]"}]}], "+", "n"}]}], ",", "t", ",", "n"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7637759587807083`*^9, 3.763775969170644*^9}, {
  3.763776002513852*^9, 3.763776007850861*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "n", " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       FractionBox[
        RowBox[{"n", " ", 
         RowBox[{"Log", "[", "n", "]"}]}], 
        RowBox[{"Log", "[", "2", "]"}]]}]}], "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.7640147017376623`*^9}]
}, Open  ]],

Cell["The runtime complexity is n log(n)", "Text",
 CellChangeTimes->{{3.7637760137521973`*^9, 3.763776029223761*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"027bee55-c5ab-4a62-986f-252d1610d825"],

Cell[CellGroupData[{

Cell["Functional-style merge sort", "Section",
 CellChangeTimes->{{3.7637760459043503`*^9, 3.763776050640231*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"functionalMergeSort", "[", 
   RowBox[{"{", "}"}], "]"}], ":=", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"functionalMergeSort", "[", 
   RowBox[{"{", "x_", "}"}], "]"}], ":=", 
  RowBox[{"{", "x", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"functionalMergeSort", "[", "theList_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"midpt", "=", 
      RowBox[{"Ceiling", "[", 
       RowBox[{
        RowBox[{"Length", "[", "theList", "]"}], "/", "2"}], "]"}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Apply", "[", 
     RowBox[{"merge", ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{"functionalMergeSort", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"theList", "\[LeftDoubleBracket]", 
           RowBox[{"1", ";;", "midpt"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"theList", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"midpt", "+", "1"}], ";;"}], "\[RightDoubleBracket]"}]}], 
         "}"}], ",", "1"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7637760550390577`*^9, 3.763776117348638*^9}, {
  3.763776160242648*^9, 3.763776194632873*^9}, {3.763776239895046*^9, 
  3.763776308274693*^9}, {3.7640036817073812`*^9, 3.764003691793735*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"functionalMergeSort", "[", "unsorted", "]"}]], "Input",
 CellChangeTimes->{{3.763776251749981*^9, 3.763776255481021*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "29", ",", "30", ",", "41", ",", "46", ",", "46", ",", "55", ",", "63", ",",
    "73", ",", "97", ",", "103", ",", "105", ",", "113", ",", "126", ",", 
   "136", ",", "143", ",", "159", ",", "165", ",", "170", ",", "173", ",", 
   "181"}], "}"}]], "Output",
 CellChangeTimes->{3.764014701847329*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b9d04488-db9a-4577-988b-8890b6ebaa11"],

Cell[CellGroupData[{

Cell[TextData[{
 "Finding all primes less than ",
 StyleBox["n",
  FontSlant->"Italic"]
}], "Section",
 CellChangeTimes->{{3.763810712011826*^9, 3.7638107174264183`*^9}}],

Cell["Algorithm known as the Sieve of Eratosthenes", "Text",
 CellChangeTimes->{{3.763810719734633*^9, 3.7638107323546333`*^9}}],

Cell[TextData[{
 "Choose a number ",
 StyleBox["n",
  FontSlant->"Italic"],
 "\nWe will find all primes less than ",
 StyleBox["n\n",
  FontSlant->"Italic"],
 "1. List all numbers 2 through ",
 StyleBox["n",
  FontSlant->"Italic"],
 "\n2. Starting with, ",
 StyleBox["p",
  FontSlant->"Italic"],
 "=2, mark all multiples of ",
 StyleBox["p",
  FontSlant->"Italic"],
 ", beginning with ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["p", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\ti.e. mark ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["p", "2"], ",", " ", 
    RowBox[{"p", "(", 
     RowBox[{"p", "+", "1"}], ")"}], ",", " ", 
    RowBox[{"p", "(", 
     RowBox[{"p", "+", "2"}], ")"}], ",", "..."}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " up to ",
 StyleBox["n\n",
  FontSlant->"Italic"],
 "3. Repeat step 2 with ",
 StyleBox["p",
  FontSlant->"Italic"],
 " the next unmarked number\n4. Terminate when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["p", "2"], ">", "n"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.763810744607646*^9, 3.76381076747394*^9}, {
  3.763810838397977*^9, 3.763811019199033*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sieve", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numlist", "=", 
      RowBox[{"Range", "[", "n", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Choose", " ", 
        RowBox[{
         StyleBox["p",
          FontSlant->"Italic"], ".", " ", "Find"}], " ", "the", " ", "next", 
        " ", "unmarked", " ", 
        RowBox[{"number", ".", " ", "Numbers"}], " ", "are", " ", "marked", 
        " ", "by", " ", "setting", " ", "them", " ", "to", " ", 
        RowBox[{"zero", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "numlist", "\[LeftDoubleBracket]", "p", "\[RightDoubleBracket]"}], 
          "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"numlist", "\[LeftDoubleBracket]", 
             RowBox[{"p", "*", "j"}], "\[RightDoubleBracket]"}], "=", "0"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"j", ",", "p", ",", 
             RowBox[{"n", "/", "p"}]}], "}"}]}], "\[IndentingNewLine]", 
          "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"p", ",", "2", ",", 
         SqrtBox["n"]}], "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Return", " ", "the", " ", "unmarked", " ", "numbers", " ", 
       RowBox[{"(", 
        RowBox[{
        "and", " ", "be", " ", "sure", " ", "to", " ", "skip", " ", "1"}], 
        ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{"numlist", ",", 
       RowBox[{
        RowBox[{"#", ">", "1"}], "&"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.76381110090965*^9, 3.7638111583833637`*^9}, {
  3.76381119738701*^9, 3.7638112973266573`*^9}, {3.7638113445729628`*^9, 
  3.763811365654079*^9}, {3.763811411491987*^9, 3.763811523565751*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sieve", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.763811583275776*^9, 3.763811584561356*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
   ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", 
   "73", ",", "79", ",", "83", ",", "89", ",", "97"}], "}"}]], "Output",
 CellChangeTimes->{3.764014701908045*^9}]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s check our work...", "Text",
 CellChangeTimes->{{3.7638115878675756`*^9, 3.763811591063962*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Range", "[", "100", "]"}], ",", "PrimeQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.763811568101781*^9, 3.76381158181138*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
   ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", 
   "73", ",", "79", ",", "83", ",", "89", ",", "97"}], "}"}]], "Output",
 CellChangeTimes->{3.764014701946786*^9}]
}, Open  ]],

Cell["We can also use a functional approach", "Text",
 CellChangeTimes->{{3.763811594253109*^9, 3.763811599180883*^9}, {
  3.7638137779734793`*^9, 3.7638137847517347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"primes", "[", "n_", "]"}], ":=", 
  RowBox[{"NestWhileList", "[", 
   RowBox[{"NextPrime", ",", "2", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"NextPrime", "[", "#", "]"}], "<", "n"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.763811694215423*^9, 3.763811719114544*^9}, {
  3.7638137433993692`*^9, 3.763813796518021*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"primes", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.763813798753499*^9, 3.7638138000038548`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
   ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", 
   "73", ",", "79", ",", "83", ",", "89", ",", "97"}], "}"}]], "Output",
 CellChangeTimes->{3.764014702013364*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"70c63b02-7879-40b8-a1eb-d5afc70d26a8"],

Cell[CellGroupData[{

Cell["Graph algorithms", "Section",
 CellChangeTimes->{{3.763829760646428*^9, 3.763829763406186*^9}}],

Cell["\<\
There is sophisticated built-in support for graphs and graph algorithms\
\>", "Text",
 CellChangeTimes->{{3.763829765573716*^9, 3.763829776524746*^9}}],

Cell["\<\
There are lots of built-in graphs obtainable using GraphData, e.g.\
\>", "Text",
 CellChangeTimes->{{3.7638307790370703`*^9, 3.7638307888353977`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", "]"}]], "Input",
 CellChangeTimes->{{3.763830789560315*^9, 3.763830790817821*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"\<\"AGraph\"\>", ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Andrasfai\"\>", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Andrasfai\"\>", ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Andrasfai\"\>", ",", "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Andrasfai\"\>", ",", "7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Andrasfai\"\>", ",", "8"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Andrasfai\"\>", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Andrasfai\"\>", ",", "10"}], "}"}], ",", 
           TemplateBox[{"6821"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"ZeroTwoNonbipartite\"\>", ",", 
             RowBox[{"{", 
              RowBox[{"7", ",", "48"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"ZeroTwoNonbipartite\"\>", ",", 
             RowBox[{"{", 
              RowBox[{"7", ",", "49"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"ZeroTwoNonbipartite\"\>", ",", 
             RowBox[{"{", 
              RowBox[{"7", ",", "50"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"ZeroTwoNonbipartite\"\>", ",", 
             RowBox[{"{", 
              RowBox[{"7", ",", "52"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"ZeroTwoNonbipartite\"\>", ",", 
             RowBox[{"{", 
              RowBox[{"7", ",", "53"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"ZeroTwoNonbipartite\"\>", ",", 
             RowBox[{"{", 
              RowBox[{"7", ",", "54"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"ZeroTwoNonbipartite\"\>", ",", 
             RowBox[{"{", 
              RowBox[{"7", ",", "55"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"ZeroTwoNonbipartite\"\>", ",", 
             RowBox[{"{", 
              RowBox[{"7", ",", "56"}], "}"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 188, 23760929043125938000, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 188, 23760929043125938000, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 188, 23760929043125938000, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[188]]], "Output",
 CellChangeTimes->{3.764014704264586*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"GraphData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<BananaTree\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", " ", "8"}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763829791135936*^9, 3.763829792928166*^9}, {
  3.763829928091107*^9, 3.7638299441477003`*^9}, {3.763830082998687*^9, 
  3.763830095421988*^9}, {3.763830164405322*^9, 3.763830164669867*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, {Null, 
       SparseArray[
       Automatic, {33, 33}, 0, {
        1, {{0, 2, 3, 4, 5, 6, 7, 8, 15, 17, 18, 19, 20, 21, 22, 23, 30, 32, 
          33, 34, 35, 36, 37, 38, 45, 47, 48, 49, 50, 51, 52, 53, 60, 64}, {{
          8}, {33}, {8}, {8}, {8}, {8}, {8}, {8}, {1}, {2}, {3}, {4}, {5}, {
          6}, {7}, {16}, {33}, {16}, {16}, {16}, {16}, {16}, {16}, {9}, {
          10}, {11}, {12}, {13}, {14}, {15}, {24}, {33}, {24}, {24}, {24}, {
          24}, {24}, {24}, {17}, {18}, {19}, {20}, {21}, {22}, {23}, {32}, {
          33}, {32}, {32}, {32}, {32}, {32}, {32}, {25}, {26}, {27}, {28}, {
          29}, {30}, {31}, {1}, {9}, {17}, {25}}}, Pattern}]}, {
      VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGBQBGIQveT+Pr45xg/sGaCg1t40bpfnHvsWXv/1U1JP2C/j
clMtZeqyZ9JuF7t57rG9640PX7wiL9mvV33SPO/sO3uONTJRKdbP4XyIKR/g
6q0LznVcuvcGbh7MPhgt7hHwR+IzswPM/o/JZ2K9TzA4wNRDhR1g5v27UvFS
zZDJAWbf9yeJC69tYYXzv+681fX3KTtcPUsYn+4mWXa4eTD7YPazNU517n4j
CLf/c19wiUq4AFw9xDx+uHlVxzWtJnELwu2bbMXo23JWCM1+Ybj6v+1fbl9v
FIabB7MPZj/jPSbOrvuScPvfvT5gqewlgWa/ONy8EpXp/yf8k4Db1zs9T6j5
gBSc/0EM6MEb0nD14PApkYabB7MPZj/EfG6Y/QcAtELpsg==
        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQveT+Pr45xg/sGaCg1t40bpfnHvsWXv/1U1JP2C/j
clMtZeqyZ9JuF7t57rG9640PX7wiL9mvV33SPO/sO3uONTJRKdbP4XyIKR/g
6q0LznVcuvcGbh7MPhgt7hHwR+IzswPM/o/JZ2K9TzA4wNRDhR1g5v27UvFS
zZDJAWbf9yeJC69tYYXzv+681fX3KTtcPUsYn+4mWXa4eTD7YPazNU517n4j
CLf/c19wiUq4AFw9xDx+uHlVxzWtJnELwu2bbMXo23JWCM1+Ybj6v+1fbl9v
FIabB7MPZj/jPSbOrvuScPvfvT5gqewlgWa/ONy8EpXp/yf8k4Db1zs9T6j5
gBSc/0EM6MEb0nD14PApkYabB7MPZj/EfG6Y/QcAtELpsg==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 8}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{1, 33}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{2, 8}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{3, 8}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{4, 8}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{5, 8}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{6, 8}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{9, 16}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{9, 33}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{10, 16}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{11, 16}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{12, 16}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{13, 16}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{14, 16}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{15, 16}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{17, 24}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{17, 33}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{18, 24}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{19, 24}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{20, 24}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{21, 24}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{22, 24}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{23, 24}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{25, 32}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{25, 33}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{26, 32}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{27, 32}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{28, 32}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{29, 32}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{30, 32}, 0.053143947465277105`]}, 
         {Arrowheads[0.], ArrowBox[{31, 32}, 0.053143947465277105`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.053143947465277105], DiskBox[2, 0.053143947465277105], 
         DiskBox[3, 0.053143947465277105], DiskBox[4, 0.053143947465277105], 
         DiskBox[5, 0.053143947465277105], DiskBox[6, 0.053143947465277105], 
         DiskBox[7, 0.053143947465277105], DiskBox[8, 0.053143947465277105], 
         DiskBox[9, 0.053143947465277105], DiskBox[10, 0.053143947465277105], 
         DiskBox[11, 0.053143947465277105], DiskBox[12, 0.053143947465277105],
          DiskBox[13, 0.053143947465277105], 
         DiskBox[14, 0.053143947465277105], DiskBox[15, 0.053143947465277105],
          DiskBox[16, 0.053143947465277105], 
         DiskBox[17, 0.053143947465277105], DiskBox[18, 0.053143947465277105],
          DiskBox[19, 0.053143947465277105], 
         DiskBox[20, 0.053143947465277105], DiskBox[21, 0.053143947465277105],
          DiskBox[22, 0.053143947465277105], 
         DiskBox[23, 0.053143947465277105], DiskBox[24, 0.053143947465277105],
          DiskBox[25, 0.053143947465277105], 
         DiskBox[26, 0.053143947465277105], DiskBox[27, 0.053143947465277105],
          DiskBox[28, 0.053143947465277105], 
         DiskBox[29, 0.053143947465277105], DiskBox[30, 0.053143947465277105],
          DiskBox[31, 0.053143947465277105], 
         DiskBox[32, 0.053143947465277105], 
         DiskBox[33, 0.053143947465277105]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.764014706809972*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7638301660147123`*^9, 3.7638301764284277`*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, {Null, 
       SparseArray[
       Automatic, {33, 33}, 0, {
        1, {{0, 2, 3, 4, 5, 6, 7, 8, 15, 17, 18, 19, 20, 21, 22, 23, 30, 32, 
          33, 34, 35, 36, 37, 38, 45, 47, 48, 49, 50, 51, 52, 53, 60, 64}, {{
          8}, {33}, {8}, {8}, {8}, {8}, {8}, {8}, {1}, {2}, {3}, {4}, {5}, {
          6}, {7}, {16}, {33}, {16}, {16}, {16}, {16}, {16}, {16}, {9}, {
          10}, {11}, {12}, {13}, {14}, {15}, {24}, {33}, {24}, {24}, {24}, {
          24}, {24}, {24}, {17}, {18}, {19}, {20}, {21}, {22}, {23}, {32}, {
          33}, {32}, {32}, {32}, {32}, {32}, {32}, {25}, {26}, {27}, {28}, {
          29}, {30}, {31}, {1}, {9}, {17}, {25}}}, Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2}, VertexCoordinates -> CompressedData["

1:eJxTTMoPSmViYGBQBGIQveT+Pr45xg/sGaCg1t40bpfnHvsWXv/1U1JP2C/j
clMtZeqyZ9JuF7t57rG9640PX7wiL9mvV33SPO/sO3uONTJRKdbP4XyIKR/g
6q0LznVcuvcGbh7MPhgt7hHwR+IzswPM/o/JZ2K9TzA4wNRDhR1g5v27UvFS
zZDJAWbf9yeJC69tYYXzv+681fX3KTtcPUsYn+4mWXa4eTD7YPazNU517n4j
CLf/c19wiUq4AFw9xDx+uHlVxzWtJnELwu2bbMXo23JWCM1+Ybj6v+1fbl9v
FIabB7MPZj/jPSbOrvuScPvfvT5gqewlgWa/ONy8EpXp/yf8k4Db1zs9T6j5
gBSc/0EM6MEb0nD14PApkYabB7MPZj/EfG6Y/QcAtELpsg==
        "], 
       VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0.5063, 0.}, {0.5063, 0.5063}}, 0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.5063, 0.}, {3.4873, -2.}}, 0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.1105, 0.1906}, {0.5063, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.0127, 0.619}, {0.5063, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.2867, 0.9626}, {0.5063, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.726, 0.9626}, {0.5063, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1., 0.619}, {0.5063, 0.5063}}, 0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9022, 0.1906}, {0.5063, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.4937, 0.}, {2.4937, 0.5063}}, 0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.4937, 0.}, {3.4873, -2.}}, 0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.0978, 0.1906}, {2.4937, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2., 0.619}, {2.4937, 0.5063}}, 0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.274, 0.9626}, {2.4937, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.7133, 0.9626}, {2.4937, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.9873, 0.619}, {2.4937, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.8895, 0.1906}, {2.4937, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.481, 0.}, {4.481, 0.5063}}, 0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.481, 0.}, {3.4873, -2.}}, 0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.0851, 0.1906}, {4.481, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{3.9873, 0.619}, {4.481, 0.5063}}, 0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.2613, 0.9626}, {4.481, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.7007, 0.9626}, {4.481, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.9746, 0.619}, {4.481, 0.5063}}, 0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.8768, 0.1906}, {4.481, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.4683, 0.}, {6.4683, 0.5063}}, 0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.4683, 0.}, {3.4873, -2.}}, 0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.0724, 0.1906}, {6.4683, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.9746, 0.619}, {6.4683, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.2486, 0.9626}, {6.4683, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.688, 0.9626}, {6.4683, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.9619, 0.619}, {6.4683, 0.5063}}, 
          0.053143947465277105`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.8641, 0.1906}, {6.4683, 0.5063}}, 
          0.053143947465277105`]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0.5063, 0.}, 0.053143947465277105], 
         InsetBox["1", 
          Offset[{2, 2}, {0.559443947465277, 0.053143947465277105}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.1105, 0.1906}, 0.053143947465277105], 
         InsetBox["2", 
          Offset[{2, 2}, {0.1636439474652771, 0.2437439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.0127, 0.619}, 0.053143947465277105], 
         InsetBox["3", 
          Offset[{2, 2}, {0.06584394746527711, 0.6721439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.2867, 0.9626}, 0.053143947465277105], 
         InsetBox["4", 
          Offset[{2, 2}, {0.33984394746527713, 1.0157439474652772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.726, 0.9626}, 0.053143947465277105], 
         InsetBox["5", 
          Offset[{2, 2}, {0.779143947465277, 1.0157439474652772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 0.619}, 0.053143947465277105], 
         InsetBox["6", 
          Offset[{2, 2}, {1.053143947465277, 0.6721439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9022, 0.1906}, 0.053143947465277105], 
         InsetBox["7", 
          Offset[{2, 2}, {0.9553439474652771, 0.2437439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5063, 0.5063}, 0.053143947465277105], 
         InsetBox["8", Offset[{2, 2}, {0.559443947465277, 0.559443947465277}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.4937, 0.}, 0.053143947465277105], 
         InsetBox["9", 
          Offset[{2, 2}, {2.5468439474652773, 0.053143947465277105}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0978, 0.1906}, 0.053143947465277105], 
         InsetBox["10", 
          Offset[{2, 2}, {2.150943947465277, 0.2437439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2., 0.619}, 0.053143947465277105], 
         InsetBox["11", 
          Offset[{2, 2}, {2.0531439474652773, 0.6721439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.274, 0.9626}, 0.053143947465277105], 
         InsetBox["12", 
          Offset[{2, 2}, {2.3271439474652773, 1.0157439474652772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.7133, 0.9626}, 0.053143947465277105], 
         InsetBox["13", 
          Offset[{2, 2}, {2.766443947465277, 1.0157439474652772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.9873, 0.619}, 0.053143947465277105], 
         InsetBox["14", 
          Offset[{2, 2}, {3.040443947465277, 0.6721439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.8895, 0.1906}, 0.053143947465277105], 
         InsetBox["15", 
          Offset[{2, 2}, {2.9426439474652772, 0.2437439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.4937, 0.5063}, 0.053143947465277105], 
         InsetBox["16", 
          Offset[{2, 2}, {2.5468439474652773, 0.559443947465277}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.481, 0.}, 0.053143947465277105], 
         InsetBox["17", 
          Offset[{2, 2}, {4.534143947465277, 0.053143947465277105}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.0851, 0.1906}, 0.053143947465277105], 
         InsetBox["18", 
          Offset[{2, 2}, {4.138243947465277, 0.2437439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.9873, 0.619}, 0.053143947465277105], 
         InsetBox["19", 
          Offset[{2, 2}, {4.040443947465277, 0.6721439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.2613, 0.9626}, 0.053143947465277105], 
         InsetBox["20", 
          Offset[{2, 2}, {4.314443947465278, 1.0157439474652772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.7007, 0.9626}, 0.053143947465277105], 
         InsetBox["21", 
          Offset[{2, 2}, {4.753843947465278, 1.0157439474652772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.9746, 0.619}, 0.053143947465277105], 
         InsetBox["22", 
          Offset[{2, 2}, {5.027743947465277, 0.6721439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.8768, 0.1906}, 0.053143947465277105], 
         InsetBox["23", 
          Offset[{2, 2}, {4.9299439474652775, 0.2437439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.481, 0.5063}, 0.053143947465277105], 
         InsetBox["24", 
          Offset[{2, 2}, {4.534143947465277, 0.559443947465277}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.4683, 0.}, 0.053143947465277105], 
         InsetBox["25", 
          Offset[{2, 2}, {6.5214439474652774, 0.053143947465277105}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.0724, 0.1906}, 0.053143947465277105], 
         InsetBox["26", 
          Offset[{2, 2}, {6.125543947465277, 0.2437439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.9746, 0.619}, 0.053143947465277105], 
         InsetBox["27", 
          Offset[{2, 2}, {6.027743947465277, 0.6721439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.2486, 0.9626}, 0.053143947465277105], 
         InsetBox["28", 
          Offset[{2, 2}, {6.301743947465277, 1.0157439474652772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.688, 0.9626}, 0.053143947465277105], 
         InsetBox["29", 
          Offset[{2, 2}, {6.741143947465277, 1.0157439474652772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.9619, 0.619}, 0.053143947465277105], 
         InsetBox["30", 
          Offset[{2, 2}, {7.015043947465277, 0.6721439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.8641, 0.1906}, 0.053143947465277105], 
         InsetBox["31", 
          Offset[{2, 2}, {6.917243947465277, 0.2437439474652771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.4683, 0.5063}, 0.053143947465277105], 
         InsetBox["32", 
          Offset[{2, 2}, {6.5214439474652774, 0.559443947465277}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.4873, -2.}, 0.053143947465277105], 
         InsetBox["33", 
          Offset[{2, 2}, {3.540443947465277, -1.946856052534723}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.764014706935193*^9}]
}, Open  ]],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s perform a ",
 StyleBox["depth-first search ",
  FontWeight->"Bold"],
 "on this tree"
}], "Text",
 CellChangeTimes->{{3.763830798634893*^9, 3.763830813259609*^9}}],

Cell["\<\
We start with the root node (33) in our case, and visit each node in the \
graph by first visiting all the children of a given node before visiting any \
of its siblings\
\>", "Text",
 CellChangeTimes->{{3.763830805203113*^9, 3.763830846478651*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rootNode", "=", "33"}], ";"}]], "Input",
 CellChangeTimes->{{3.763830335225507*^9, 3.7638303378132477`*^9}}],

Cell["We will need to find the neighbors of a given node:", "Text",
 CellChangeTimes->{{3.7638308561402817`*^9, 3.763830867187698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AdjacencyList", "[", 
  RowBox[{"g", ",", "rootNode"}], "]"}]], "Input",
 CellChangeTimes->{{3.76383086807086*^9, 3.763830875277487*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "9", ",", "17", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.764014707032688*^9}]
}, Open  ]],

Cell["\<\
We also don\[CloseCurlyQuote]t want to visit our parent, so we will use Cases \
and Except to skip items\
\>", "Text",
 CellChangeTimes->{{3.763830883347488*^9, 3.763830905521257*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AdjacencyList", "[", 
  RowBox[{"g", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.763830906427635*^9, 3.763830908689521*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "33"}], "}"}]], "Output",
 CellChangeTimes->{3.764014707094729*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"AdjacencyList", "[", 
    RowBox[{"g", ",", "1"}], "]"}], ",", 
   RowBox[{"Except", "[", "33", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7638309098765*^9, 3.763830918031823*^9}}],

Cell[BoxData[
 RowBox[{"{", "8", "}"}]], "Output",
 CellChangeTimes->{3.764014707147706*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"depthFirst", "[", 
   RowBox[{"graph_", ",", "node_", ",", "parent_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "adj", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Visiting \>\"", ",", " ", "node"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"adj", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"AdjacencyList", "[", 
         RowBox[{"graph", ",", "node"}], "]"}], ",", 
        RowBox[{"Except", "[", "parent", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"depthFirst", "[", 
         RowBox[{"graph", ",", "#", ",", "node"}], "]"}], "&"}], ",", "adj"}],
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"depthFirst", "[", 
   RowBox[{"graph_", ",", "root_"}], "]"}], ":=", 
  RowBox[{"depthFirst", "[", 
   RowBox[{"graph", ",", "root", ",", "root"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.76383034519619*^9, 3.763830441764826*^9}, {
  3.7638304969772663`*^9, 3.763830518342359*^9}, {3.763830562868724*^9, 
  3.763830563473528*^9}, {3.763830596307116*^9, 3.763830635670162*^9}, {
  3.763830679652748*^9, 3.763830761310176*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"depthFirst", "[", 
  RowBox[{"g", ",", "33"}], "]"}]], "Input",
 CellChangeTimes->{{3.7638306992853622`*^9, 3.763830731110317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "33"}],
  SequenceForm["Visiting ", 33],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707207924*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Visiting ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707215267*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["Visiting ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707224434*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Visiting ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707233605*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Visiting ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.76401470724305*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Visiting ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707252798*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Visiting ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707262322*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["Visiting ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707271044*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm["Visiting ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707280169*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm["Visiting ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707288741*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "16"}],
  SequenceForm["Visiting ", 16],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707297764*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Visiting ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707307968*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "11"}],
  SequenceForm["Visiting ", 11],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147073173647`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "12"}],
  SequenceForm["Visiting ", 12],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707325952*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "13"}],
  SequenceForm["Visiting ", 13],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707334374*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "14"}],
  SequenceForm["Visiting ", 14],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707342882*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "15"}],
  SequenceForm["Visiting ", 15],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707351548*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "17"}],
  SequenceForm["Visiting ", 17],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707361734*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "24"}],
  SequenceForm["Visiting ", 24],
  Editable->False]], "Print",
 CellChangeTimes->{3.76401470737053*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "18"}],
  SequenceForm["Visiting ", 18],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707378973*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "19"}],
  SequenceForm["Visiting ", 19],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707387423*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "20"}],
  SequenceForm["Visiting ", 20],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147073967657`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "21"}],
  SequenceForm["Visiting ", 21],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707407226*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "22"}],
  SequenceForm["Visiting ", 22],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707416583*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "23"}],
  SequenceForm["Visiting ", 23],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147074257317`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "25"}],
  SequenceForm["Visiting ", 25],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147074345922`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "32"}],
  SequenceForm["Visiting ", 32],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707443961*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "26"}],
  SequenceForm["Visiting ", 26],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707453229*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "27"}],
  SequenceForm["Visiting ", 27],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707463182*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "28"}],
  SequenceForm["Visiting ", 28],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147074726686`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "29"}],
  SequenceForm["Visiting ", 29],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707481996*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "30"}],
  SequenceForm["Visiting ", 30],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147074913263`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "31"}],
  SequenceForm["Visiting ", 31],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707500795*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DepthFirstScan", "[", 
   RowBox[{"g", ",", "33", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<PrevisitVertex\>\"", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Visiting \>\"", ",", "#"}], "]"}], "&"}], ")"}]}], 
     "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.76383014517382*^9, 3.763830146713426*^9}, {
  3.76383017936517*^9, 3.763830217722726*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "33"}],
  SequenceForm["Visiting ", 33],
  Editable->False]], "Print",
 CellChangeTimes->{3.76401470760485*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Visiting ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707614455*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["Visiting ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707625461*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Visiting ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707636055*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Visiting ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707646619*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Visiting ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707657864*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Visiting ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147076689577`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["Visiting ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707679475*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm["Visiting ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707689151*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm["Visiting ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707699099*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "16"}],
  SequenceForm["Visiting ", 16],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147077106743`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Visiting ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.76401470772215*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "11"}],
  SequenceForm["Visiting ", 11],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707732751*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "12"}],
  SequenceForm["Visiting ", 12],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707743617*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "13"}],
  SequenceForm["Visiting ", 13],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147077545023`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "14"}],
  SequenceForm["Visiting ", 14],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707764949*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "15"}],
  SequenceForm["Visiting ", 15],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707775716*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "17"}],
  SequenceForm["Visiting ", 17],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707786763*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "24"}],
  SequenceForm["Visiting ", 24],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147077975807`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "18"}],
  SequenceForm["Visiting ", 18],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707808899*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "19"}],
  SequenceForm["Visiting ", 19],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147078191023`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "20"}],
  SequenceForm["Visiting ", 20],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707829712*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "21"}],
  SequenceForm["Visiting ", 21],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707840642*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "22"}],
  SequenceForm["Visiting ", 22],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707851646*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "23"}],
  SequenceForm["Visiting ", 23],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707862734*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "25"}],
  SequenceForm["Visiting ", 25],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707873343*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "32"}],
  SequenceForm["Visiting ", 32],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147078834963`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "26"}],
  SequenceForm["Visiting ", 26],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147078938093`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "27"}],
  SequenceForm["Visiting ", 27],
  Editable->False]], "Print",
 CellChangeTimes->{3.76401470790486*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "28"}],
  SequenceForm["Visiting ", 28],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707915884*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "29"}],
  SequenceForm["Visiting ", 29],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707926846*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "30"}],
  SequenceForm["Visiting ", 30],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014707937296*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "31"}],
  SequenceForm["Visiting ", 31],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147079477386`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BreadthFirstScan", "[", 
   RowBox[{"g", ",", "33", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<PrevisitVertex\>\"", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Visiting \>\"", ",", "#"}], "]"}], "&"}], ")"}]}], 
     "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.763984577955763*^9, 3.76398458541015*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "33"}],
  SequenceForm["Visiting ", 33],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147081617193`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Visiting ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708170616*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm["Visiting ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{3.76401470818102*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "17"}],
  SequenceForm["Visiting ", 17],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147081920233`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "25"}],
  SequenceForm["Visiting ", 25],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708202948*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["Visiting ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708214221*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "16"}],
  SequenceForm["Visiting ", 16],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708225293*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "24"}],
  SequenceForm["Visiting ", 24],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708236163*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "32"}],
  SequenceForm["Visiting ", 32],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708246439*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Visiting ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708258353*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Visiting ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708269697*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Visiting ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708280179*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Visiting ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147082913847`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["Visiting ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708302541*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm["Visiting ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708314348*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Visiting ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147083253107`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "11"}],
  SequenceForm["Visiting ", 11],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708335967*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "12"}],
  SequenceForm["Visiting ", 12],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708346788*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "13"}],
  SequenceForm["Visiting ", 13],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708358486*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "14"}],
  SequenceForm["Visiting ", 14],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147083690233`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "15"}],
  SequenceForm["Visiting ", 15],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708379622*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "18"}],
  SequenceForm["Visiting ", 18],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147083911123`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "19"}],
  SequenceForm["Visiting ", 19],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147084025593`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "20"}],
  SequenceForm["Visiting ", 20],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708413937*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "21"}],
  SequenceForm["Visiting ", 21],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147084248247`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "22"}],
  SequenceForm["Visiting ", 22],
  Editable->False]], "Print",
 CellChangeTimes->{3.76401470843565*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "23"}],
  SequenceForm["Visiting ", 23],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708447083*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "26"}],
  SequenceForm["Visiting ", 26],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708459037*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "27"}],
  SequenceForm["Visiting ", 27],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708469757*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "28"}],
  SequenceForm["Visiting ", 28],
  Editable->False]], "Print",
 CellChangeTimes->{3.7640147084812937`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "29"}],
  SequenceForm["Visiting ", 29],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708492387*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "30"}],
  SequenceForm["Visiting ", 30],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708503376*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Visiting \"\>", "\[InvisibleSpace]", "31"}],
  SequenceForm["Visiting ", 31],
  Editable->False]], "Print",
 CellChangeTimes->{3.764014708515164*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindShortestPath", "[", 
  RowBox[{"g", ",", "2", ",", "21"}], "]"}]], "Input",
 CellChangeTimes->{{3.763984618480041*^9, 3.763984622890561*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "8", ",", "1", ",", "33", ",", "17", ",", "24", ",", "21"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.764014708802569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"PolyhedronData", "[", 
     RowBox[{"\"\<Dodecahedron\>\"", ",", "\"\<SkeletonGraph\>\""}], "]"}], 
    ",", 
    RowBox[{"VertexLabels", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7639846783946257`*^9, 3.76398469984898*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, {Null, {{1, 14}, {1, 15}, {1, 16}, {2, 5}, {2, 6}, {2, 13}, {3, 
       7}, {3, 14}, {3, 19}, {4, 8}, {4, 15}, {4, 20}, {5, 11}, {5, 19}, {6, 
       12}, {6, 20}, {7, 11}, {7, 16}, {8, 12}, {8, 16}, {9, 10}, {9, 14}, {9,
        17}, {10, 15}, {10, 18}, {11, 12}, {13, 17}, {13, 18}, {17, 19}, {18, 
       20}}}, {GraphLayout -> {"Dimension" -> 2}, 
       VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/SP48dLZR37sr8/aUzJZ4oH9vvlS+ndVPtlHpVjf
9++9vt9yy4myffPf7QdypucJfd3PAAX2pnG7PHl+2UPl7WHyUPPsYeadLAOZ
+H3/m8Adcq2v/8P1v6sBmcDssGnu++XHvO/vVzfkWCMTdWR/u9jNc9+DL0Pt
vQXTbw/Tf/irRkz/ISYHiPoX9lD99jD9ISDrFT7tZwnj09009/r+NDB4tv9h
lcg694fv7KH6D/xZ+fGSb9ILe5h7lgF1bSh6ALPfHmY/RF0A1P+fYebZw8wD
AAicpMI=
        "], VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{-1.548, 0.503}, {-1.133, -0.369}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-1.548, 0.503}, {-0.7, 0.965}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-1.548, 0.503}, {-2.345, 0.762}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.134, -0.368}, {0.957, -1.317}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.134, -0.368}, {1.548, 0.503}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.134, -0.368}, {0.489, -0.159}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.957, -1.317}, {-1.449, -1.995}}, 
          0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.957, -1.317}, {-1.133, -0.369}}, 
          0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.957, -1.317}, {-0.001, -1.192}}, 
          0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 1.628}, {0., 2.466}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 1.628}, {-0.7, 0.965}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 1.628}, {0.7, 0.965}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.957, -1.317}, {1.449, -1.995}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.957, -1.317}, {-0.001, -1.192}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.548, 0.503}, {2.345, 0.761}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.548, 0.503}, {0.7, 0.965}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-1.449, -1.995}, {1.449, -1.995}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-1.449, -1.995}, {-2.345, 0.762}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 2.466}, {2.345, 0.761}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 2.466}, {-2.345, 0.762}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.489, -0.159}, {-0.302, 0.416}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.489, -0.159}, {-1.133, -0.369}}, 
          0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.489, -0.159}, {0., -0.514}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.302, 0.416}, {-0.7, 0.965}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.302, 0.416}, {0.302, 0.416}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.449, -1.995}, {2.345, 0.761}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.489, -0.159}, {0., -0.514}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.489, -0.159}, {0.302, 0.416}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., -0.514}, {-0.001, -1.192}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.302, 0.416}, {0.7, 0.965}}, 0.0412452419793366]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{-1.548, 0.503}, 0.0412452419793366], 
         InsetBox["1", 
          Offset[{2, 2}, {-1.5067547580206635, 0.5442452419793367}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.134, -0.368}, 0.0412452419793366], 
         InsetBox["2", 
          Offset[{2, 2}, {1.1752452419793364, -0.3267547580206634}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.957, -1.317}, 0.0412452419793366], 
         InsetBox["3", 
          Offset[{2, 2}, {-0.9157547580206633, -1.2757547580206634}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.628}, 0.0412452419793366], 
         InsetBox["4", 
          Offset[{2, 2}, {0.0412452419793366, 1.6692452419793364}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.957, -1.317}, 0.0412452419793366], 
         InsetBox["5", 
          Offset[{2, 2}, {0.9982452419793366, -1.2757547580206634}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.548, 0.503}, 0.0412452419793366], 
         InsetBox["6", 
          Offset[{2, 2}, {1.5892452419793366, 0.5442452419793367}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.449, -1.995}, 0.0412452419793366], 
         InsetBox["7", 
          Offset[{2, 2}, {-1.4077547580206635, -1.9537547580206636}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.466}, 0.0412452419793366], 
         InsetBox["8", 
          Offset[{2, 2}, {0.0412452419793366, 2.5072452419793367}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.489, -0.159}, 0.0412452419793366], 
         InsetBox["9", 
          Offset[{2, 2}, {-0.4477547580206634, -0.1177547580206634}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.302, 0.416}, 0.0412452419793366], 
         InsetBox["10", 
          Offset[{2, 2}, {-0.2607547580206634, 0.4572452419793366}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.449, -1.995}, 0.0412452419793366], 
         InsetBox["11", 
          Offset[{2, 2}, {1.4902452419793366, -1.9537547580206636}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.345, 0.761}, 0.0412452419793366], 
         InsetBox["12", 
          Offset[{2, 2}, {2.3862452419793367, 0.8022452419793367}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.489, -0.159}, 0.0412452419793366], 
         InsetBox["13", 
          Offset[{2, 2}, {0.5302452419793366, -0.1177547580206634}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.133, -0.369}, 0.0412452419793366], 
         InsetBox["14", 
          Offset[{2, 2}, {-1.0917547580206635, -0.3277547580206634}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.7, 0.965}, 0.0412452419793366], 
         InsetBox["15", 
          Offset[{2, 2}, {-0.6587547580206634, 1.0062452419793366}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.345, 0.762}, 0.0412452419793366], 
         InsetBox["16", 
          Offset[{2, 2}, {-2.3037547580206637, 0.8032452419793366}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., -0.514}, 0.0412452419793366],
          InsetBox["17", 
          Offset[{2, 2}, {0.0412452419793366, -0.4727547580206634}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.302, 0.416}, 0.0412452419793366], 
         InsetBox["18", 
          Offset[{2, 2}, {0.3432452419793366, 0.4572452419793366}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.001, -1.192}, 0.0412452419793366], 
         InsetBox["19", 
          Offset[{2, 2}, {0.0402452419793366, -1.1507547580206634}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.7, 0.965}, 0.0412452419793366],
          InsetBox["20", 
          Offset[{2, 2}, {0.7412452419793365, 1.0062452419793366}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.764014708916914*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"path", "=", 
  RowBox[{"FindHamiltonianPath", "[", "g", "]"}]}]], "Input",
 CellChangeTimes->{{3.763984635863287*^9, 3.763984672764449*^9}, {
  3.763984710703176*^9, 3.763984711122814*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13", ",", "18", ",", "10", ",", "15", ",", "4", ",", "20", ",", "6", ",", 
   "2", ",", "5", ",", "19", ",", "3", ",", "7", ",", "11", ",", "12", ",", 
   "8", ",", "16", ",", "1", ",", "14", ",", "9", ",", "17"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7640147089466352`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pg", "=", 
  RowBox[{"PathGraph", "[", 
   RowBox[{"path", ",", 
    RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
    RowBox[{"EdgeLabels", "\[Rule]", "\"\<Index\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763984724089724*^9, 3.7639847487978086`*^9}, {
  3.763984787076435*^9, 3.7639848439496098`*^9}, {3.763985120921199*^9, 
  3.763985131878541*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{13, 18, 10, 15, 4, 20, 6, 2, 5, 19, 3, 7, 11, 12, 8, 16, 1, 14, 9,
       17}, {Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {
       8, 9}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 14}, {14, 15}, {15, 
       16}, {16, 17}, {17, 18}, {18, 19}, {19, 20}}}, {
      EdgeLabels -> {"Index"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {3., 1.}}, 0.03700564971751412]}, 
         InsetBox["1", {2.5, 1.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3., 1.}, {3., 2.}}, 0.03700564971751412]}, 
         InsetBox["2", {3., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3., 2.}, {2., 2.}}, 0.03700564971751412]}, 
         InsetBox["3", {2.5, 2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 2.}, {1., 2.}}, 0.03700564971751412]}, 
         InsetBox["4", {1.5, 2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 2.}, {1., 1.}}, 0.03700564971751412]}, 
         InsetBox["5", {1., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {1., 0.}}, 0.03700564971751412]}, 
         InsetBox["6", {1., 0.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 0.}, {2., 0.}}, 0.03700564971751412]}, 
         InsetBox["7", {1.5, 0.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 0.}, {3., 0.}}, 0.03700564971751412]}, 
         InsetBox["8", {2.5, 0.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3., 0.}, {4., 0.}}, 0.03700564971751412]}, 
         InsetBox["9", {3.5, 0.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{4., 0.}, {4., 1.}}, 0.03700564971751412]}, 
         InsetBox["10", {4., 0.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{4., 1.}, {4., 2.}}, 0.03700564971751412]}, 
         InsetBox["11", {4., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{4., 2.}, {4., 3.}}, 0.03700564971751412]}, 
         InsetBox["12", {4., 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{4., 3.}, {3., 3.}}, 0.03700564971751412]}, 
         InsetBox["13", {3.5, 3.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3., 3.}, {2., 3.}}, 0.03700564971751412]}, 
         InsetBox["14", {2.5, 3.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2., 3.}, {1., 3.}}, 0.03700564971751412]}, 
         InsetBox["15", {1.5, 3.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1., 3.}, {0., 3.}}, 0.03700564971751412]}, 
         InsetBox["16", {0.5, 3.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 3.}, {0., 2.}}, 0.03700564971751412]}, 
         InsetBox["17", {0., 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 2.}, {0., 1.}}, 0.03700564971751412]}, 
         InsetBox["18", {0., 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 1.}, {0., 0.}}, 0.03700564971751412]}, 
         InsetBox["19", {0., 0.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        DiskBox[{2., 1.}, 0.03700564971751412], 
        DiskBox[{3., 1.}, 0.03700564971751412], 
        DiskBox[{3., 2.}, 0.03700564971751412], 
        DiskBox[{2., 2.}, 0.03700564971751412], 
        DiskBox[{1., 2.}, 0.03700564971751412], 
        DiskBox[{1., 1.}, 0.03700564971751412], 
        DiskBox[{1., 0.}, 0.03700564971751412], 
        DiskBox[{2., 0.}, 0.03700564971751412], 
        DiskBox[{3., 0.}, 0.03700564971751412], 
        DiskBox[{4., 0.}, 0.03700564971751412], 
        DiskBox[{4., 1.}, 0.03700564971751412], 
        DiskBox[{4., 2.}, 0.03700564971751412], 
        DiskBox[{4., 3.}, 0.03700564971751412], 
        DiskBox[{3., 3.}, 0.03700564971751412], 
        DiskBox[{2., 3.}, 0.03700564971751412], 
        DiskBox[{1., 3.}, 0.03700564971751412], 
        DiskBox[{0., 3.}, 0.03700564971751412], 
        DiskBox[{0., 2.}, 0.03700564971751412], 
        DiskBox[{0., 1.}, 0.03700564971751412], 
        DiskBox[{0., 0.}, 0.03700564971751412]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.764014709100265*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"edgelabels", "=", 
  RowBox[{"MapIndexed", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#1", "\[Rule]", 
      RowBox[{"#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     "&"}], ",", 
    RowBox[{"EdgeList", "[", "pg", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7639853372352324`*^9, 3.763985352717683*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"13", "\[UndirectedEdge]", "18"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"18", "\[UndirectedEdge]", "10"}], "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"10", "\[UndirectedEdge]", "15"}], "\[Rule]", "3"}], ",", 
   RowBox[{
    RowBox[{"15", "\[UndirectedEdge]", "4"}], "\[Rule]", "4"}], ",", 
   RowBox[{
    RowBox[{"4", "\[UndirectedEdge]", "20"}], "\[Rule]", "5"}], ",", 
   RowBox[{
    RowBox[{"20", "\[UndirectedEdge]", "6"}], "\[Rule]", "6"}], ",", 
   RowBox[{
    RowBox[{"6", "\[UndirectedEdge]", "2"}], "\[Rule]", "7"}], ",", 
   RowBox[{
    RowBox[{"2", "\[UndirectedEdge]", "5"}], "\[Rule]", "8"}], ",", 
   RowBox[{
    RowBox[{"5", "\[UndirectedEdge]", "19"}], "\[Rule]", "9"}], ",", 
   RowBox[{
    RowBox[{"19", "\[UndirectedEdge]", "3"}], "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"3", "\[UndirectedEdge]", "7"}], "\[Rule]", "11"}], ",", 
   RowBox[{
    RowBox[{"7", "\[UndirectedEdge]", "11"}], "\[Rule]", "12"}], ",", 
   RowBox[{
    RowBox[{"11", "\[UndirectedEdge]", "12"}], "\[Rule]", "13"}], ",", 
   RowBox[{
    RowBox[{"12", "\[UndirectedEdge]", "8"}], "\[Rule]", "14"}], ",", 
   RowBox[{
    RowBox[{"8", "\[UndirectedEdge]", "16"}], "\[Rule]", "15"}], ",", 
   RowBox[{
    RowBox[{"16", "\[UndirectedEdge]", "1"}], "\[Rule]", "16"}], ",", 
   RowBox[{
    RowBox[{"1", "\[UndirectedEdge]", "14"}], "\[Rule]", "17"}], ",", 
   RowBox[{
    RowBox[{"14", "\[UndirectedEdge]", "9"}], "\[Rule]", "18"}], ",", 
   RowBox[{
    RowBox[{"9", "\[UndirectedEdge]", "17"}], "\[Rule]", "19"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.764014709277372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", "pg", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
   RowBox[{"EdgeLabels", "\[Rule]", "edgelabels"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763984712220854*^9, 3.763984715265696*^9}, {
  3.763984750310276*^9, 3.7639847504494343`*^9}, {3.763984836518065*^9, 
  3.7639848490785427`*^9}, {3.7639851401120033`*^9, 3.763985164367285*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, {Null, {{1, 14}, {1, 15}, {1, 16}, {2, 5}, {2, 6}, {2, 13}, {3, 
       7}, {3, 14}, {3, 19}, {4, 8}, {4, 15}, {4, 20}, {5, 11}, {5, 19}, {6, 
       12}, {6, 20}, {7, 11}, {7, 16}, {8, 12}, {8, 16}, {9, 10}, {9, 14}, {9,
        17}, {10, 15}, {10, 18}, {11, 12}, {13, 17}, {13, 18}, {17, 19}, {18, 
       20}}}, {EdgeLabels -> {
        UndirectedEdge[6, 2] -> 7, UndirectedEdge[9, 17] -> 19, 
         UndirectedEdge[12, 8] -> 14, UndirectedEdge[3, 7] -> 11, 
         UndirectedEdge[13, 18] -> 1, UndirectedEdge[19, 3] -> 10, 
         UndirectedEdge[18, 10] -> 2, UndirectedEdge[4, 20] -> 5, 
         UndirectedEdge[20, 6] -> 6, UndirectedEdge[5, 19] -> 9, 
         UndirectedEdge[15, 4] -> 4, UndirectedEdge[10, 15] -> 3, 
         UndirectedEdge[7, 11] -> 12, UndirectedEdge[2, 5] -> 8, 
         UndirectedEdge[8, 16] -> 15, UndirectedEdge[1, 14] -> 17, 
         UndirectedEdge[14, 9] -> 18, UndirectedEdge[16, 1] -> 16, 
         UndirectedEdge[11, 12] -> 13}, GraphHighlight -> {16, 6, 13, 
         UndirectedEdge[19, 3], 
         UndirectedEdge[18, 10], 11, 
         UndirectedEdge[8, 16], 
         UndirectedEdge[1, 14], 8, 
         UndirectedEdge[15, 4], 7, 20, 14, 1, 4, 9, 10, 5, 19, 15, 
         UndirectedEdge[16, 1], 17, 
         UndirectedEdge[20, 6], 12, 
         UndirectedEdge[3, 7], 
         UndirectedEdge[14, 9], 
         UndirectedEdge[13, 18], 
         UndirectedEdge[6, 2], 
         UndirectedEdge[4, 20], 
         UndirectedEdge[5, 19], 
         UndirectedEdge[11, 12], 
         UndirectedEdge[12, 8], 
         UndirectedEdge[9, 17], 
         UndirectedEdge[7, 11], 3, 18, 2, 
         UndirectedEdge[2, 5], 
         UndirectedEdge[10, 15]}, GraphLayout -> {"Dimension" -> 2}, 
       VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/SP48dLZR37sr8/aUzJZ4oH9vvlS+ndVPtlHpVjf
9++9vt9yy4myffPf7QdypucJfd3PAAX2pnG7PHl+2UPl7WHyUPPsYeadLAOZ
+H3/m8Adcq2v/8P1v6sBmcDssGnu++XHvO/vVzfkWCMTdWR/u9jNc9+DL0Pt
vQXTbw/Tf/irRkz/ISYHiPoX9lD99jD9ISDrFT7tZwnj09009/r+NDB4tv9h
lcg694fv7KH6D/xZ+fGSb9ILe5h7lgF1bSh6ALPfHmY/RF0A1P+fYebZw8wD
AAicpMI=
        "], 
       VertexLabels -> {
        Automatic, 8 -> None, 12 -> None, 14 -> None, 2 -> None, 13 -> None, 
         20 -> None, 18 -> None, 5 -> None, 7 -> None, 9 -> None, 17 -> None, 
         19 -> None, 16 -> None, 11 -> None, 6 -> None, 1 -> None, 15 -> None,
          3 -> None, 4 -> None, 10 -> None}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-1.548, 0.503}, {-1.133, -0.369}}, 
            0.0412452419793366]}}, 
         InsetBox["17", {-1.3405, 0.067}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-1.548, 0.503}, {-0.7, 0.965}}, 0.0412452419793366]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-1.548, 0.503}, {-2.345, 0.762}}, 0.0412452419793366]}},
          InsetBox["16", {-1.9465000000000001, 0.6325000000000001}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.134, -0.368}, {0.957, -1.317}}, 0.0412452419793366]}},
          InsetBox["8", {1.0454999999999999, -0.8425}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.134, -0.368}, {1.548, 0.503}}, 0.0412452419793366]}}, 
         InsetBox["7", {1.341, 0.0675}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.134, -0.368}, {0.489, -0.159}}, 0.0412452419793366]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.957, -1.317}, {-1.449, -1.995}}, 
            0.0412452419793366]}}, 
         InsetBox["11", {-1.203, -1.6560000000000001}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.957, -1.317}, {-1.133, -0.369}}, 0.0412452419793366]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.957, -1.317}, {-0.001, -1.192}}, 
            0.0412452419793366]}}, 
         InsetBox["10", {-0.479, -1.2545}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 1.628}, {0., 2.466}}, 0.0412452419793366]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.628}, {-0.7, 0.965}}, 0.0412452419793366]}}, 
         InsetBox["4", {-0.35, 1.2965}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.628}, {0.7, 0.965}}, 0.0412452419793366]}}, 
         InsetBox["5", {0.35, 1.2965}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.957, -1.317}, {1.449, -1.995}}, 0.0412452419793366]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.957, -1.317}, {-0.001, -1.192}}, 
            0.0412452419793366]}}, 
         InsetBox["9", {0.478, -1.2545}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.548, 0.503}, {2.345, 0.761}}, 0.0412452419793366]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.548, 0.503}, {0.7, 0.965}}, 0.0412452419793366]}}, 
         InsetBox["6", {1.124, 0.734}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-1.449, -1.995}, {1.449, -1.995}}, 
            0.0412452419793366]}}, InsetBox["12", {0., -1.995}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-1.449, -1.995}, {-2.345, 0.762}}, 0.0412452419793366]}, {
         
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 2.466}, {2.345, 0.761}}, 0.0412452419793366]}}, 
         InsetBox["14", {1.1725, 1.6135000000000002}, ImageScaled[{0.5, 0.5}],
          
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 2.466}, {-2.345, 0.762}}, 0.0412452419793366]}}, 
         InsetBox["15", {-1.1725, 1.614}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.489, -0.159}, {-0.302, 0.416}}, 
          0.0412452419793366]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.489, -0.159}, {-1.133, -0.369}}, 
            0.0412452419793366]}}, 
         InsetBox["18", {-0.8109999999999999, -0.264}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.489, -0.159}, {0., -0.514}}, 0.0412452419793366]}}, 
         InsetBox["19", {-0.2445, -0.3365}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.302, 0.416}, {-0.7, 0.965}}, 0.0412452419793366]}}, 
         InsetBox["3", {-0.501, 0.6905}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.302, 0.416}, {0.302, 0.416}}, 0.0412452419793366]}}, 
         InsetBox["2", {0., 0.416}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.449, -1.995}, {2.345, 0.761}}, 0.0412452419793366]}}, 
         InsetBox["13", {1.8970000000000002, -0.617}, ImageScaled[{0.5, 0.5}],
          
          BaseStyle->"Graphics"]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.489, -0.159}, {0., -0.514}}, 0.0412452419793366]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.489, -0.159}, {0.302, 0.416}}, 0.0412452419793366]}}, 
         InsetBox["1", {0.39549999999999996, 0.1285}, ImageScaled[{0.5, 0.5}],
          
          BaseStyle->"Graphics"]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., -0.514}, {-0.001, -1.192}}, 0.0412452419793366]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.302, 0.416}, {0.7, 0.965}}, 0.0412452419793366]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{-1.548, 0.503}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{1.134, -0.368}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{-0.957, -1.317}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{0., 1.628}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{0.957, -1.317}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{1.548, 0.503}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{-1.449, -1.995}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{0., 2.466}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{-0.489, -0.159}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{-0.302, 0.416}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{1.449, -1.995}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{2.345, 0.761}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{0.489, -0.159}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{-1.133, -0.369}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{-0.7, 0.965}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{-2.345, 0.762}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{0., -0.514}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{0.302, 0.416}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{-0.001, -1.192}, 0.0412452419793366]}, 
        {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
         DiskBox[{0.7, 0.965}, 0.0412452419793366]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.764014709335073*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{970, 1002},
WindowMargins->{{124, Automatic}, {Automatic, 0}},
TaggingRules->{
 "SlideShow" -> True, 
  "SlideshowSettings" -> {
   "WindowElements" -> {
     "VerticalScrollBar", "StatusArea", "MagnificationPopUp", 
      "HorizontalScrollBar"}, "Toolbar" -> True}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7fb803dd-f987-40e4-973a-0ffb1be4c6ac",
   CellTags->"SlideShowHeader"],
  Cell[28599, 516, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"a295a4d7-7454-4f64-bc87-63f0eb7a7283",
   CellTags->"SlideShowHeader"],
  Cell[30884, 605, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ee4e8e54-174b-460d-8edd-ded135ff0276",
   CellTags->"SlideShowHeader"],
  Cell[32308, 653, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ee87a3fb-8635-450d-9a58-8d981ba1437e",
   CellTags->"SlideShowHeader"],
  Cell[34073, 723, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"09b1957e-ada0-45f6-83be-c5dd4a7730b4",
   CellTags->"SlideShowHeader"],
  Cell[204704, 3561, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"fdaf6c29-083c-421d-9447-9ebfbe2c5714",
   CellTags->"SlideShowHeader"],
  Cell[206346, 3623, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e4a1835e-23e5-4471-993e-956a43d46bf1",
   CellTags->"SlideShowHeader"],
  Cell[217283, 3851, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"66d98a58-94f5-43a4-88d2-ce22bde25a86",
   CellTags->"SlideShowHeader"],
  Cell[442019, 7620, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"500d8d75-4ac6-4458-a214-8e4abeaba979",
   CellTags->"SlideShowHeader"],
  Cell[464752, 8123, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"52a22516-ba2c-4c91-9df5-dc8c7cb43d93",
   CellTags->"SlideShowHeader"],
  Cell[466908, 8203, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"a1c3f9c1-6da9-4786-8134-1a4f2b99ab7e",
   CellTags->"SlideShowHeader"],
  Cell[470355, 8332, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"39e9f716-d79c-48b0-971c-727c6bdb84c3",
   CellTags->"SlideShowHeader"],
  Cell[472646, 8419, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d41389a1-17c0-47a3-8b5d-61fa93015997",
   CellTags->"SlideShowHeader"],
  Cell[481378, 8692, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"65be6ce6-0e7a-432f-9ccc-61e52c315edb",
   CellTags->"SlideShowHeader"],
  Cell[543928, 9860, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"603120ae-f6a9-4b78-a9fc-f038cef0d985",
   CellTags->"SlideShowHeader"],
  Cell[551380, 10147, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"30471479-9947-41b8-89ee-654a0b1a498a",
   CellTags->"SlideShowHeader"],
  Cell[553669, 10234, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e9b83262-873d-4204-8447-17e3d69be960",
   CellTags->"SlideShowHeader"],
  Cell[557952, 10401, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6de0b42f-3f3b-4749-9db3-ff112ed13f12",
   CellTags->"SlideShowHeader"],
  Cell[561506, 10525, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ca17759f-e485-4f99-a78e-84617ac0950d",
   CellTags->"SlideShowHeader"],
  Cell[566707, 10732, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"047d58ae-582d-4389-b30b-4690f68fd979",
   CellTags->"SlideShowHeader"],
  Cell[577191, 11126, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0bad8f49-59a1-447b-ae96-70dcd0040354",
   CellTags->"SlideShowHeader"],
  Cell[609392, 11798, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"f0f807d0-97e6-4ba6-9c9e-efadec6f32d6",
   CellTags->"SlideShowHeader"],
  Cell[612342, 11915, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6514e295-bb8a-441d-b7bd-40aeae0ba4cf",
   CellTags->"SlideShowHeader"],
  Cell[619054, 12155, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"cfc8d7fc-28f7-4b42-9864-fbbba30dec8a",
   CellTags->"SlideShowHeader"],
  Cell[628483, 12493, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"8da40911-864e-4cfc-a4ce-7485a984aca9",
   CellTags->"SlideShowHeader"],
  Cell[631548, 12594, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ccf3fb7a-2a8a-437a-a313-05ab3abc830d",
   CellTags->"SlideShowHeader"],
  Cell[639843, 12887, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"273c7627-1fb9-4f2b-9b6a-11d5fa701d1d",
   CellTags->"SlideShowHeader"],
  Cell[645582, 13099, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"284e6635-d474-477e-908e-8e5a190b88ec",
   CellTags->"SlideShowHeader"],
  Cell[653869, 13371, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e67bfd9b-e8ff-479e-be26-9095a01b6aeb",
   CellTags->"SlideShowHeader"],
  Cell[661239, 13581, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"027bee55-c5ab-4a62-986f-252d1610d825",
   CellTags->"SlideShowHeader"],
  Cell[663510, 13646, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b9d04488-db9a-4577-988b-8890b6ebaa11",
   CellTags->"SlideShowHeader"],
  Cell[669855, 13837, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"70c63b02-7879-40b8-a1eb-d5afc70d26a8",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 754721, 16048}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7fb803dd-f987-40e4-973a-0ffb1be4c6ac",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[727, 28, 171, 3, 67, "Section",ExpressionUUID->"d6720fa3-d057-4508-a26c-423e18daf383"],
Cell[CellGroupData[{
Cell[923, 35, 177, 3, 32, "Item",ExpressionUUID->"9a017c2f-e1c6-42c4-8cd8-0d6ea2ec0b71"],
Cell[1103, 40, 176, 3, 32, "Item",ExpressionUUID->"308ebbde-cba3-47ad-b96d-30dbf05189a4"],
Cell[1282, 45, 222, 5, 32, "Item",ExpressionUUID->"644cc387-3319-4459-8752-71d7ea4c194e"],
Cell[1507, 52, 184, 3, 32, "Item",ExpressionUUID->"97d9e938-d7ea-437d-abce-7b3f36d612f1"]
}, Open  ]],
Cell[1706, 58, 26619, 442, 297, "Text",ExpressionUUID->"8ab30ce6-87cd-4177-bc73-0369670c9ce0"],
Cell[CellGroupData[{
Cell[28350, 504, 115, 2, 30, "Input",ExpressionUUID->"71187059-8cf7-40fb-9526-2effc6da4ec1"],
Cell[28468, 508, 70, 1, 34, "Output",ExpressionUUID->"26b01493-5562-4371-8bb5-af3b8b890055"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28599, 516, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"a295a4d7-7454-4f64-bc87-63f0eb7a7283",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[28746, 522, 102, 1, 67, "Section",ExpressionUUID->"1770bae9-60aa-4e42-881d-1fa360f9628e"],
Cell[28851, 525, 108, 1, 35, "Text",ExpressionUUID->"1e0e4311-e2fa-4120-b55e-ab1c7b13e301"],
Cell[CellGroupData[{
Cell[28984, 530, 115, 2, 30, "Input",ExpressionUUID->"5e7c0c00-39e4-468c-a3d9-d8199a0e4da5"],
Cell[29102, 534, 69, 1, 34, "Output",ExpressionUUID->"c3a9e397-1b2d-4e8d-8210-f1802d32da00"]
}, Open  ]],
Cell[29186, 538, 212, 6, 35, "Text",ExpressionUUID->"4aa6ff80-e957-45b4-90af-84b19c7ed33f"],
Cell[CellGroupData[{
Cell[29423, 548, 115, 2, 30, "Input",ExpressionUUID->"cfdc59a3-4962-4573-b365-92a2e71ee4e7"],
Cell[29541, 552, 90, 2, 51, "Output",ExpressionUUID->"96e22df6-d2c0-4776-b18d-837836d7cb1d"]
}, Open  ]],
Cell[29646, 557, 185, 4, 35, "Text",ExpressionUUID->"4871212e-ef39-496b-b6fb-8d64fac101f1"],
Cell[CellGroupData[{
Cell[29856, 565, 166, 3, 30, "Input",ExpressionUUID->"7131a74b-6ab2-492f-9b08-2fad55b297aa"],
Cell[30025, 570, 90, 1, 34, "Output",ExpressionUUID->"28e532ec-c05d-4ae3-8918-fbd9fdb915c1"]
}, Open  ]],
Cell[30130, 574, 200, 4, 35, "Text",ExpressionUUID->"1fd3759b-1d75-4ffe-b15a-891614c09f6d"],
Cell[CellGroupData[{
Cell[30355, 582, 166, 3, 30, "Input",ExpressionUUID->"4adabd02-ca6c-42a9-b7ec-cdd19ca79d88"],
Cell[30524, 587, 72, 1, 34, "Output",ExpressionUUID->"f33a2b17-13f6-441d-a975-7f93d34ee327"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30633, 593, 117, 2, 30, "Input",ExpressionUUID->"e0a0bfcb-0ed3-42c9-a477-03873151ed74"],
Cell[30753, 597, 70, 1, 34, "Output",ExpressionUUID->"06d70eb1-543c-46a4-8685-0682b8121709"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30884, 605, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ee4e8e54-174b-460d-8edd-ded135ff0276",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[31031, 611, 102, 1, 67, "Section",ExpressionUUID->"819d2ffc-50c8-4918-b1f8-04be97caebc4"],
Cell[31136, 614, 191, 2, 35, "Text",ExpressionUUID->"42f9eb26-df8e-43e0-8ab1-e7edff2ca658"],
Cell[CellGroupData[{
Cell[31352, 620, 112, 2, 30, "Input",ExpressionUUID->"837461e3-290d-40e0-aefd-b8086a0327d2"],
Cell[31467, 624, 73, 1, 34, "Output",ExpressionUUID->"9a9ff7c2-5cc5-407a-92f0-282e88e4699c"]
}, Open  ]],
Cell[31555, 628, 163, 2, 35, "Text",ExpressionUUID->"255582c3-8be7-4ae8-a088-6eff1544132a"],
Cell[31721, 632, 87, 1, 35, "Text",ExpressionUUID->"d123c01b-8867-47b8-86aa-a543146bab38"],
Cell[CellGroupData[{
Cell[31833, 637, 140, 1, 32, "Item",ExpressionUUID->"dfb999e2-a8cd-4099-b09a-6992ee9eb5d1"],
Cell[31976, 640, 117, 1, 32, "Item",ExpressionUUID->"46b9a28f-a6ff-4f8b-b8f1-82091328e146"],
Cell[32096, 643, 151, 3, 32, "Item",ExpressionUUID->"e2aafe86-01f1-418d-b264-fb06c73541ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32308, 653, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ee87a3fb-8635-450d-9a58-8d981ba1437e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[32455, 659, 107, 1, 67, "Section",ExpressionUUID->"8d145d20-93e3-4642-af38-72d3edc6e342"],
Cell[32565, 662, 229, 7, 35, "Text",ExpressionUUID->"92edd128-1b63-4056-b8c4-e3f839d94065"],
Cell[32797, 671, 93, 1, 35, "Text",ExpressionUUID->"e2ac4abc-255d-4a45-871a-3b9f392d7f8a"],
Cell[CellGroupData[{
Cell[32915, 676, 125, 2, 30, "Input",ExpressionUUID->"e8dc0649-5cf1-4162-9ea4-7ce21ebb4f2c"],
Cell[33043, 680, 70, 1, 34, "Output",ExpressionUUID->"7202511a-002e-4c64-8481-3a167a25eea2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33150, 686, 122, 2, 30, "Input",ExpressionUUID->"9e8bf0ca-3e1b-446d-b72a-3609e9def66c"],
Cell[33275, 690, 86, 1, 34, "Output",ExpressionUUID->"f4970bc3-e644-4f3a-bef8-e30ce68046ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33398, 696, 124, 2, 30, "Input",ExpressionUUID->"52c0e9bd-d165-42fc-8d10-096660d6fbc5"],
Cell[33525, 700, 70, 1, 34, "Output",ExpressionUUID->"45226703-127c-409d-a51d-6211cdc6fa08"]
}, Open  ]],
Cell[33610, 704, 130, 1, 35, "Text",ExpressionUUID->"5c0dcfb1-c9f3-442f-8db0-585d1d55106a"],
Cell[CellGroupData[{
Cell[33765, 709, 150, 3, 30, "Input",ExpressionUUID->"ea3b361b-40b7-4497-9739-25921fb449ff"],
Cell[33918, 714, 94, 2, 47, "Output",ExpressionUUID->"edee6e9b-2c9b-4485-afc6-e5402441d272"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34073, 723, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"09b1957e-ada0-45f6-83be-c5dd4a7730b4",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[34220, 729, 110, 1, 67, "Section",ExpressionUUID->"ca6fd831-4253-4aaa-ab2e-6d186f697f9a"],
Cell[34333, 732, 137, 1, 35, "Text",ExpressionUUID->"e736495a-fa7b-4c87-a93a-3b1ec4b2b0a6"],
Cell[34473, 735, 251, 8, 30, "Text",ExpressionUUID->"eaf83583-3fb2-42f0-a724-bd8fcfdf14d8"],
Cell[34727, 745, 177, 4, 30, "Text",ExpressionUUID->"9ef55f26-a24d-4960-a059-71a2e9957f4d"],
Cell[CellGroupData[{
Cell[34929, 753, 84721, 1394, 424, "Input",ExpressionUUID->"739a0720-6dc8-4c05-bde8-2609b081695d"],
Cell[119653, 2149, 84742, 1394, 424, "Output",ExpressionUUID->"0aa0aec5-0d74-40f4-87ef-5c1fe3ff95dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204432, 3548, 116, 2, 32, "Input",ExpressionUUID->"28bc3230-fbf7-4857-92e1-577da0865e32"],
Cell[204551, 3552, 92, 2, 32, "Output",ExpressionUUID->"df06d193-142e-4313-bffb-59de04b3173c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[204704, 3561, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"fdaf6c29-083c-421d-9447-9ebfbe2c5714",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[204851, 3567, 109, 1, 64, "Section",ExpressionUUID->"92de3a5a-b9f7-4155-b206-77025e29bff4"],
Cell[204963, 3570, 193, 4, 30, "Text",ExpressionUUID->"d5d7903b-92b0-4689-b3d3-f53d499833f5"],
Cell[205159, 3576, 317, 7, 30, "Text",ExpressionUUID->"603b2439-4a5b-4e87-ba25-5cce4f7f4c32"],
Cell[CellGroupData[{
Cell[205501, 3587, 197, 5, 32, "Input",ExpressionUUID->"6dd566a3-ee49-406a-88af-dcbf8e98c8f6"],
Cell[205701, 3594, 175, 5, 32, "Output",ExpressionUUID->"22fefb03-e5ab-49cb-a2b9-3df54c2e2a70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205913, 3604, 196, 5, 32, "Input",ExpressionUUID->"5a5d22d2-6f4c-4735-8cb8-1b16f19b25c3"],
Cell[206112, 3611, 173, 5, 32, "Output",ExpressionUUID->"4eeefcfa-e737-4ecf-8c8d-018999d516b9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206346, 3623, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e4a1835e-23e5-4471-993e-956a43d46bf1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[206493, 3629, 93, 1, 64, "Section",ExpressionUUID->"389abd87-898a-4c3a-85e4-f5da15240e73"],
Cell[206589, 3632, 152, 3, 30, "Text",ExpressionUUID->"41ec187b-34fb-4cc7-912a-c3eb43295b84"],
Cell[CellGroupData[{
Cell[206766, 3639, 205, 5, 32, "Input",ExpressionUUID->"a242cc33-dbfd-4288-adf5-984e1cff8b43"],
Cell[206974, 3646, 9457, 170, 237, "Output",ExpressionUUID->"db16cc65-52d1-487c-a711-b11dd4d7e8fe"]
}, Open  ]],
Cell[216446, 3819, 267, 7, 49, "Text",ExpressionUUID->"f9783437-deb7-4f1e-8f5b-6be735b81bbc"],
Cell[CellGroupData[{
Cell[216738, 3830, 148, 3, 32, "Input",ExpressionUUID->"d16233a7-954e-4723-a5b6-03e07ea33caf"],
Cell[216889, 3835, 125, 3, 32, "Output",ExpressionUUID->"aa84c50e-b332-4cad-bb77-dce4aa44d359"]
}, Open  ]],
Cell[217029, 3841, 205, 4, 30, "Text",ExpressionUUID->"fbc0ca9c-82f0-4c72-8d55-98533c01cdd1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[217283, 3851, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"66d98a58-94f5-43a4-88d2-ce22bde25a86",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[217430, 3857, 98, 1, 64, "Section",ExpressionUUID->"65a08969-7400-4670-9ef1-8737dcd062c2"],
Cell[217531, 3860, 235, 5, 68, "Text",ExpressionUUID->"3fc4160e-03d9-4ac0-8b39-62f5160eb4c5"],
Cell[CellGroupData[{
Cell[217791, 3869, 471, 13, 32, "Input",ExpressionUUID->"d9a5d4a9-e332-4ff8-82fb-a6c90d92cf86"],
Cell[218265, 3884, 56668, 957, 229, "Output",ExpressionUUID->"a9b6aa54-46b8-48de-a0af-d90c7e227d5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274970, 4846, 334, 11, 32, "Input",ExpressionUUID->"f7e89072-a554-4ac9-8194-ff8c4aaed8ac"],
Cell[275307, 4859, 166651, 2754, 300, "Output",ExpressionUUID->"227754a8-f950-4579-9965-46e6c38bd1d9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[442019, 7620, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"500d8d75-4ac6-4458-a214-8e4abeaba979",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[442166, 7626, 117, 1, 64, "Section",ExpressionUUID->"f6048a66-fac7-443f-95e6-8a67871eb53e"],
Cell[442286, 7629, 190, 4, 49, "Text",ExpressionUUID->"7f4b2ce1-9576-48d0-b6e4-e685000f5028"],
Cell[442479, 7635, 175, 4, 30, "Text",ExpressionUUID->"951046d8-89de-4d14-91c6-3af848132764"],
Cell[CellGroupData[{
Cell[442679, 7643, 263, 7, 32, "Input",ExpressionUUID->"70299bc1-0ba9-4aca-89e5-56d24dfa61d6"],
Cell[442945, 7652, 383, 13, 53, "Output",ExpressionUUID->"94f185c5-c94c-4a39-876a-721b23f250d4"]
}, Open  ]],
Cell[443343, 7668, 192, 6, 30, "Text",ExpressionUUID->"3c5a0095-b059-4211-a6c4-f9a759117ed5"],
Cell[CellGroupData[{
Cell[443560, 7678, 518, 15, 32, "Input",ExpressionUUID->"be8606d6-cecc-4263-99a9-737b67bd7dd1"],
Cell[444081, 7695, 166, 5, 33, "Output",ExpressionUUID->"ca9634fb-7f59-493c-b768-4b68d72e2b7c"]
}, Open  ]],
Cell[444262, 7703, 260, 7, 30, "Text",ExpressionUUID->"1e9e7d9a-602a-4a90-90b1-04f0e6dcaa8e"],
Cell[CellGroupData[{
Cell[444547, 7714, 680, 19, 32, "Input",ExpressionUUID->"c0387f68-12b5-462a-8c34-d1e57440a311"],
Cell[445230, 7735, 161, 5, 56, "Output",ExpressionUUID->"8c17787d-2762-4082-9f48-93238d54945c"]
}, Open  ]],
Cell[445406, 7743, 158, 3, 30, "Text",ExpressionUUID->"09f3a10f-1b7a-435e-b6cd-97bc65226d3a"],
Cell[CellGroupData[{
Cell[445589, 7750, 282, 7, 32, "Input",ExpressionUUID->"fea85efd-f6ff-45dd-b1c4-4462a6b6a60e"],
Cell[445874, 7759, 88, 1, 32, "Output",ExpressionUUID->"0eceb3e1-14c6-4121-8dad-c8423df8432b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445999, 7765, 312, 8, 32, "Input",ExpressionUUID->"0051a39f-1a33-44bf-af41-17c3e053a581"],
Cell[446314, 7775, 135, 2, 32, "Output",ExpressionUUID->"7e074e55-a136-48b4-b12f-e69edcf0af99"]
}, Open  ]],
Cell[446464, 7780, 159, 3, 30, "Text",ExpressionUUID->"12470b55-24e6-45b2-b42c-887a0f144bf1"],
Cell[CellGroupData[{
Cell[446648, 7787, 238, 7, 57, "Input",ExpressionUUID->"2e2c0c39-4519-414b-acdb-45460af148d1"],
Cell[446889, 7796, 135, 2, 32, "Output",ExpressionUUID->"8286d78d-66ef-4db0-afa8-27e330952cdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447061, 7803, 598, 18, 32, "Input",ExpressionUUID->"590bd372-72c7-44c1-b487-8d6e2cf17b3a"],
Cell[447662, 7823, 17029, 293, 234, "Output",ExpressionUUID->"3c970ff1-eb2a-46d6-80a2-58279e6e936c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[464752, 8123, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"52a22516-ba2c-4c91-9df5-dc8c7cb43d93",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[464899, 8129, 117, 1, 64, "Section",ExpressionUUID->"d760a2ef-a779-42b0-b5e2-51aef42244c7"],
Cell[465019, 8132, 135, 1, 30, "Text",ExpressionUUID->"14bbd287-d9d7-48ff-9ae7-d98a864634eb"],
Cell[465157, 8135, 91, 1, 30, "Text",ExpressionUUID->"dd0c8749-a10d-4421-b7e9-19d03de0ce66"],
Cell[465251, 8138, 280, 5, 30, "Text",ExpressionUUID->"5566754d-dfd9-45f2-8d34-577cf5a4b64c"],
Cell[CellGroupData[{
Cell[465556, 8147, 142, 3, 32, "Input",ExpressionUUID->"1a0dced2-9489-460a-b450-142b0e86afb4"],
Cell[465701, 8152, 97, 2, 32, "Output",ExpressionUUID->"d17fcae7-c1f6-4f3e-a6f7-78d22e8bbd93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465835, 8159, 122, 2, 32, "Input",ExpressionUUID->"6de92212-2fec-4806-816d-bec2d7ad0771"],
Cell[465960, 8163, 87, 1, 32, "Output",ExpressionUUID->"286cd428-26f3-4407-a392-bfbec0175a72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466084, 8169, 160, 4, 32, "Input",ExpressionUUID->"91eaf84b-2f3a-4356-872e-2c14e389eef5"],
Cell[466247, 8175, 172, 5, 32, "Output",ExpressionUUID->"411f9f30-7bf0-4fc1-aafe-f3cfdb42bf03"]
}, Open  ]],
Cell[466434, 8183, 118, 1, 30, "Text",ExpressionUUID->"1d23b86f-51a1-4281-b311-8763da3d3250"],
Cell[466555, 8186, 124, 2, 32, "Input",ExpressionUUID->"eaec6606-2498-4e4c-9966-d766cf166d78"],
Cell[CellGroupData[{
Cell[466704, 8192, 71, 1, 32, "Input",ExpressionUUID->"fafef26b-14ce-4b14-a42c-6dcee229f466"],
Cell[466778, 8195, 69, 1, 32, "Output",ExpressionUUID->"d12cffb1-23f9-4b86-bc83-42cdddc0ea9e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[466908, 8203, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"a1c3f9c1-6da9-4786-8134-1a4f2b99ab7e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[467055, 8209, 92, 1, 64, "Section",ExpressionUUID->"050f39f7-5979-4cee-a162-c74385de4cc5"],
Cell[467150, 8212, 126, 1, 30, "Text",ExpressionUUID->"c32020f5-22e4-4c31-90fd-e569cec6ca6a"],
Cell[CellGroupData[{
Cell[467301, 8217, 179, 4, 32, "Input",ExpressionUUID->"ba658b8d-ad8f-43f0-94d0-9a0e91c66a88"],
Cell[467483, 8223, 125, 3, 32, "Output",ExpressionUUID->"8c7af076-1c82-40f2-a167-b3972d7b7068"]
}, Open  ]],
Cell[467623, 8229, 131, 1, 30, "Text",ExpressionUUID->"0a3c5899-5116-4835-aeed-a97f6f191fe6"],
Cell[CellGroupData[{
Cell[467779, 8234, 120, 2, 32, "Input",ExpressionUUID->"b9266ac4-1be3-4391-820c-5befc98a9a26"],
Cell[467902, 8238, 127, 3, 32, "Output",ExpressionUUID->"f2db63d8-bbf2-4daa-93ba-0ec560628f48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468066, 8246, 120, 2, 32, "Input",ExpressionUUID->"77dc1813-ce4e-4157-93b0-41d6ad629b55"],
Cell[468189, 8250, 128, 3, 32, "Output",ExpressionUUID->"bef98b3d-99d5-48c8-953d-65349683a6a6"]
}, Open  ]],
Cell[468332, 8256, 258, 5, 49, "Text",ExpressionUUID->"b3781cd1-0173-445d-a927-bc1b4137ff2a"],
Cell[CellGroupData[{
Cell[468615, 8265, 150, 3, 32, "Input",ExpressionUUID->"0d0e73da-b5bf-43f9-90c4-ae0517c510c0"],
Cell[468768, 8270, 70, 1, 32, "Output",ExpressionUUID->"97cbfe2b-cd29-4636-ae69-10327c81413f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468875, 8276, 171, 3, 32, "Input",ExpressionUUID->"3679e35e-75d8-476c-908b-473711eaa376"],
Cell[469049, 8281, 70, 1, 32, "Output",ExpressionUUID->"d851cde8-f907-4d3c-b92c-e8e561b5e879"]
}, Open  ]],
Cell[469134, 8285, 119, 1, 30, "Text",ExpressionUUID->"6877cfb5-6b73-4202-8964-726bb8abf735"],
Cell[CellGroupData[{
Cell[469278, 8290, 211, 4, 32, "Input",ExpressionUUID->"697db414-2ae7-4ad4-b74e-f1edf2fb918b"],
Cell[469492, 8296, 115, 3, 32, "Output",ExpressionUUID->"82679912-c02b-43b0-aa26-b7a2aeb87537"]
}, Open  ]],
Cell[469622, 8302, 108, 1, 30, "Text",ExpressionUUID->"df3287b7-6842-4dca-a4c4-d456ca20792e"],
Cell[CellGroupData[{
Cell[469755, 8307, 191, 4, 32, "Input",ExpressionUUID->"b77db19c-545f-4be2-ba19-cee37a501eff"],
Cell[469949, 8313, 74, 1, 32, "Output",ExpressionUUID->"665f1f9b-0391-4c98-b790-74321161181b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470060, 8319, 100, 1, 32, "Input",ExpressionUUID->"2f473ae2-a170-4042-96f4-98b6dd3b0c81"],
Cell[470163, 8322, 131, 3, 32, "Output",ExpressionUUID->"3e0aed25-1b72-434c-91bb-d6f2dbcdd3c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[470355, 8332, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"39e9f716-d79c-48b0-971c-727c6bdb84c3",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[470502, 8338, 93, 1, 64, "Section",ExpressionUUID->"9e7af550-dfcd-4c69-a48b-a19f0a6806d3"],
Cell[470598, 8341, 131, 1, 30, "Text",ExpressionUUID->"3203107b-5aa8-4cab-84b6-480555165429"],
Cell[470732, 8344, 133, 1, 30, "Item",ExpressionUUID->"21938899-33bd-4251-a8a3-ddca306559f2"],
Cell[CellGroupData[{
Cell[470890, 8349, 142, 3, 32, "Input",ExpressionUUID->"19d6ac32-81ac-4586-9517-7e9abf25618f"],
Cell[471035, 8354, 71, 1, 32, "Output",ExpressionUUID->"939f9d1a-4162-4689-af65-619494d5e45f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471143, 8360, 163, 4, 32, "Input",ExpressionUUID->"eb76a4fb-c300-4bf2-8499-30837157dfc8"],
Cell[471309, 8366, 71, 1, 32, "Output",ExpressionUUID->"35a16844-aecf-44c4-ba6e-c14c14235657"]
}, Open  ]],
Cell[471395, 8370, 119, 1, 30, "Item",ExpressionUUID->"bb525a81-3aa2-4257-9905-ef8f899acd22"],
Cell[CellGroupData[{
Cell[471539, 8375, 125, 2, 32, "Input",ExpressionUUID->"92b83e6b-b67c-46a7-a8f7-e93a17629d7a"],
Cell[471667, 8379, 70, 1, 32, "Output",ExpressionUUID->"9da537f0-28a8-49ff-9b03-473bf8a7c9a7"]
}, Open  ]],
Cell[471752, 8383, 102, 1, 30, "Item",ExpressionUUID->"fe231474-8849-4911-95c6-775333a82b20"],
Cell[CellGroupData[{
Cell[471879, 8388, 152, 3, 32, "Input",ExpressionUUID->"b8a34228-40ba-47eb-8ddf-5110b970f32e"],
Cell[472034, 8393, 125, 3, 32, "Output",ExpressionUUID->"c930e345-0ba1-46d2-abd7-22a5598d2dc8"]
}, Open  ]],
Cell[472174, 8399, 114, 1, 30, "Item",ExpressionUUID->"f09d5066-9b58-4c96-a339-57d69a82dce8"],
Cell[CellGroupData[{
Cell[472313, 8404, 200, 5, 32, "Input",ExpressionUUID->"501a5e18-0fc9-4d59-b00f-e1772b4bfbaf"],
Cell[472516, 8411, 69, 1, 32, "Output",ExpressionUUID->"4b80f765-d1ba-4419-9cd0-50f9e22bffd2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[472646, 8419, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d41389a1-17c0-47a3-8b5d-61fa93015997",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[472793, 8425, 101, 1, 64, "Section",ExpressionUUID->"6770bfbc-b433-4e4f-8cd8-768950ec5c4f"],
Cell[472897, 8428, 128, 1, 30, "Text",ExpressionUUID->"883c6a3e-92fa-4aec-817b-dbf6e25ebbc6"],
Cell[CellGroupData[{
Cell[473050, 8433, 125, 2, 32, "Input",ExpressionUUID->"7deb9cbe-ba27-4cd1-b12a-4dc75a7336c6"],
Cell[473178, 8437, 205, 5, 32, "Output",ExpressionUUID->"95f8ab5e-4e19-476b-a681-f3c0a638104f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473420, 8447, 150, 3, 32, "Input",ExpressionUUID->"5c8834d7-c7b8-4acd-a509-962ca5663ba2"],
Cell[473573, 8452, 169, 4, 32, "Output",ExpressionUUID->"a238e34d-174f-4d68-9727-780237ddc008"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473779, 8461, 160, 3, 32, "Input",ExpressionUUID->"b722036e-669c-4a5d-ad5e-918877eab5c9"],
Cell[473942, 8466, 135, 3, 32, "Output",ExpressionUUID->"c55a765c-8edd-4717-89de-b88f4e419aed"]
}, Open  ]],
Cell[474092, 8472, 179, 4, 30, "Text",ExpressionUUID->"c2fd4202-93db-403a-9b9f-c44be96284da"],
Cell[CellGroupData[{
Cell[474296, 8480, 197, 5, 32, "Input",ExpressionUUID->"01254782-3d86-48d9-abcb-f02429652207"],
Cell[474496, 8487, 203, 5, 32, "Output",ExpressionUUID->"2d9d636e-b4d7-482f-84d2-35afa7abc38b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474736, 8497, 282, 7, 35, "Input",ExpressionUUID->"1a0ae475-ea1e-4fbc-80b1-d7347aa51b99"],
Cell[475021, 8506, 210, 5, 32, "Output",ExpressionUUID->"e8cf3b8b-b300-48ab-aa5a-0de4af3ea5fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475268, 8516, 269, 8, 35, "Input",ExpressionUUID->"685ec5f0-89ab-4867-a18b-03bb721bcab1"],
Cell[475540, 8526, 384, 11, 49, "Output",ExpressionUUID->"a8e1bc17-2303-4d25-8803-6902776bd880"]
}, Open  ]],
Cell[475939, 8540, 174, 4, 30, "Text",ExpressionUUID->"4470f0d1-287e-4bf5-a910-66a3de5cf2b5"],
Cell[CellGroupData[{
Cell[476138, 8548, 331, 9, 32, "Input",ExpressionUUID->"3e7dd46a-3578-47a3-8c04-e7afe6bc9e08"],
Cell[476472, 8559, 1659, 43, 96, "Output",ExpressionUUID->"ae5df6f2-37b3-4b31-9083-93c4b0ae0dd9"]
}, Open  ]],
Cell[478146, 8605, 131, 1, 30, "Text",ExpressionUUID->"ddf8a982-95b6-44ba-95de-9956786c6a0a"],
Cell[CellGroupData[{
Cell[478302, 8610, 131, 2, 32, "Input",ExpressionUUID->"127f7be6-f11b-4e1a-ace3-fc7692b2024f"],
Cell[478436, 8614, 1227, 26, 194, "Output",ExpressionUUID->"edab4f10-d779-4a83-9c2d-a97dc92f0ff1"]
}, Open  ]],
Cell[479678, 8643, 259, 8, 30, "Text",ExpressionUUID->"2ce4f066-7e82-4499-8284-c759a0437902"],
Cell[CellGroupData[{
Cell[479962, 8655, 126, 2, 32, "Input",ExpressionUUID->"43a7fcc8-5337-4ac6-a4f0-e43e708a59fa"],
Cell[480091, 8659, 1226, 26, 194, "Output",ExpressionUUID->"17d57859-30c1-47e2-8e60-cec341cf2715"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[481378, 8692, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"65be6ce6-0e7a-432f-9ccc-61e52c315edb",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[481525, 8698, 98, 1, 64, "Section",ExpressionUUID->"c3bb5f11-dab6-403a-8eb5-dc5a676081be"],
Cell[481626, 8701, 173, 4, 30, "Text",ExpressionUUID->"d7733e7a-2fcc-46b9-9143-b61c425b6444"],
Cell[481802, 8707, 169, 2, 30, "Text",ExpressionUUID->"f2254429-faee-47e3-897b-1bd7f580cc61"],
Cell[481974, 8711, 424, 13, 34, "Text",ExpressionUUID->"d9e344dd-6b0c-43d1-8cd4-dab63c05a792"],
Cell[482401, 8726, 163, 5, 30, "Text",ExpressionUUID->"339119b1-b12b-4fb0-b3a6-0403ea2e1895"],
Cell[482567, 8733, 172, 2, 30, "Text",ExpressionUUID->"cd4f4cde-310c-4d55-964f-a328b7c5d196"],
Cell[CellGroupData[{
Cell[482764, 8739, 378, 11, 35, "Input",ExpressionUUID->"8383c506-365c-4deb-98da-948833acd3b7"],
Cell[483145, 8752, 1008, 36, 47, "Output",ExpressionUUID->"e20af5f3-b926-4362-9991-23deddd70ac1"]
}, Open  ]],
Cell[484168, 8791, 128, 1, 30, "Text",ExpressionUUID->"943c844e-01ff-46e1-8c02-2ebb7976b91b"],
Cell[CellGroupData[{
Cell[484321, 8796, 389, 10, 32, "Input",ExpressionUUID->"e6a49495-2dcf-48be-81f2-3a0bc51b2e19"],
Cell[484713, 8808, 53735, 904, 260, "Output",ExpressionUUID->"8b66720a-f9ea-465c-ae10-6e2ada66b5de"]
}, Open  ]],
Cell[538463, 9715, 217, 7, 30, "Text",ExpressionUUID->"06e56db0-1108-40ae-a0f5-60700fbff802"],
Cell[CellGroupData[{
Cell[538705, 9726, 563, 17, 35, "Input",ExpressionUUID->"38ab8f83-356b-4c50-907d-c7dd68d44473"],
Cell[539271, 9745, 1699, 36, 353, "Output",ExpressionUUID->"1d295418-8708-4b64-9f37-766c3eafec42"]
}, Open  ]],
Cell[540985, 9784, 163, 3, 30, "Text",ExpressionUUID->"9edf9a8b-9527-4d9d-84e3-3ec4744f8390"],
Cell[CellGroupData[{
Cell[541173, 9791, 760, 21, 117, "Input",ExpressionUUID->"ea0c396b-bdaf-46e4-9f37-d0074a282553"],
Cell[541936, 9814, 1931, 39, 367, "Output",ExpressionUUID->"40cfa2f6-a12f-4fcf-9c47-ca9b803ae774"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[543928, 9860, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"603120ae-f6a9-4b78-a9fc-f038cef0d985",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[544075, 9866, 128, 1, 64, "Section",ExpressionUUID->"495d1e40-7b75-42b4-9c82-517746ebe739"],
Cell[544206, 9869, 138, 1, 30, "Text",ExpressionUUID->"5d0cc4b1-5f54-48a7-a628-23afc5c807a5"],
Cell[CellGroupData[{
Cell[544369, 9874, 204, 5, 35, "Input",ExpressionUUID->"788f9988-08ee-44a7-935b-79941a717969"],
Cell[544576, 9881, 140, 4, 32, "Output",ExpressionUUID->"5c83f80f-a75a-4ed5-a198-d05e47790d38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544753, 9890, 284, 7, 35, "Input",ExpressionUUID->"ba85ff4c-e478-44f2-a1a3-307fcbed17eb"],
Cell[545040, 9899, 895, 27, 32, "Output",ExpressionUUID->"4e65e0bd-e22a-48d1-b9ef-49364cfd2891"]
}, Open  ]],
Cell[545950, 9929, 205, 6, 30, "Text",ExpressionUUID->"e5ca1e60-dcc8-44d6-94f1-de82a786b9a6"],
Cell[CellGroupData[{
Cell[546180, 9939, 264, 7, 35, "Input",ExpressionUUID->"91691755-8cd8-445f-b89b-496c3d4596c0"],
Cell[546447, 9948, 70, 1, 32, "Output",ExpressionUUID->"a71ddd1e-8100-4cbc-a2f2-33bf7052104e"]
}, Open  ]],
Cell[546532, 9952, 240, 7, 30, "Text",ExpressionUUID->"66f7e511-8bb6-49bf-9918-c7f32e965da8"],
Cell[CellGroupData[{
Cell[546797, 9963, 236, 6, 32, "Input",ExpressionUUID->"4b7b096f-4ee5-408b-b013-9aa7584baa30"],
Cell[547036, 9971, 182, 5, 32, "Output",ExpressionUUID->"3a23aff6-dc46-41a0-8b0c-af0a2b561767"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547255, 9981, 240, 6, 32, "Input",ExpressionUUID->"0ea60790-8421-433d-b566-5e912aaf4ff8"],
Cell[547498, 9989, 154, 4, 32, "Output",ExpressionUUID->"dc4d836b-959d-4864-a93f-f8acb32d76b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547689, 9998, 473, 16, 32, "Input",ExpressionUUID->"a3ce2096-38b7-4d4c-9925-f70506bd517f"],
Cell[548165, 10016, 432, 16, 55, "Output",ExpressionUUID->"65ca0c41-a05c-4779-b84f-7091465db297"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548634, 10037, 131, 2, 32, "Input",ExpressionUUID->"1cd19436-5d39-4d2a-a72e-14c34f130fb1"],
Cell[548768, 10041, 446, 16, 52, "Output",ExpressionUUID->"1d4544cd-b26e-4d83-89bd-bf4a088da9e0"]
}, Open  ]],
Cell[549229, 10060, 173, 4, 30, "Text",ExpressionUUID->"64034dc0-27fe-4593-bdf5-77b1256413d5"],
Cell[CellGroupData[{
Cell[549427, 10068, 127, 2, 32, "Input",ExpressionUUID->"28abe149-184a-4869-a8a5-c987b753d061"],
Cell[549557, 10072, 342, 12, 55, "Output",ExpressionUUID->"a34a6565-fa03-4274-b2aa-6e0aa5ff38eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549936, 10089, 125, 2, 32, "Input",ExpressionUUID->"b4f23db2-a8b4-45a7-8a5b-b8bb81f01427"],
Cell[550064, 10093, 432, 16, 55, "Output",ExpressionUUID->"583d93c0-56bf-4fdf-a4a1-4b96a23ab668"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550533, 10114, 128, 2, 32, "Input",ExpressionUUID->"55754eb7-8f7e-43b5-8a22-5303729ad581"],
Cell[550664, 10118, 655, 22, 53, "Output",ExpressionUUID->"a35a9f5f-c560-47a1-8438-3e15496920f3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[551380, 10147, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"30471479-9947-41b8-89ee-654a0b1a498a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[551527, 10153, 103, 1, 64, "Section",ExpressionUUID->"27d9361e-7fce-4cfb-96d5-a44454b3bc39"],
Cell[551633, 10156, 112, 1, 30, "Text",ExpressionUUID->"935e5a69-f43d-4b6d-a37e-6d9bbb702c3a"],
Cell[CellGroupData[{
Cell[551770, 10161, 226, 6, 32, "Input",ExpressionUUID->"a66038d5-1695-404d-9810-d456e1e363b7"],
Cell[551999, 10169, 173, 5, 32, "Output",ExpressionUUID->"56b982f4-3171-4072-870e-a54da24d4935"]
}, Open  ]],
Cell[552187, 10177, 300, 8, 30, "Text",ExpressionUUID->"3509d95e-5eae-4e87-94d1-ca09bf4114e6"],
Cell[552490, 10187, 208, 6, 30, "Text",ExpressionUUID->"c4f04b6e-2d4c-4be4-b077-0ff371297bef"],
Cell[CellGroupData[{
Cell[552723, 10197, 149, 3, 32, "Input",ExpressionUUID->"ce602747-8f7e-4dee-adff-70c085097833"],
Cell[552875, 10202, 150, 4, 32, "Output",ExpressionUUID->"5050740a-519e-43d8-9568-cdc07a16a5a9"]
}, Open  ]],
Cell[553040, 10209, 155, 3, 30, "Text",ExpressionUUID->"f2c1e83c-7e5a-47a3-b3de-b95ae38a43a5"],
Cell[CellGroupData[{
Cell[553220, 10216, 312, 8, 32, "Input",ExpressionUUID->"b71ce76c-0807-4ea2-ad74-e55e780f69ee"],
Cell[553535, 10226, 73, 1, 32, "Output",ExpressionUUID->"ddd5263a-1837-4e0a-a5a6-284e6f3c8ed0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[553669, 10234, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e9b83262-873d-4204-8447-17e3d69be960",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[553816, 10240, 112, 1, 64, "Section",ExpressionUUID->"32fd305e-bc9c-4dc2-bfbb-bd31adda8600"],
Cell[553931, 10243, 142, 1, 30, "Text",ExpressionUUID->"6a988087-ad29-4c1d-b853-1c29a506331f"],
Cell[CellGroupData[{
Cell[554098, 10248, 185, 4, 35, "Input",ExpressionUUID->"4f81b5be-802f-4eb4-9ff0-0a7cd062cf68"],
Cell[554286, 10254, 107, 3, 40, "Output",ExpressionUUID->"f5d43cef-a7fa-410f-ab31-a85665761ee5"]
}, Open  ]],
Cell[554408, 10260, 153, 3, 30, "Text",ExpressionUUID->"4775a10b-6749-4930-99b3-41c262f115a1"],
Cell[CellGroupData[{
Cell[554586, 10267, 248, 6, 35, "Input",ExpressionUUID->"0b762cca-9ac7-4114-81be-c9fb2a1910d6"],
Cell[554837, 10275, 70, 1, 32, "Output",ExpressionUUID->"8d3c8637-302a-4315-a732-6655cc269e10"]
}, Open  ]],
Cell[554922, 10279, 139, 1, 30, "Text",ExpressionUUID->"4c60f221-a53d-420c-86e6-2b41e8255056"],
Cell[CellGroupData[{
Cell[555086, 10284, 312, 9, 32, "Input",ExpressionUUID->"8646a099-1456-4efd-827a-f0bf2bc30036"],
Cell[555401, 10295, 361, 11, 32, "Output",ExpressionUUID->"296bea61-6d3f-4395-9863-a9b003754087"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555799, 10311, 162, 3, 32, "Input",ExpressionUUID->"6af1698a-5a11-429a-8c9b-2985461f8d28"],
Cell[555964, 10316, 141, 4, 32, "Output",ExpressionUUID->"185c7c6d-009b-482c-9ef7-adb1a79165dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556142, 10325, 155, 3, 32, "Input",ExpressionUUID->"7646584c-35ca-4e96-9cab-2251ce71a769"],
Cell[556300, 10330, 72, 1, 32, "Output",ExpressionUUID->"e4925453-cbc7-4eae-90ea-ab32ef5f0da7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556409, 10336, 166, 3, 32, "Input",ExpressionUUID->"5e82a679-91ef-4708-a0b0-80fbf833e347"],
Cell[556578, 10341, 115, 3, 32, "Output",ExpressionUUID->"5a17fedb-ba9a-4431-93d1-9d352bd3f11a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556730, 10349, 286, 9, 32, "Input",ExpressionUUID->"21a59b40-34c8-4a7d-a2f3-eb85026c849d"],
Cell[557019, 10360, 187, 6, 51, "Output",ExpressionUUID->"0e43b707-ae85-424b-b928-e496736b5319"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557243, 10371, 128, 2, 32, "Input",ExpressionUUID->"954e174f-9e47-4188-ab25-71dbd6db3b93"],
Cell[557374, 10375, 92, 2, 32, "Output",ExpressionUUID->"27a34ad8-1486-4934-8f1d-ae64913ce6d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557503, 10382, 132, 2, 32, "Input",ExpressionUUID->"3ed07291-b184-4022-85d8-e0d75ea50363"],
Cell[557638, 10386, 139, 4, 32, "Output",ExpressionUUID->"129cc26e-4e99-4dc7-a5cd-56155ff5c657"]
}, Open  ]],
Cell[557792, 10393, 111, 2, 32, "Input",ExpressionUUID->"df7f517a-809d-4474-bad3-ad4f4ea9a70c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[557952, 10401, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6de0b42f-3f3b-4749-9db3-ff112ed13f12",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[558099, 10407, 112, 1, 64, "Section",ExpressionUUID->"0eaf0727-cfe0-4b0f-ba1f-5b0ed6bad4f7"],
Cell[558214, 10410, 110, 1, 30, "Text",ExpressionUUID->"41e25c46-5ae9-46fa-9a15-f3a973940046"],
Cell[558327, 10413, 675, 22, 50, "Text",ExpressionUUID->"f2360505-1a1d-4328-824b-3f40c60576e5"],
Cell[559005, 10437, 187, 2, 30, "Text",ExpressionUUID->"adfa3977-37a0-4175-8810-3a12caa6ebe4"],
Cell[CellGroupData[{
Cell[559217, 10443, 502, 14, 36, "Input",ExpressionUUID->"e02e5077-77d7-4449-8051-eaec7c01bb9b"],
Cell[559722, 10459, 140, 4, 32, "Output",ExpressionUUID->"efa6e0f8-8f42-41df-b279-fb2d451deb78"]
}, Open  ]],
Cell[559877, 10466, 141, 1, 30, "Text",ExpressionUUID->"8595bfd4-67bf-4978-ac16-60323af85d0f"],
Cell[CellGroupData[{
Cell[560043, 10471, 152, 3, 32, "Input",ExpressionUUID->"59f63bbe-51ea-40ee-8775-09f8f958b562"],
Cell[560198, 10476, 141, 4, 32, "Output",ExpressionUUID->"bb95c10e-4a5b-4153-bdde-c4fe9176d911"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560376, 10485, 123, 2, 32, "Input",ExpressionUUID->"2d201540-62c2-4892-ab30-659f2d0c2c90"],
Cell[560502, 10489, 943, 29, 32, "Output",ExpressionUUID->"01186a50-373f-4c2a-aa91-440f43d9d1cf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[561506, 10525, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ca17759f-e485-4f99-a78e-84617ac0950d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[561653, 10531, 160, 2, 64, "Section",ExpressionUUID->"94f274d1-7cc8-4b7f-9b89-d59da2504c31"],
Cell[561816, 10535, 150, 3, 30, "Text",ExpressionUUID->"92c2a290-03e0-48eb-a892-ece94a21c0e4"],
Cell[CellGroupData[{
Cell[561991, 10542, 170, 4, 35, "Input",ExpressionUUID->"bb095fe7-c3a2-4aa2-97aa-42c017f5069e"],
Cell[562164, 10548, 162, 5, 32, "Output",ExpressionUUID->"3eb74106-2f5a-41ec-8b21-212e8874c632"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562363, 10558, 219, 6, 35, "Input",ExpressionUUID->"8e1498e3-c853-4e08-a367-60a520e8e3e6"],
Cell[562585, 10566, 237, 8, 32, "Output",ExpressionUUID->"425e80b6-3e61-4628-932b-29844dd07c5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562859, 10579, 191, 6, 35, "Input",ExpressionUUID->"670bc065-4f0a-4798-852a-16878dd5b9ca"],
Cell[563053, 10587, 470, 17, 32, "Output",ExpressionUUID->"93de93e3-17ed-48db-8488-20b0785aab66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563560, 10609, 303, 9, 32, "Input",ExpressionUUID->"8210b8c3-583a-4c57-8b36-152047bb1237"],
Cell[563866, 10620, 312, 10, 32, "Output",ExpressionUUID->"f2e96b69-24c3-4478-918d-3f3b55d8b99d"]
}, Open  ]],
Cell[564193, 10633, 134, 1, 30, "Text",ExpressionUUID->"5624a6ce-072d-46e5-ae51-6676e07da2d9"],
Cell[CellGroupData[{
Cell[564352, 10638, 254, 7, 36, "Input",ExpressionUUID->"b39e5ab5-59a6-43a5-ac77-627733ae205b"],
Cell[564609, 10647, 590, 20, 52, "Output",ExpressionUUID->"3b485d0b-03cf-441f-ba98-e744b6df2b5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565236, 10672, 263, 7, 35, "Input",ExpressionUUID->"5eb4b5d8-3a30-421c-b5d6-f7f8dd702cbc"],
Cell[565502, 10681, 119, 3, 52, "Output",ExpressionUUID->"e361f3ba-0d04-4a59-9c96-ca3134e1f1ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565658, 10689, 261, 7, 36, "Input",ExpressionUUID->"daefc7fd-8d45-4576-93e1-f851b49f5f19"],
Cell[565922, 10698, 70, 1, 32, "Output",ExpressionUUID->"dc325563-281f-40ec-9841-fb04022b11c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566029, 10704, 257, 7, 32, "Input",ExpressionUUID->"28a05019-5020-4e2f-8467-5d643aee7395"],
Cell[566289, 10713, 357, 12, 32, "Output",ExpressionUUID->"30edd543-ee4f-41c2-a3a7-a887c98cf015"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[566707, 10732, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"047d58ae-582d-4389-b30b-4690f68fd979",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[566854, 10738, 94, 1, 64, "Section",ExpressionUUID->"2755bade-686f-4952-a3e1-16df01201c72"],
Cell[566951, 10741, 130, 1, 30, "Text",ExpressionUUID->"0bf3a839-5c6a-445b-b121-262d7939a7f1"],
Cell[CellGroupData[{
Cell[567106, 10746, 117, 2, 32, "Input",ExpressionUUID->"ef755e51-562b-4496-af09-c33cc122288a"],
Cell[567226, 10750, 70, 1, 32, "Output",ExpressionUUID->"83f46161-6555-4eb7-8650-c5caf2111a76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567333, 10756, 122, 2, 32, "Input",ExpressionUUID->"dc907b58-4e57-4e09-9f52-66eeb2c17930"],
Cell[567458, 10760, 74, 1, 32, "Output",ExpressionUUID->"1fc233a5-0eb6-4efa-9a38-6a68b8428614"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567569, 10766, 122, 2, 32, "Input",ExpressionUUID->"d3930e07-8936-456f-9b38-13def2ca7ac0"],
Cell[567694, 10770, 73, 1, 32, "Output",ExpressionUUID->"d27d06e7-650a-4adf-9a64-f601caeee4e8"]
}, Open  ]],
Cell[567782, 10774, 123, 2, 32, "Input",ExpressionUUID->"c6a870db-84f1-4bea-b297-a9d82a200b97"],
Cell[567908, 10778, 134, 1, 30, "Text",ExpressionUUID->"f1330119-37b1-44c0-8289-44d0d5f14d0b"],
Cell[CellGroupData[{
Cell[568067, 10783, 260, 7, 32, "Input",ExpressionUUID->"d3b7b2c7-9f9b-4fd6-b8e0-1bdb426fd9ec"],
Cell[568330, 10792, 205, 6, 32, "Output",ExpressionUUID->"2b87ab66-0b3a-416a-aa70-60cdd29fcd85"]
}, Open  ]],
Cell[568550, 10801, 117, 1, 30, "Text",ExpressionUUID->"1e838af1-e026-44ef-8a94-89cfd00965da"],
Cell[CellGroupData[{
Cell[568692, 10806, 153, 3, 32, "Input",ExpressionUUID->"4975014f-1dd8-4ddb-86ca-bfae9780f734"],
Cell[568848, 10811, 661, 23, 58, "Output",ExpressionUUID->"f3fd219d-17cc-4a3b-bdca-56743afb07cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569546, 10839, 263, 8, 32, "Input",ExpressionUUID->"05b64ff9-e731-48f4-b821-3453f7d38435"],
Cell[569812, 10849, 409, 15, 37, "Output",ExpressionUUID->"769a7cdc-d19e-493b-abf1-533efb51481e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570258, 10869, 120, 2, 32, "Input",ExpressionUUID->"e4b5f51f-0071-43de-8851-cefec359cbc1"],
Cell[570381, 10873, 284, 9, 32, "Output",ExpressionUUID->"0b6a9996-9be9-44a2-a1fe-6d9ebadb6119"]
}, Open  ]],
Cell[570680, 10885, 218, 4, 30, "Text",ExpressionUUID->"7c9df65e-4c0b-42e4-97f2-d26988890992"],
Cell[CellGroupData[{
Cell[570923, 10893, 240, 8, 32, "Input",ExpressionUUID->"886d09e1-b947-4364-b3f9-e34458ca4956"],
Cell[571166, 10903, 282, 8, 32, "Output",ExpressionUUID->"014937b0-a321-4739-9371-80287d1749c8"]
}, Open  ]],
Cell[571463, 10914, 198, 4, 30, "Text",ExpressionUUID->"4be0cda5-babd-48cc-abd0-d1ea2ad140b9"],
Cell[CellGroupData[{
Cell[571686, 10922, 290, 9, 32, "Input",ExpressionUUID->"0c24262f-8ec8-4d37-b56f-2b736c4778c0"],
Cell[571979, 10933, 1124, 41, 56, "Output",ExpressionUUID->"172bc660-ad01-4247-abca-e0271a8c36b7"]
}, Open  ]],
Cell[573118, 10977, 159, 2, 30, "Text",ExpressionUUID->"7d0d3a16-bb68-48ff-a091-cbf65f4bdae7"],
Cell[CellGroupData[{
Cell[573302, 10983, 264, 8, 32, "Input",ExpressionUUID->"03ecd976-281d-47d9-be1f-d2bd6d4fb37f"],
Cell[573569, 10993, 1371, 48, 58, "Output",ExpressionUUID->"09efd169-9aba-47aa-8c1d-ccc58097deae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574977, 11046, 263, 8, 32, "Input",ExpressionUUID->"162788a9-d3e4-4b6a-96b9-f45a4f2bc503"],
Cell[575243, 11056, 741, 21, 32, "Output",ExpressionUUID->"80f95982-975f-4953-a68a-c2e5009b846d"]
}, Open  ]],
Cell[575999, 11080, 138, 1, 30, "Text",ExpressionUUID->"e62d0857-ddd4-47a2-a988-43c2f1ae66a9"],
Cell[CellGroupData[{
Cell[576162, 11085, 513, 17, 32, "Input",ExpressionUUID->"26a6fca1-fb82-4274-8816-15bb9f4158ff"],
Cell[576678, 11104, 452, 15, 50, "Output",ExpressionUUID->"7b4924d2-8208-47e2-a496-78007ded931d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[577191, 11126, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0bad8f49-59a1-447b-ae96-70dcd0040354",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[577338, 11132, 107, 1, 64, "Section",ExpressionUUID->"e8e6021c-c665-4f81-a452-67bf88959819"],
Cell[577448, 11135, 272, 5, 30, "Text",ExpressionUUID->"490999cc-fee8-48ff-aa31-0fb4df4cee55"],
Cell[577723, 11142, 155, 3, 30, "Text",ExpressionUUID->"dea12d4e-312f-4993-af86-d332314ddc6a"],
Cell[CellGroupData[{
Cell[577903, 11149, 326, 10, 32, "Input",ExpressionUUID->"0f7aaf27-0fcb-4198-ab47-1199d830aeef"],
Cell[578232, 11161, 450, 14, 49, "Output",ExpressionUUID->"3288352b-6e59-47a9-808c-9023f7e51e2a"]
}, Open  ]],
Cell[578697, 11178, 221, 4, 30, "Text",ExpressionUUID->"c5c77a9e-d152-4e9a-a811-a3e3dc38771c"],
Cell[CellGroupData[{
Cell[578943, 11186, 540, 16, 32, "Input",ExpressionUUID->"83948dfc-6344-45ba-ad2a-ca312b26a102"],
Cell[579486, 11204, 504, 16, 51, "Output",ExpressionUUID->"1b3dcba5-850d-42ef-afde-c8f7810ee552"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580027, 11225, 146, 3, 32, "Input",ExpressionUUID->"9923ed9c-cefd-4927-8028-73df00cb96a2"],
Cell[580176, 11230, 326, 10, 51, "Output",ExpressionUUID->"5480558c-27d1-4405-9521-e6e1e1b95ffa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580539, 11245, 202, 5, 32, "Input",ExpressionUUID->"d62fe45a-5bc5-46e9-b248-c731d9e470c2"],
Cell[580744, 11252, 198, 6, 35, "Output",ExpressionUUID->"c52b4e9a-3727-435c-9437-5c4a6ad238c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580979, 11263, 320, 9, 32, "Input",ExpressionUUID->"1a9d7a8c-0d45-43ca-a480-37e49f87cc4d"],
Cell[581302, 11274, 10656, 189, 237, "Output",ExpressionUUID->"fcd6ef71-91f0-43b1-8842-d5512c689164"]
}, Open  ]],
Cell[591973, 11466, 120, 1, 30, "Text",ExpressionUUID->"ffd42793-53f3-4161-bc3a-1c12d1283087"],
Cell[CellGroupData[{
Cell[592118, 11471, 497, 15, 32, "Input",ExpressionUUID->"c10b36c6-8700-4b9f-8f98-9a11f38a6d2c"],
Cell[592618, 11488, 384, 12, 32, "Output",ExpressionUUID->"13daad54-f8ac-4d38-a8fc-6ca81ffbec0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593039, 11505, 262, 7, 32, "Input",ExpressionUUID->"f0948ca6-b52b-46f7-902e-f5d37faa8e5f"],
Cell[593304, 11514, 16027, 277, 234, "Output",ExpressionUUID->"8bc038c4-95a4-45eb-af8c-a3d3bf8de080"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[609392, 11798, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"f0f807d0-97e6-4ba6-9c9e-efadec6f32d6",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[609539, 11804, 103, 1, 64, "Section",ExpressionUUID->"bdbe3202-d957-415a-8067-4f4283c1d730"],
Cell[609645, 11807, 178, 4, 30, "Text",ExpressionUUID->"50d1d806-3c03-41a7-9827-0fa775e0f613"],
Cell[609826, 11813, 153, 3, 30, "Text",ExpressionUUID->"9416eddd-bbda-49fe-8bdb-73a828714dfd"],
Cell[609982, 11818, 363, 8, 49, "Text",ExpressionUUID->"f89d7d2b-8ad4-4a46-bf41-dfe8940423e4"],
Cell[610348, 11828, 128, 1, 30, "Text",ExpressionUUID->"437f7d7e-32a1-461f-a659-db14d1ffdd0e"],
Cell[610479, 11831, 274, 11, 30, "Text",ExpressionUUID->"ef5acb99-dd01-43d2-a5ec-435957664a53"],
Cell[CellGroupData[{
Cell[610778, 11846, 224, 5, 54, "Input",ExpressionUUID->"e9504a3b-cc19-4313-bf00-2f77e3798ba8"],
Cell[611005, 11853, 88, 1, 32, "Output",ExpressionUUID->"d7d378d8-f788-4569-bb6d-94a9cebe747f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611130, 11859, 71, 1, 32, "Input",ExpressionUUID->"5706bcac-cf8c-4585-9145-8d73ed86c72a"],
Cell[611204, 11862, 87, 1, 32, "Output",ExpressionUUID->"61da9987-e147-4efc-9937-504448d83b9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611328, 11868, 68, 1, 32, "Input",ExpressionUUID->"6627b034-ec82-489b-bf03-dba9e32bce7a"],
Cell[611399, 11871, 87, 1, 32, "Output",ExpressionUUID->"7528f4b4-7f89-4721-b089-5c0575230a8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611523, 11877, 69, 1, 32, "Input",ExpressionUUID->"d3cf854c-7512-483c-8780-4ba969fb9913"],
Cell[611595, 11880, 90, 1, 32, "Output",ExpressionUUID->"6a0d1a1c-8420-434d-b54b-8bb07d6878f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611722, 11886, 69, 1, 32, "Input",ExpressionUUID->"bfb93f31-ccd4-4d91-99ed-1c7b5c17f5dd"],
Cell[611794, 11889, 90, 1, 32, "Output",ExpressionUUID->"9446bcea-0ca3-46ba-a272-d58346a1a19e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611921, 11895, 69, 1, 32, "Input",ExpressionUUID->"1a37c63f-9acb-45dc-84e3-ea2106c20a49"],
Cell[611993, 11898, 88, 1, 32, "Output",ExpressionUUID->"bd22463d-bbe7-45a1-a47a-dc3f22c4223c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612118, 11904, 69, 1, 32, "Input",ExpressionUUID->"c3b23e3b-b519-4917-87eb-628fb78c737a"],
Cell[612190, 11907, 91, 1, 32, "Output",ExpressionUUID->"a195b56d-9b32-4368-833b-512219511f91"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[612342, 11915, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6514e295-bb8a-441d-b7bd-40aeae0ba4cf",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[612489, 11921, 103, 1, 64, "Section",ExpressionUUID->"a3061ea7-11d0-445f-973f-c7a77cc27274"],
Cell[612595, 11924, 142, 1, 30, "Text",ExpressionUUID->"cb59e58f-5c25-49a9-872d-6c5b4c1a47d8"],
Cell[612740, 11927, 293, 7, 30, "Text",ExpressionUUID->"2cb173b4-8e2b-47de-9479-fe1b57c9f861"],
Cell[613036, 11936, 349, 11, 68, "Text",ExpressionUUID->"2a1067b7-c572-4579-88e7-bac67ca98ffa"],
Cell[613388, 11949, 199, 5, 32, "Input",ExpressionUUID->"d5175c19-5956-4e7d-bd93-b31fe4fa2816"],
Cell[613590, 11956, 291, 7, 49, "Text",ExpressionUUID->"8ece6343-5d01-4251-bff1-1405096f7787"],
Cell[CellGroupData[{
Cell[613906, 11967, 125, 2, 32, "Input",ExpressionUUID->"ef34f982-e7be-471b-b3bd-92f135464dfb"],
Cell[614034, 11971, 70, 1, 32, "Output",ExpressionUUID->"be74d349-17e6-45a0-83c9-150c1729068d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[614141, 11977, 186, 4, 32, "Input",ExpressionUUID->"f799ab8d-7340-4d5b-b545-9da1046ebc59"],
Cell[614330, 11983, 125, 3, 32, "Output",ExpressionUUID->"ad439478-91f4-4a61-bc21-16d4db6a1a47"]
}, Open  ]],
Cell[614470, 11989, 242, 5, 30, "Text",ExpressionUUID->"0c54c097-a78f-46ae-b31f-909e92638b07"],
Cell[614715, 11996, 259, 6, 68, "Text",ExpressionUUID->"d3d8edfd-4c00-4538-b273-52d181471a0e"],
Cell[614977, 12004, 158, 4, 49, "Text",ExpressionUUID->"ea4d7dd0-6c38-4c88-b17e-a08f8c2a5585"],
Cell[615138, 12010, 172, 4, 32, "Input",ExpressionUUID->"41d33563-7525-43db-a284-867edf81bd20"],
Cell[615313, 12016, 112, 1, 30, "Text",ExpressionUUID->"6dc43c0d-fcaf-4d0c-b35d-649e8a0834f6"],
Cell[CellGroupData[{
Cell[615450, 12021, 122, 2, 32, "Input",ExpressionUUID->"c967926c-9f39-4368-9a0c-6c3a8df398d4"],
Cell[615575, 12025, 72, 1, 32, "Output",ExpressionUUID->"4d700d3c-5520-4d30-be4c-f9327ac45d40"]
}, Open  ]],
Cell[615662, 12029, 188, 4, 30, "Text",ExpressionUUID->"b129a59f-5d61-4f8e-a6f4-0711da12abe8"],
Cell[CellGroupData[{
Cell[615875, 12037, 122, 2, 32, "Input",ExpressionUUID->"35d734ec-2cce-4b15-955a-523dd198e71f"],
Cell[616000, 12041, 99, 2, 32, "Output",ExpressionUUID->"b853f93b-fdba-4292-b209-10cd62205ac4"]
}, Open  ]],
Cell[616114, 12046, 107, 1, 30, "Text",ExpressionUUID->"e81a3605-8da4-49b4-ba96-9b81f7befca4"],
Cell[616224, 12049, 276, 7, 32, "Input",ExpressionUUID->"99578000-0e7a-4883-b115-bc49e230470b"],
Cell[CellGroupData[{
Cell[616525, 12060, 124, 2, 32, "Input",ExpressionUUID->"5ffed533-2c49-4a3f-bd7e-5ee05d541906"],
Cell[616652, 12064, 70, 1, 32, "Output",ExpressionUUID->"8adc1a97-416a-48f7-913c-cacfc8ee9b71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616759, 12070, 123, 2, 32, "Input",ExpressionUUID->"0f2b2c37-75d5-4a13-9608-9d05c1c492b1"],
Cell[616885, 12074, 78, 1, 32, "Output",ExpressionUUID->"40e1c957-3adc-40ab-891a-b8cacc411169"]
}, Open  ]],
Cell[CellGroupData[{
Cell[617000, 12080, 111, 2, 32, "Input",ExpressionUUID->"ab51394a-b174-47af-b1de-d79c769a5e29"],
Cell[617114, 12084, 76, 1, 32, "Output",ExpressionUUID->"90020328-e26e-4227-b2da-1d984d923eb0"]
}, Open  ]],
Cell[617205, 12088, 656, 21, 88, "Text",ExpressionUUID->"e7a73e70-4bb9-4623-9844-7cbf612778b6"],
Cell[617864, 12111, 495, 13, 75, "Input",ExpressionUUID->"d3c11343-5445-4afe-913b-913dec88bdca"],
Cell[CellGroupData[{
Cell[618384, 12128, 124, 2, 32, "Input",ExpressionUUID->"3495672f-d200-4aab-a235-e97e28106cfb"],
Cell[618511, 12132, 71, 1, 32, "Output",ExpressionUUID->"d37b0b8c-70d1-4a5e-bbac-42b6197e3706"]
}, Open  ]],
Cell[618597, 12136, 166, 3, 30, "Text",ExpressionUUID->"28c6629f-2ed6-4be8-b99e-bc9fef2eda54"],
Cell[CellGroupData[{
Cell[618788, 12143, 131, 2, 32, "Input",ExpressionUUID->"90bb9adf-441e-4670-997c-7f6c505857d6"],
Cell[618922, 12147, 71, 1, 32, "Output",ExpressionUUID->"7f7c2239-0695-433b-a883-6e2781623ffb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[619054, 12155, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"cfc8d7fc-28f7-4b42-9864-fbbba30dec8a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[619201, 12161, 113, 1, 64, "Section",ExpressionUUID->"67b0cf1e-e9c6-4e03-93cd-7c4e6351681f"],
Cell[619317, 12164, 121, 1, 30, "Text",ExpressionUUID->"09cde184-0068-43a7-98dd-d09d79c3839e"],
Cell[619441, 12167, 774, 23, 74, "Text",ExpressionUUID->"41da08b8-7b0b-4416-b68d-8756353a25ae"],
Cell[620218, 12192, 159, 3, 30, "Text",ExpressionUUID->"65cd41b9-f3d5-4eba-9be3-f68cc1659765"],
Cell[620380, 12197, 481, 14, 75, "Input",ExpressionUUID->"fc127e77-cc7f-42ee-b407-f6f957bb6f10"],
Cell[CellGroupData[{
Cell[620886, 12215, 121, 2, 32, "Input",ExpressionUUID->"ca8f23bf-11ca-4b41-bc96-84e2c470642d"],
Cell[621010, 12219, 95, 2, 32, "Output",ExpressionUUID->"5112b202-3449-4598-8352-61056a4a4c41"]
}, Open  ]],
Cell[621120, 12224, 931, 31, 91, "Text",ExpressionUUID->"a7b00971-cdd6-436f-a19f-cb9510ab40ca"],
Cell[622054, 12257, 531, 16, 36, "Text",ExpressionUUID->"a5e654f7-aa20-4ac5-8056-7cb2210737ba"],
Cell[622588, 12275, 125, 1, 30, "Text",ExpressionUUID->"8511842c-5acb-493e-b667-f4ea49b46d36"],
Cell[CellGroupData[{
Cell[622738, 12280, 203, 5, 35, "Input",ExpressionUUID->"76bbd45a-56dc-4b45-94d8-4b957b2fd195"],
Cell[622944, 12287, 226, 8, 32, "Output",ExpressionUUID->"d20d445f-f576-4298-8fbd-f006fdeb043d"]
}, Open  ]],
Cell[623185, 12298, 564, 20, 52, "Text",ExpressionUUID->"6257556f-045b-438e-bcd9-0d2a4ff6298b"],
Cell[623752, 12320, 351, 10, 49, "Text",ExpressionUUID->"251650dc-4210-4fec-b056-8bab9483f233"],
Cell[CellGroupData[{
Cell[624128, 12334, 465, 13, 75, "Input",ExpressionUUID->"9cf36a82-a7cd-4f49-ad1b-6639ca1f55ca"],
Cell[624596, 12349, 188, 6, 32, "Output",ExpressionUUID->"9e56b17d-0c30-4475-8f8e-9604f44b8e43"],
Cell[624787, 12357, 91, 2, 32, "Output",ExpressionUUID->"1af354c8-526d-47b1-8aef-da3c0ad98b88"],
Cell[624881, 12361, 138, 4, 32, "Output",ExpressionUUID->"e11adb07-9795-4dbf-9e3d-1201f67ad69c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[625056, 12370, 449, 12, 32, "Input",ExpressionUUID->"c275ce62-5fbb-4a29-9277-d8422cbe44ea"],
Cell[625508, 12384, 273, 9, 49, "Output",ExpressionUUID->"07d75460-040c-49fe-8ea2-fee6a441b7cd"]
}, Open  ]],
Cell[625796, 12396, 124, 1, 30, "Text",ExpressionUUID->"dc6be207-f30c-464b-b023-e0db0fab72d4"],
Cell[CellGroupData[{
Cell[625945, 12401, 245, 5, 32, "Input",ExpressionUUID->"b7a9863b-df56-4c89-9a3b-b590c2eec660"],
Cell[626193, 12408, 209, 7, 51, "Output",ExpressionUUID->"b57d4bc7-a42f-42c4-a843-b9ad059af5b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[626439, 12420, 342, 9, 32, "Input",ExpressionUUID->"cbaf80f7-eb03-4df4-bcf6-c18d7f576ec1"],
Cell[626784, 12431, 75, 1, 32, "Output",ExpressionUUID->"32bab79a-ae38-46fe-977a-e541709fe1a0"]
}, Open  ]],
Cell[626874, 12435, 132, 1, 30, "Text",ExpressionUUID->"1c4cfdbf-052d-4f14-8ecb-422bf5cb4593"],
Cell[627009, 12438, 175, 3, 32, "Input",ExpressionUUID->"f16d5c6f-340f-4dba-a011-21e987fa363f"],
Cell[627187, 12443, 153, 3, 30, "Text",ExpressionUUID->"cc4e4238-27f0-412d-a647-487f6632ce0c"],
Cell[CellGroupData[{
Cell[627365, 12450, 613, 19, 32, "Input",ExpressionUUID->"ea332f76-835e-4170-a859-cd33c7630ec8"],
Cell[627981, 12471, 441, 15, 49, "Output",ExpressionUUID->"a292f42e-8555-4abe-bc50-18fbea19623a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[628483, 12493, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"8da40911-864e-4cfc-a4ce-7485a984aca9",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[628630, 12499, 130, 1, 64, "Section",ExpressionUUID->"67f9fc54-0613-4910-a516-b2f6857bcc3b"],
Cell[628763, 12502, 199, 4, 30, "Text",ExpressionUUID->"e22dd3c4-4fc7-4e0e-8279-8330896ae700"],
Cell[628965, 12508, 115, 1, 30, "Text",ExpressionUUID->"7c074e35-b45e-4201-8ea9-1d0e9ef14390"],
Cell[CellGroupData[{
Cell[629105, 12513, 173, 4, 32, "Input",ExpressionUUID->"89bee112-d4ca-4ef0-bfd5-fdd12a781459"],
Cell[629281, 12519, 166, 4, 32, "Output",ExpressionUUID->"9c7f60be-867d-480f-bf66-bce05fec94ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629484, 12528, 1112, 28, 222, "Input",ExpressionUUID->"255ee124-314f-434f-a0ad-b4498f7d55c2"],
Cell[630599, 12558, 124, 3, 24, "Print",ExpressionUUID->"879412cd-6697-4782-b5ee-6fe86347f411"]
}, Open  ]],
Cell[CellGroupData[{
Cell[630760, 12566, 180, 4, 32, "Input",ExpressionUUID->"38786477-0f57-4a80-b9e9-5845fc90a3d3"],
Cell[630943, 12572, 166, 4, 24, "Print",ExpressionUUID->"92084a50-407e-4442-b166-fde12168ee2a"]
}, Open  ]],
Cell[631124, 12579, 252, 6, 49, "Text",ExpressionUUID->"b80c447b-aacf-426f-92a3-d94c00648d08"],
Cell[631379, 12587, 120, 1, 30, "Text",ExpressionUUID->"62cc2090-a9d8-4985-93b0-c27a2a230ab0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[631548, 12594, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ccf3fb7a-2a8a-437a-a313-05ab3abc830d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[631695, 12600, 115, 1, 64, "Section",ExpressionUUID->"d791c61a-71d8-4e2a-821b-15a6ba3f04e6"],
Cell[631813, 12603, 191, 6, 30, "Text",ExpressionUUID->"5f5f5e58-af9a-4d63-9fc2-2cbbd8e5fffa"],
Cell[632007, 12611, 195, 4, 30, "Text",ExpressionUUID->"e092667f-c0b4-40fc-ada7-3fd54cfba886"],
Cell[632205, 12617, 176, 4, 30, "Text",ExpressionUUID->"f75b3ae7-9a0e-4805-990f-e57901c1fabe"],
Cell[CellGroupData[{
Cell[632406, 12625, 264, 7, 35, "Input",ExpressionUUID->"690a8350-8d7d-4f31-9a6d-f5779c5ed596"],
Cell[632673, 12634, 209, 5, 32, "Output",ExpressionUUID->"890aea89-d561-4895-9695-1347b8c3abdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[632919, 12644, 153, 3, 32, "Input",ExpressionUUID->"38fd5502-fef0-4052-bba4-62c23f9b9f16"],
Cell[633075, 12649, 201, 5, 32, "Output",ExpressionUUID->"29711a2d-cf48-444c-8c22-b772a1184ea2"]
}, Open  ]],
Cell[633291, 12657, 159, 3, 30, "Text",ExpressionUUID->"4b369ee2-8d1e-4e4d-8964-9df9d0c1f21d"],
Cell[CellGroupData[{
Cell[633475, 12664, 124, 2, 32, "Input",ExpressionUUID->"06136571-6463-4fda-87ce-236a6ecc8121"],
Cell[633602, 12668, 203, 5, 32, "Output",ExpressionUUID->"e4204d3f-a6f1-4666-9e82-4024f4740eb4"]
}, Open  ]],
Cell[633820, 12676, 135, 1, 30, "Text",ExpressionUUID->"2e30909a-96d6-40c6-b702-127d85517ec6"],
Cell[633958, 12679, 288, 8, 35, "Input",ExpressionUUID->"1c74bff7-202b-45c2-bc74-1168ac5eeab3"],
Cell[CellGroupData[{
Cell[634271, 12691, 150, 3, 32, "Input",ExpressionUUID->"7efe783b-f746-4ff7-be78-a9abc5304074"],
Cell[634424, 12696, 1365, 45, 58, "Output",ExpressionUUID->"58cb3408-bb51-4f0a-8ef3-abbbdc7b25e1"]
}, Open  ]],
Cell[635804, 12744, 238, 6, 30, "Text",ExpressionUUID->"35431791-516e-4f9a-8cec-4ac20b581897"],
Cell[CellGroupData[{
Cell[636067, 12754, 321, 10, 35, "Input",ExpressionUUID->"eec256a3-46f1-44ce-9595-01f55384ddff"],
Cell[636391, 12766, 1365, 45, 58, "Output",ExpressionUUID->"8df95340-dacb-43d0-a132-58df98a559cd"]
}, Open  ]],
Cell[637771, 12814, 190, 4, 30, "Text",ExpressionUUID->"0db98a38-fb72-4b30-9106-4d464d4c470f"],
Cell[637964, 12820, 140, 1, 30, "Text",ExpressionUUID->"44387e57-75ad-481d-aa5a-2bff6f2c1d0f"],
Cell[CellGroupData[{
Cell[638129, 12825, 283, 8, 35, "Input",ExpressionUUID->"4e0d3163-11ec-43ad-9b10-7f24af8db64d"],
Cell[638415, 12835, 1367, 45, 58, "Output",ExpressionUUID->"acd2057d-6efa-4f7a-adf0-2587c3d96163"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[639843, 12887, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"273c7627-1fb9-4f2b-9b6a-11d5fa701d1d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[639990, 12893, 112, 1, 64, "Section",ExpressionUUID->"4e1584c0-b18d-4884-a88e-0e20831ba0ea"],
Cell[640105, 12896, 99, 1, 30, "Text",ExpressionUUID->"baebb3e4-5195-4785-8c06-9c76a1806243"],
Cell[CellGroupData[{
Cell[640229, 12901, 98, 1, 32, "Input",ExpressionUUID->"cf6b4586-b951-4cbf-a5c4-f6e2d187338e"],
Cell[640330, 12904, 209, 5, 32, "Output",ExpressionUUID->"a0454790-69f7-4a9a-8d7d-1c3f8ca7cf9b"]
}, Open  ]],
Cell[640554, 12912, 127, 1, 30, "Text",ExpressionUUID->"73d4942c-11c4-45b7-9c79-97f26fb04a3c"],
Cell[CellGroupData[{
Cell[640706, 12917, 157, 3, 32, "Input",ExpressionUUID->"940ec2d3-4b56-4c1f-912b-04cc15cebbc6"],
Cell[640866, 12922, 151, 4, 32, "Output",ExpressionUUID->"dbb2d040-1ddd-479a-bf3c-6ed4c035208c"]
}, Open  ]],
Cell[641032, 12929, 126, 1, 30, "Text",ExpressionUUID->"50e9ec25-e91c-4b9d-8026-ff34b80a7fc1"],
Cell[CellGroupData[{
Cell[641183, 12934, 200, 5, 32, "Input",ExpressionUUID->"145b09d8-f000-4d95-a55f-cc560a2c5e5f"],
Cell[641386, 12941, 167, 4, 32, "Output",ExpressionUUID->"51abd26b-f001-4c95-8148-aa452a79dbcd"]
}, Open  ]],
Cell[641568, 12948, 188, 4, 30, "Text",ExpressionUUID->"ff802cdd-439a-476b-9ffa-81f1a115a92d"],
Cell[641759, 12954, 105, 1, 30, "Text",ExpressionUUID->"bc54871e-3cec-4c31-99d5-ca3a1bd6bd43"],
Cell[CellGroupData[{
Cell[641889, 12959, 243, 7, 32, "Input",ExpressionUUID->"4c0cf09f-9e49-4961-9dbf-19836761a535"],
Cell[CellGroupData[{
Cell[642157, 12970, 71, 1, 24, "Print",ExpressionUUID->"48e2ffbc-51df-41f7-aac5-ffeb9c822197"],
Cell[642231, 12973, 71, 1, 24, "Print",ExpressionUUID->"24dd613c-80fa-48e9-9b7f-f98445d5955a"],
Cell[642305, 12976, 71, 1, 24, "Print",ExpressionUUID->"29e4262c-6ddf-4b1e-8684-d4a02d1b6663"],
Cell[642379, 12979, 69, 1, 24, "Print",ExpressionUUID->"56ce4838-8b68-41b3-bfcf-9b5cd4fb9a30"],
Cell[642451, 12982, 69, 1, 24, "Print",ExpressionUUID->"66331e5e-aea5-4176-aa3d-59a0898017cb"],
Cell[642523, 12985, 69, 1, 24, "Print",ExpressionUUID->"62a87171-e586-4287-88a9-b4efdc5547e2"],
Cell[642595, 12988, 68, 1, 24, "Print",ExpressionUUID->"d682ba6c-913c-4de3-90ec-9d86686a67a8"],
Cell[642666, 12991, 69, 1, 24, "Print",ExpressionUUID->"e0b620fc-d499-4a29-85db-ac0242da6aa0"],
Cell[642738, 12994, 71, 1, 24, "Print",ExpressionUUID->"5bdbcea4-df18-40c9-b648-87aa210963ac"],
Cell[642812, 12997, 72, 1, 24, "Print",ExpressionUUID->"9deca5b5-e44a-4488-b58b-e620d1c213a6"]
}, Open  ]]
}, Open  ]],
Cell[642911, 13002, 161, 3, 30, "Text",ExpressionUUID->"04f9afaa-e776-4dfb-b62a-2879c5537ef8"],
Cell[643075, 13007, 108, 1, 30, "Text",ExpressionUUID->"dba9ae52-6ea9-47ee-a5c5-f334a859fa74"],
Cell[CellGroupData[{
Cell[643208, 13012, 236, 6, 32, "Input",ExpressionUUID->"9c11c21e-456e-43f7-a1bb-969eb23ccfa5"],
Cell[643447, 13020, 326, 7, 32, "Output",ExpressionUUID->"c9cf4bcc-2b74-4b2f-8282-5ff13abcaba1"]
}, Open  ]],
Cell[643788, 13030, 126, 1, 30, "Text",ExpressionUUID->"8ddfbe53-aba1-4b0e-84b0-b5d25458e5fc"],
Cell[CellGroupData[{
Cell[643939, 13035, 128, 2, 32, "Input",ExpressionUUID->"42ce8331-9ff5-4cb2-8e31-da5f362c329b"],
Cell[644070, 13039, 326, 7, 32, "Output",ExpressionUUID->"e79768bb-dcae-47a2-927f-ed74ee8ebdf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644433, 13051, 180, 4, 32, "Input",ExpressionUUID->"374dcf6d-9d32-4362-be5d-60bdf61f1aa2"],
Cell[644616, 13057, 125, 3, 32, "Output",ExpressionUUID->"acf09b65-d88a-4c0e-a1b5-59d31cc3ea24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644778, 13065, 156, 3, 32, "Input",ExpressionUUID->"1f1863f8-1891-4205-8d67-fd5d3d4ecb84"],
Cell[644937, 13070, 70, 1, 32, "Output",ExpressionUUID->"f560fe2e-0777-4629-81b6-9106f33185ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645044, 13076, 159, 3, 32, "Input",ExpressionUUID->"4826c4d2-5ff6-425f-92d4-bc54768f01ef"],
Cell[645206, 13081, 72, 1, 32, "Output",ExpressionUUID->"8662d7a8-31d8-4ead-9594-6fa81f5d4f8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645315, 13087, 131, 2, 32, "Input",ExpressionUUID->"c797ad6d-4e1a-4f37-b205-e35d8283b8a7"],
Cell[645449, 13091, 72, 1, 32, "Output",ExpressionUUID->"1b10ae3e-cf34-4c76-9252-62c34ab0a40e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[645582, 13099, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"284e6635-d474-477e-908e-8e5a190b88ec",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[645729, 13105, 108, 1, 64, "Section",ExpressionUUID->"a93713bd-c509-4646-bbef-32037fb118da"],
Cell[645840, 13108, 180, 4, 30, "Text",ExpressionUUID->"5e1f0680-155e-4a03-ae67-4d8e077ee4d7"],
Cell[CellGroupData[{
Cell[646045, 13116, 456, 10, 117, "Input",ExpressionUUID->"9f48ffe3-6f8c-4e29-8d4f-0b430a1f86d2"],
Cell[646504, 13128, 72, 1, 32, "Output",ExpressionUUID->"a9faf40e-87ea-4aa5-a3df-939845c47cc2"],
Cell[646579, 13131, 85, 1, 24, "Print",ExpressionUUID->"ed215215-5bc2-4f93-abe7-5a6dfc60213b"]
}, Open  ]],
Cell[646679, 13135, 126, 1, 30, "Text",ExpressionUUID->"ee0b6b3d-484d-4171-9dfc-cc4e19ce8472"],
Cell[CellGroupData[{
Cell[646830, 13140, 1193, 30, 180, "Input",ExpressionUUID->"68211753-5bc7-4798-bee2-15ce2d74f55a"],
Cell[648026, 13172, 88, 1, 24, "Print",ExpressionUUID->"4f78a142-2c10-4443-8140-2bdfa64b7147"]
}, Open  ]],
Cell[648129, 13176, 207, 6, 30, "Text",ExpressionUUID->"a351d78e-b6e2-49d7-99f0-be32cbcddd70"],
Cell[CellGroupData[{
Cell[648361, 13186, 626, 14, 180, "Input",ExpressionUUID->"c666b684-0e0d-4297-ba5a-4f63cf422a15"],
Cell[CellGroupData[{
Cell[649012, 13204, 85, 1, 24, "Print",ExpressionUUID->"b0a2990b-1d25-45af-ae53-f2c0d94eea84"],
Cell[649100, 13207, 87, 1, 24, "Print",ExpressionUUID->"369eb716-e38a-442b-ab5a-48c236c17938"],
Cell[649190, 13210, 86, 1, 24, "Print",ExpressionUUID->"9c893fed-5ade-4480-aeb8-7637f707beff"],
Cell[649279, 13213, 88, 1, 24, "Print",ExpressionUUID->"49628aca-89bb-4bf6-ae78-2c9c9f1b5cd4"],
Cell[649370, 13216, 86, 1, 24, "Print",ExpressionUUID->"6d7b4b80-ae43-4248-aea2-f4c545efcdb1"],
Cell[649459, 13219, 85, 1, 24, "Print",ExpressionUUID->"35372170-0c8f-4d6b-aa95-f8ce824f0e2f"],
Cell[649547, 13222, 86, 1, 24, "Print",ExpressionUUID->"fb3ca32f-4637-4462-907f-4f8cea478594"],
Cell[649636, 13225, 85, 1, 24, "Print",ExpressionUUID->"7f6776af-af63-40ae-91b0-09fdbc17999a"],
Cell[649724, 13228, 85, 1, 24, "Print",ExpressionUUID->"971a46c8-9294-4fe4-bb08-e324836572a0"],
Cell[649812, 13231, 85, 1, 24, "Print",ExpressionUUID->"5bab5c49-d311-4a42-acc6-1c0e442387cc"]
}, Open  ]]
}, Open  ]],
Cell[649924, 13236, 116, 1, 30, "Text",ExpressionUUID->"2c84a256-e952-4be0-adf4-ba77d32f9b9b"],
Cell[CellGroupData[{
Cell[650065, 13241, 806, 20, 180, "Input",ExpressionUUID->"1e8f8f1a-5597-4282-b139-f798229dc174"],
Cell[CellGroupData[{
Cell[650896, 13265, 198, 5, 24, "Print",ExpressionUUID->"f54683fb-4ed0-49e4-85c0-a80152130f57"],
Cell[651097, 13272, 87, 1, 24, "Print",ExpressionUUID->"f649e391-587a-41aa-aaf3-0c4e62ca7abe"],
Cell[651187, 13275, 198, 5, 24, "Print",ExpressionUUID->"1e097436-e096-496f-a20f-af13e4973003"],
Cell[651388, 13282, 88, 1, 24, "Print",ExpressionUUID->"31dbb061-c3e2-4e62-bbfb-622bc1da4663"],
Cell[651479, 13285, 198, 5, 24, "Print",ExpressionUUID->"46431065-2de0-4d5a-b0f6-7fd77786a31a"],
Cell[651680, 13292, 84, 1, 24, "Print",ExpressionUUID->"727c83c9-abf4-487b-a0af-5ee6ac8efd0f"],
Cell[651767, 13295, 198, 5, 24, "Print",ExpressionUUID->"2cf4b564-3d8e-4c12-916e-93b50cbb6c98"],
Cell[651968, 13302, 85, 1, 24, "Print",ExpressionUUID->"85477500-c5c6-419b-b5f4-d2ac0c51604e"],
Cell[652056, 13305, 200, 5, 24, "Print",ExpressionUUID->"065d7015-a2dc-48b0-87a3-4a18788b490e"],
Cell[652259, 13312, 87, 1, 24, "Print",ExpressionUUID->"e14caf35-7c2b-4c36-bcda-a1f851c5b0bc"],
Cell[652349, 13315, 200, 5, 24, "Print",ExpressionUUID->"f962099b-d14f-4842-b032-e49bc022a3f1"],
Cell[652552, 13322, 87, 1, 24, "Print",ExpressionUUID->"4d00def3-0fa0-4b83-84ec-80f9b09248aa"],
Cell[652642, 13325, 198, 5, 24, "Print",ExpressionUUID->"5c3bdead-4e41-4b24-a5f5-2bf0ab1734a8"],
Cell[652843, 13332, 87, 1, 24, "Print",ExpressionUUID->"6ca6263f-37b2-4b85-8254-04230c9fe7ba"],
Cell[652933, 13335, 196, 5, 24, "Print",ExpressionUUID->"7b9093a9-bca9-49dc-98a1-587f02f55743"],
Cell[653132, 13342, 85, 1, 24, "Print",ExpressionUUID->"69685975-4989-4f6b-a159-4050e5c5204b"],
Cell[653220, 13345, 198, 5, 24, "Print",ExpressionUUID->"552242af-cd59-401a-a516-2596a725883c"],
Cell[653421, 13352, 85, 1, 24, "Print",ExpressionUUID->"fc0a7de1-72db-40e9-8369-c0578292f91b"],
Cell[653509, 13355, 198, 5, 24, "Print",ExpressionUUID->"73c6ac57-2f30-43d6-9fe0-3a55e18c2c39"],
Cell[653710, 13362, 86, 1, 24, "Print",ExpressionUUID->"3348f7b7-2303-4e36-9f70-7422116c45a5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[653869, 13371, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e67bfd9b-e8ff-479e-be26-9095a01b6aeb",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[654016, 13377, 157, 2, 64, "Section",ExpressionUUID->"2d756dd6-a12b-4d56-838b-6c3f8d7bd8a3"],
Cell[654176, 13381, 315, 8, 125, "Text",ExpressionUUID->"2aaf2d99-b93f-4512-8d7a-0427f19e8068"],
Cell[654494, 13391, 1976, 46, 201, "Input",ExpressionUUID->"2ea6b4b7-3dde-40b6-9928-f23c87073065"],
Cell[656473, 13439, 2079, 46, 264, "Input",ExpressionUUID->"c1716515-1769-4034-b20b-a723553eb38b"],
Cell[CellGroupData[{
Cell[658577, 13489, 225, 6, 32, "Input",ExpressionUUID->"c8748aa1-3905-43d2-b766-4aea9a4447bf"],
Cell[658805, 13497, 341, 7, 32, "Output",ExpressionUUID->"bd912474-8a41-4d93-9e0b-b2cd71e10cc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[659183, 13509, 131, 2, 32, "Input",ExpressionUUID->"7d1a84df-231f-4d1b-b9a5-f59d6e0f53fa"],
Cell[659317, 13513, 341, 7, 32, "Output",ExpressionUUID->"5ef132ef-0ab7-4516-99c9-825d3e77203e"]
}, Open  ]],
Cell[659673, 13523, 484, 15, 50, "Text",ExpressionUUID->"92e6342f-c468-4a18-a813-9839287c5b52"],
Cell[CellGroupData[{
Cell[660182, 13542, 379, 11, 32, "Input",ExpressionUUID->"0c52a957-2214-40bd-aa0f-13ac7f2d4f48"],
Cell[660564, 13555, 493, 16, 51, "Output",ExpressionUUID->"bf84341f-f16f-4eff-824b-a8f836b2fdd0"]
}, Open  ]],
Cell[661072, 13574, 118, 1, 30, "Text",ExpressionUUID->"3c2f5c55-43f0-4699-9426-a9a41021fa96"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[661239, 13581, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"027bee55-c5ab-4a62-986f-252d1610d825",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[661386, 13587, 114, 1, 64, "Section",ExpressionUUID->"3a349a2b-d69a-43a0-a0de-7e29c3fdf1c0"],
Cell[661503, 13590, 1432, 34, 180, "Input",ExpressionUUID->"5916de5c-a80b-47ba-b501-a971922f314d"],
Cell[CellGroupData[{
Cell[662960, 13628, 145, 2, 32, "Input",ExpressionUUID->"499b877e-124a-484f-95c8-876b8487bfba"],
Cell[663108, 13632, 341, 7, 32, "Output",ExpressionUUID->"060ad169-4e5e-4df8-a0cc-22970022d836"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[663510, 13646, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b9d04488-db9a-4577-988b-8890b6ebaa11",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[663657, 13652, 170, 5, 64, "Section",ExpressionUUID->"41b9081a-dfdd-45a5-963f-479072bb4ad7"],
Cell[663830, 13659, 128, 1, 30, "Text",ExpressionUUID->"9d0bddad-6aba-4a43-b0bd-7bf4b2f8f376"],
Cell[663961, 13662, 1218, 45, 150, "Text",ExpressionUUID->"c9ece03f-0abd-4fc9-9f64-6aee11872b2e"],
Cell[665182, 13709, 2241, 53, 340, "Input",ExpressionUUID->"d4860916-99ca-45ad-9b80-6ae0793f3337"],
Cell[CellGroupData[{
Cell[667448, 13766, 126, 2, 32, "Input",ExpressionUUID->"936dba6a-3c84-4a57-814a-a0dea79e7f8e"],
Cell[667577, 13770, 381, 7, 32, "Output",ExpressionUUID->"0cc94253-ee33-40df-a6b3-fb241400c867"]
}, Open  ]],
Cell[667973, 13780, 124, 1, 30, "Text",ExpressionUUID->"ad66d9f1-6762-4797-b47d-30a89c791e55"],
Cell[CellGroupData[{
Cell[668122, 13785, 187, 4, 32, "Input",ExpressionUUID->"ed0fd467-abed-430c-903f-3c8499cd8860"],
Cell[668312, 13791, 381, 7, 32, "Output",ExpressionUUID->"59b3fce7-0516-4ce6-bb32-b214f8db75c9"]
}, Open  ]],
Cell[668708, 13801, 172, 2, 30, "Text",ExpressionUUID->"e6c2645b-b383-4aa1-88bb-4402e40fd1cb"],
Cell[668883, 13805, 373, 10, 32, "Input",ExpressionUUID->"babacd4c-7ab4-4e37-8916-4069e0e860b5"],
Cell[CellGroupData[{
Cell[669281, 13819, 129, 2, 32, "Input",ExpressionUUID->"4310b317-1025-455a-a3af-3c2e4fbd893f"],
Cell[669413, 13823, 381, 7, 32, "Output",ExpressionUUID->"a78d7818-1784-498d-b263-dac185bd887c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[669855, 13837, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"70c63b02-7879-40b8-a1eb-d5afc70d26a8",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[670002, 13843, 101, 1, 64, "Section",ExpressionUUID->"e076fa73-1f6e-443a-a959-8e78510ba826"],
Cell[670106, 13846, 161, 3, 30, "Text",ExpressionUUID->"9a1e96f8-f5a5-488a-a510-846fd1aa1b51"],
Cell[670270, 13851, 160, 3, 30, "Text",ExpressionUUID->"851da296-acdc-400e-9650-1353adda3e71"],
Cell[CellGroupData[{
Cell[670455, 13858, 123, 2, 32, "Input",ExpressionUUID->"e346fd23-c928-45db-b0b5-748ac1d4dfb0"],
Cell[670581, 13862, 9753, 246, 161, "Output",ExpressionUUID->"9bef4c40-6e8d-4e91-a467-f69ecc9877c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680371, 14113, 426, 9, 32, "Input",ExpressionUUID->"14b58d7e-5bc0-46c9-83f5-ff640117c493"],
Cell[680800, 14124, 5909, 95, 180, "Output",ExpressionUUID->"02c5bb68-2951-4c71-bd3f-8970829bbec7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686746, 14224, 200, 4, 32, "Input",ExpressionUUID->"bc31642c-abc3-4bb2-98c9-1f2f6bddbb4d"],
Cell[686949, 14230, 12725, 284, 185, "Output",ExpressionUUID->"e364dcef-b9fd-4aff-8ddb-ef49a58ca39f"]
}, Open  ]],
Cell[699689, 14517, 203, 6, 30, "Text",ExpressionUUID->"0a177ca8-19aa-435e-85d5-4b6ac3a4593c"],
Cell[699895, 14525, 259, 5, 49, "Text",ExpressionUUID->"16190a9d-2298-4843-a37b-b79b1882dec1"],
Cell[700157, 14532, 143, 3, 32, "Input",ExpressionUUID->"03ff480a-7f29-45ff-b350-8ca35a507ea7"],
Cell[700303, 14537, 135, 1, 30, "Text",ExpressionUUID->"bafd666c-edad-4d93-9e51-d060558254c6"],
Cell[CellGroupData[{
Cell[700463, 14542, 161, 3, 32, "Input",ExpressionUUID->"13874177-fc58-434e-acaa-c3eb2da2e459"],
Cell[700627, 14547, 137, 3, 32, "Output",ExpressionUUID->"93c0d88f-44f5-4212-bec3-ed4ac9b4c8ae"]
}, Open  ]],
Cell[700779, 14553, 194, 4, 30, "Text",ExpressionUUID->"a7cd7ce0-6110-445c-9707-28099cbb6c05"],
Cell[CellGroupData[{
Cell[700998, 14561, 155, 3, 32, "Input",ExpressionUUID->"caa40fc6-e554-4d8f-84a2-89f40b9136c0"],
Cell[701156, 14566, 116, 3, 32, "Output",ExpressionUUID->"c52ac789-ebbf-40da-855d-9b2b41b5f2f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[701309, 14574, 246, 6, 32, "Input",ExpressionUUID->"6b753c79-48a1-4c76-85ec-9ca8436a3646"],
Cell[701558, 14582, 92, 2, 32, "Output",ExpressionUUID->"fbede6f8-c451-490d-81a7-c31a36f44cec"]
}, Open  ]],
Cell[701665, 14587, 1311, 32, 138, "Input",ExpressionUUID->"66d109d2-93d5-4915-8c73-5995324e2ba1"],
Cell[CellGroupData[{
Cell[703001, 14623, 155, 3, 32, "Input",ExpressionUUID->"0595727d-6e44-47b4-882d-e868a2ddf7d8"],
Cell[CellGroupData[{
Cell[703181, 14630, 198, 5, 24, "Print",ExpressionUUID->"eaa1e512-55c7-4ef9-8223-b055fa38bf2a"],
Cell[703382, 14637, 196, 5, 24, "Print",ExpressionUUID->"8e111c42-1059-4025-850b-0a22b4f1caf5"],
Cell[703581, 14644, 196, 5, 24, "Print",ExpressionUUID->"ba4e8857-c555-4085-bb71-422035b75095"],
Cell[703780, 14651, 196, 5, 24, "Print",ExpressionUUID->"f2e30cac-83c3-426a-9871-05a2aec344f2"],
Cell[703979, 14658, 195, 5, 24, "Print",ExpressionUUID->"93963b10-536b-4dbe-9b47-942c7ebf0c1b"],
Cell[704177, 14665, 196, 5, 24, "Print",ExpressionUUID->"db275f5f-c4f9-415b-bb11-9f681e6454d4"],
Cell[704376, 14672, 196, 5, 24, "Print",ExpressionUUID->"ce47b793-d29c-47cb-bd1d-0d467de52edd"],
Cell[704575, 14679, 196, 5, 24, "Print",ExpressionUUID->"4c2cfdc0-be01-4b6d-8e96-92c12f21a551"],
Cell[704774, 14686, 196, 5, 24, "Print",ExpressionUUID->"0e84499b-fe9d-4d62-b364-08d2f6bd3ed2"],
Cell[704973, 14693, 196, 5, 24, "Print",ExpressionUUID->"d936c023-6352-42a1-83fb-b418b9398605"],
Cell[705172, 14700, 198, 5, 24, "Print",ExpressionUUID->"6729c21f-5cc4-4166-a562-c7deeb3511a0"],
Cell[705373, 14707, 198, 5, 24, "Print",ExpressionUUID->"ecdbc894-d6bb-4518-b903-0b34124c9c02"],
Cell[705574, 14714, 200, 5, 24, "Print",ExpressionUUID->"f8d1ead5-46f6-437a-ab59-5116388c12fa"],
Cell[705777, 14721, 198, 5, 24, "Print",ExpressionUUID->"506014ae-d079-431a-905a-9a08176e5408"],
Cell[705978, 14728, 198, 5, 24, "Print",ExpressionUUID->"3d15320b-c39c-4640-adc8-50dbcc8eed84"],
Cell[706179, 14735, 198, 5, 24, "Print",ExpressionUUID->"e40371ac-c50d-4767-9c21-110751b54c88"],
Cell[706380, 14742, 198, 5, 24, "Print",ExpressionUUID->"bc671684-2c52-48a7-87c5-d2edccdd9d68"],
Cell[706581, 14749, 198, 5, 24, "Print",ExpressionUUID->"20429f4c-c3e4-4a3e-9c39-b32004640747"],
Cell[706782, 14756, 197, 5, 24, "Print",ExpressionUUID->"10369ece-a5aa-4f8a-b3be-0b34212bf649"],
Cell[706982, 14763, 198, 5, 24, "Print",ExpressionUUID->"3273e555-33da-4469-bfd5-91d578330b2a"],
Cell[707183, 14770, 198, 5, 24, "Print",ExpressionUUID->"0f6b9e88-f091-4cec-9bf6-e0187d7ad3da"],
Cell[707384, 14777, 200, 5, 24, "Print",ExpressionUUID->"7fd424eb-417c-4d8e-8958-62e8121327ce"],
Cell[707587, 14784, 198, 5, 24, "Print",ExpressionUUID->"59bc802f-7182-44b6-a278-100e45a68ed9"],
Cell[707788, 14791, 198, 5, 24, "Print",ExpressionUUID->"dd5a8a68-806a-4d50-92a3-df3590f43d76"],
Cell[707989, 14798, 200, 5, 24, "Print",ExpressionUUID->"fcf02bc5-e893-4cba-a2e5-2bb99f2cb94c"],
Cell[708192, 14805, 200, 5, 24, "Print",ExpressionUUID->"67e8bd84-de7e-4350-b1d5-64cb7e63efbb"],
Cell[708395, 14812, 198, 5, 24, "Print",ExpressionUUID->"c258782e-87fb-4402-904c-21a64f819b2f"],
Cell[708596, 14819, 198, 5, 24, "Print",ExpressionUUID->"ddc972e8-1cf4-4c6e-a2e7-188b01b9219d"],
Cell[708797, 14826, 198, 5, 24, "Print",ExpressionUUID->"8fd0d36a-fe7c-4464-9427-f1b20c232b93"],
Cell[708998, 14833, 200, 5, 24, "Print",ExpressionUUID->"6ed4761e-e7cc-473f-92ed-260e9aba8394"],
Cell[709201, 14840, 198, 5, 24, "Print",ExpressionUUID->"75ec3df8-e776-4d1b-975f-6dfb51ca3ed1"],
Cell[709402, 14847, 200, 5, 24, "Print",ExpressionUUID->"9b2bdc82-8484-4fbc-b238-5475f06c0a52"],
Cell[709605, 14854, 198, 5, 24, "Print",ExpressionUUID->"0f69495b-f282-4eeb-b0a2-57a58f6e0301"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[709852, 14865, 451, 12, 32, "Input",ExpressionUUID->"47d943d8-c047-4921-8b1f-a4c799fe77e4"],
Cell[CellGroupData[{
Cell[710328, 14881, 197, 5, 24, "Print",ExpressionUUID->"51c7533a-6a72-46bf-98c4-aef7c36736a7"],
Cell[710528, 14888, 196, 5, 24, "Print",ExpressionUUID->"cabd17fb-d007-404f-8aa7-baa557ed52af"],
Cell[710727, 14895, 196, 5, 24, "Print",ExpressionUUID->"d35e0014-ca3e-48df-b11c-45d77d4c0d81"],
Cell[710926, 14902, 196, 5, 24, "Print",ExpressionUUID->"32dc0f8a-7181-4412-ae4d-940519f1b6c8"],
Cell[711125, 14909, 196, 5, 24, "Print",ExpressionUUID->"58e3de04-2cde-4504-aeb2-dc85130ce018"],
Cell[711324, 14916, 196, 5, 24, "Print",ExpressionUUID->"026806da-5f8d-49c1-a0d4-16df25a99a36"],
Cell[711523, 14923, 198, 5, 24, "Print",ExpressionUUID->"08f20b09-8717-4cd0-a62b-742ff767dc4d"],
Cell[711724, 14930, 196, 5, 24, "Print",ExpressionUUID->"ea953a77-f9bf-42cf-84fa-ac135b0f372d"],
Cell[711923, 14937, 196, 5, 24, "Print",ExpressionUUID->"1ebd4b27-027f-4f1b-9b6b-0ae973cc8648"],
Cell[712122, 14944, 196, 5, 24, "Print",ExpressionUUID->"0ab5282d-c71a-4d0d-944d-a1c630239f14"],
Cell[712321, 14951, 200, 5, 24, "Print",ExpressionUUID->"c73e0176-ae85-4b7d-a65b-cdb3dec2d584"],
Cell[712524, 14958, 197, 5, 24, "Print",ExpressionUUID->"01ce5d7d-5b11-43da-a6d1-90ef096e6eeb"],
Cell[712724, 14965, 198, 5, 24, "Print",ExpressionUUID->"1fdf87d2-774e-4e90-b8be-5bafd2670703"],
Cell[712925, 14972, 198, 5, 24, "Print",ExpressionUUID->"62fd6819-64b7-4621-832d-31dd1054d4c7"],
Cell[713126, 14979, 200, 5, 24, "Print",ExpressionUUID->"ff1f583e-b078-48eb-964a-6073c47febb2"],
Cell[713329, 14986, 198, 5, 24, "Print",ExpressionUUID->"4a11c6a7-98c1-4ee1-94bd-e48a3202361e"],
Cell[713530, 14993, 198, 5, 24, "Print",ExpressionUUID->"8724744d-ca38-4cca-a547-a4b471581fbc"],
Cell[713731, 15000, 198, 5, 24, "Print",ExpressionUUID->"94be73a8-81a7-41e8-b08c-033de85295a9"],
Cell[713932, 15007, 200, 5, 24, "Print",ExpressionUUID->"6696f0c2-118f-4c08-8ef7-0c8676fe0171"],
Cell[714135, 15014, 198, 5, 24, "Print",ExpressionUUID->"a3255517-3338-4ad4-85f5-35014e416a3b"],
Cell[714336, 15021, 200, 5, 24, "Print",ExpressionUUID->"2d6c918c-8528-46d3-add1-46d379b0fff3"],
Cell[714539, 15028, 198, 5, 24, "Print",ExpressionUUID->"d2a5b4bb-2a74-4e08-891a-aa6aa8afbf79"],
Cell[714740, 15035, 198, 5, 24, "Print",ExpressionUUID->"f42c7cfb-68ea-4828-bef3-6986473d52f3"],
Cell[714941, 15042, 198, 5, 24, "Print",ExpressionUUID->"e7c7d499-aa96-4f8e-865d-3a0b67819be0"],
Cell[715142, 15049, 198, 5, 24, "Print",ExpressionUUID->"f9cffe86-4b2e-4076-889e-7e15dc4b7a01"],
Cell[715343, 15056, 198, 5, 24, "Print",ExpressionUUID->"5c7fb8e7-0573-4f40-b91e-a82cad52a1a6"],
Cell[715544, 15063, 200, 5, 24, "Print",ExpressionUUID->"ffe0cf04-7dd4-4033-9b68-32b3650d8f17"],
Cell[715747, 15070, 200, 5, 24, "Print",ExpressionUUID->"0022025d-6037-4b2a-86a2-1c699db88db4"],
Cell[715950, 15077, 197, 5, 24, "Print",ExpressionUUID->"ba514cf0-6bbb-4e8c-a413-2555631813a3"],
Cell[716150, 15084, 198, 5, 24, "Print",ExpressionUUID->"5400cae4-64ee-4a8a-add7-c50e7d329f96"],
Cell[716351, 15091, 198, 5, 24, "Print",ExpressionUUID->"4abbb266-4398-40bf-a818-c6a4436c8ffd"],
Cell[716552, 15098, 198, 5, 24, "Print",ExpressionUUID->"cbce9a73-a271-42b8-99b3-81a5a17f94a6"],
Cell[716753, 15105, 200, 5, 24, "Print",ExpressionUUID->"1fd4bb4b-be71-4c2d-bc47-94bfc9922b6f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[717002, 15116, 405, 11, 32, "Input",ExpressionUUID->"2f786a92-6361-4d90-8bb0-5382ddbe869e"],
Cell[CellGroupData[{
Cell[717432, 15131, 200, 5, 24, "Print",ExpressionUUID->"c9bc185e-52f0-4f40-9218-0b5b3b24b8ab"],
Cell[717635, 15138, 196, 5, 24, "Print",ExpressionUUID->"3e6b3864-dd48-4534-9382-2b1e576a883d"],
Cell[717834, 15145, 195, 5, 24, "Print",ExpressionUUID->"c9f0c86f-3658-4bdf-af04-a7b8d24634aa"],
Cell[718032, 15152, 200, 5, 24, "Print",ExpressionUUID->"acd2fad2-2bd6-43c7-8699-55b3b5888fe6"],
Cell[718235, 15159, 198, 5, 24, "Print",ExpressionUUID->"6a09d08f-ba64-45e9-b970-f0d20cf78ce2"],
Cell[718436, 15166, 196, 5, 24, "Print",ExpressionUUID->"595a57e5-1d16-4ba1-ba99-521f411022f2"],
Cell[718635, 15173, 198, 5, 24, "Print",ExpressionUUID->"9d65c953-a42b-44ee-82dc-289c89172dfa"],
Cell[718836, 15180, 198, 5, 24, "Print",ExpressionUUID->"a80f7389-bbf5-4ddd-b404-d51f77eafc1b"],
Cell[719037, 15187, 198, 5, 24, "Print",ExpressionUUID->"f4b37312-5ed1-4124-ab75-e9e543338d79"],
Cell[719238, 15194, 196, 5, 24, "Print",ExpressionUUID->"72a07f49-4e2f-4a3f-9562-df35514464df"],
Cell[719437, 15201, 196, 5, 24, "Print",ExpressionUUID->"04a137a8-a9ed-41e3-8288-bfc551fe784f"],
Cell[719636, 15208, 196, 5, 24, "Print",ExpressionUUID->"57c70c33-56d2-4767-a971-6f5a321f7f1d"],
Cell[719835, 15215, 198, 5, 24, "Print",ExpressionUUID->"476a29ba-a840-43fd-8935-7fbc84fb7fbe"],
Cell[720036, 15222, 196, 5, 24, "Print",ExpressionUUID->"56fd2797-48c8-4d62-8cf8-6e31116353da"],
Cell[720235, 15229, 196, 5, 24, "Print",ExpressionUUID->"0ff4beab-26d6-4f3b-ac7f-15c26339210b"],
Cell[720434, 15236, 200, 5, 24, "Print",ExpressionUUID->"fec56a8c-1d94-4548-8ea5-74b8900d351d"],
Cell[720637, 15243, 198, 5, 24, "Print",ExpressionUUID->"aab98bc9-20ba-4392-8e5a-c63ad65784f4"],
Cell[720838, 15250, 198, 5, 24, "Print",ExpressionUUID->"2f102629-5591-43d5-8ccc-da39afaf5dd0"],
Cell[721039, 15257, 198, 5, 24, "Print",ExpressionUUID->"98b7d4d1-9514-43af-afd6-089732d7e9cf"],
Cell[721240, 15264, 200, 5, 24, "Print",ExpressionUUID->"3c666ff5-0139-4ff3-8bd8-3721dcdcfe93"],
Cell[721443, 15271, 198, 5, 24, "Print",ExpressionUUID->"26ace72a-e6d1-4f9c-ace8-f067c40009de"],
Cell[721644, 15278, 200, 5, 24, "Print",ExpressionUUID->"80ad9208-4833-4ad4-98bb-92c78d56ebc6"],
Cell[721847, 15285, 200, 5, 24, "Print",ExpressionUUID->"94c93d1b-69df-4b52-84fd-0ef5bd722fcc"],
Cell[722050, 15292, 198, 5, 24, "Print",ExpressionUUID->"04948f79-3db5-47b6-9cdc-29cab6f9d74f"],
Cell[722251, 15299, 200, 5, 24, "Print",ExpressionUUID->"514a6a64-c433-48fb-b49e-ab4aa5c6e976"],
Cell[722454, 15306, 197, 5, 24, "Print",ExpressionUUID->"d4752074-dd3e-4128-8bea-0e5b5dc543b9"],
Cell[722654, 15313, 198, 5, 24, "Print",ExpressionUUID->"905ac67e-0cb9-40f2-ab43-d1c1be7f358f"],
Cell[722855, 15320, 198, 5, 24, "Print",ExpressionUUID->"c7950a17-6cf6-4bfe-b4d0-d39d288201e6"],
Cell[723056, 15327, 198, 5, 24, "Print",ExpressionUUID->"486b3b55-ece5-43a6-a02b-a9ba8da8420e"],
Cell[723257, 15334, 200, 5, 24, "Print",ExpressionUUID->"258fdcff-09d5-4ef8-bd7f-e694731b66c5"],
Cell[723460, 15341, 198, 5, 24, "Print",ExpressionUUID->"2c157504-d345-4754-ac1d-c73d161c1c40"],
Cell[723661, 15348, 198, 5, 24, "Print",ExpressionUUID->"2d4653df-c2f7-4a6b-b56f-f630cf201df0"],
Cell[723862, 15355, 198, 5, 24, "Print",ExpressionUUID->"169a39a1-0110-47dc-af21-367941881c6b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[724109, 15366, 169, 3, 32, "Input",ExpressionUUID->"bc9afeb4-a224-440e-9f73-e26395d2de92"],
Cell[724281, 15371, 175, 5, 32, "Output",ExpressionUUID->"6121f162-af04-4c0e-9c75-d3109e4b274b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[724493, 15381, 335, 8, 32, "Input",ExpressionUUID->"57d12cb7-06bf-4e22-98b7-bd08e3321cee"],
Cell[724831, 15391, 8802, 187, 360, "Output",ExpressionUUID->"bc5aa662-ddec-4586-8cca-67e4a2a93e6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[733670, 15583, 213, 4, 32, "Input",ExpressionUUID->"431f1038-a468-4cb7-937b-f95c18f168cb"],
Cell[733886, 15589, 322, 7, 32, "Output",ExpressionUUID->"f430cbb8-f1bd-4eef-a6b2-52b280ab2f4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[734245, 15601, 388, 8, 32, "Input",ExpressionUUID->"6644617f-44e6-4a6e-9230-be15ea4d5771"],
Cell[734636, 15611, 5436, 114, 290, "Output",ExpressionUUID->"5d5a7ab1-af90-40ac-900a-ae74017dc271"]
}, Open  ]],
Cell[CellGroupData[{
Cell[740109, 15730, 356, 9, 32, "Input",ExpressionUUID->"c2c71c10-bcc7-42c0-b673-2c678a6c417e"],
Cell[740468, 15741, 1667, 42, 75, "Output",ExpressionUUID->"c0fe8543-acf8-4cd1-a86f-149ca73204df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[742172, 15788, 419, 7, 32, "Input",ExpressionUUID->"88006152-8d70-4b2d-9d2f-fd27ec63d79d"],
Cell[742594, 15797, 11570, 229, 358, "Output",ExpressionUUID->"7943b7cc-e620-4cb5-85cb-1feee2869b7a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

